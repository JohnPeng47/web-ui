{
  "reported_to": "Monero",
  "reported_by": "anonimal ",
  "title": "CryptoNote: remote node DoS",
  "content": "\nSummary:\nRemote node DoS. See patch below.\nReleases Affected:\nAll Monero versions, including the recent v0.14.0.2. Possibly all CryptoNote implementations that aren't Zano.\nSteps To Reproduce:\nSince this is currently a theoretical attack, non-code PoC detailed in the patch below.\nSupporting Material/References:\nBased against current master 49afbd0c53d29656689f319c7d3543204ead4e59:\nCode 2.40 KiB\ncommit 6620d099800d8935596f59834ce389868b2851f0 (HEAD -> cryptonote)\ngpg: Signature made Fri 08 Mar 2019 02:57:58 AM UTC\ngpg:                using RSA key 12186272CD48E2539E2DD29B66A76ECF914409F1\ngpg: using pgp trust model\ngpg: Good signature from \"anonimal <anonimal@getmonero.org>\" [ultimate]\ngpg:                 aka \"anonimal <anonimal@kovri.io>\" [ultimate]\ngpg:                 aka \"anonimal <anonimal@sekreta.org>\" [ultimate]\ngpg: binary signature, digest algorithm SHA256, key algorithm rsa4096\nAuthor: anonimal <anonimal@getmonero.org>\nDate:   Fri Mar 8 02:21:38 2019 +0000\n\n    cryptonote_protocol_handler: prevent potential DoS\n    \n    Essentially, one can send such a large amount of IDs that core exhausts\n    all free memory. This issue can theoretically be exploited using very\n    large CN blockchains, such as Monero.\n    \n    Credit given to CryptoNote author 'cryptozoidberg' for the fix.\n\ndiff --git a/src/cryptonote_protocol/cryptonote_protocol_handler.h b/src/cryptonote_protocol/cryptonote_protocol_handler.h\nindex efd986b53..c9e35d2d9 100644\n--- a/src/cryptonote_protocol/cryptonote_protocol_handler.h\n+++ b/src/cryptonote_protocol/cryptonote_protocol_handler.h\n@@ -52,6 +52,7 @@ PUSH_WARNINGS\n DISABLE_VS_WARNINGS(4355)\n \n #define LOCALHOST_INT 2130706433\n+#define CURRENCY_PROTOCOL_MAX_BLOCKS_REQUEST_COUNT 500\n \n namespace cryptonote\n {\ndiff --git a/src/cryptonote_protocol/cryptonote_protocol_handler.inl b/src/cryptonote_protocol/cryptonote_protocol_handler.inl\nindex c8b43fb91..023d1b457 100644\n--- a/src/cryptonote_protocol/cryptonote_protocol_handler.inl\n+++ b/src/cryptonote_protocol/cryptonote_protocol_handler.inl\n@@ -889,6 +889,16 @@ namespace cryptonote\n   int t_cryptonote_protocol_handler<t_core>::handle_request_get_objects(int command, NOTIFY_REQUEST_GET_OBJECTS::request& arg, cryptonote_connection_context& context)\n   {\n     MLOG_P2P_MESSAGE(\"Received NOTIFY_REQUEST_GET_OBJECTS (\" << arg.blocks.size() << \" blocks, \" << arg.txs.size() << \" txes)\");\n+\n+    if (arg.blocks.size() > CURRENCY_PROTOCOL_MAX_BLOCKS_REQUEST_COUNT)\n+      {\n+        LOG_ERROR_CCONTEXT(\n+            \"Requested objects count is too big (\"\n+            << arg.blocks.size() << \") expected not more then \"\n+            << CURRENCY_PROTOCOL_MAX_BLOCKS_REQUEST_COUNT);\n+        drop_connection(context, false, false);\n+      }\n+\n     NOTIFY_RESPONSE_GET_OBJECTS::request rsp;\n     if(!m_core.handle_get_objects(arg, rsp, context))\n     {\nThis is essentially from https://github.com/hyle-team/zano/blob/master/src/currency_protocol/currency_protocol_handler.inl#L364 and confirmation will be needed that Monero doesn't already mitigate this elsewhere.\nI have the above patch in my branch ready for PR but if you want to create your own patch, please give credit to cryptozoidberg and myself (anonimal). Thank you.\nImpact\nRemote node DoS.\n\n",
  "severity": [
    7.5,
    null
  ],
  "bounty": null,
  "weaknesses": [
    "Uncontrolled Resource Consumption"
  ],
  "screenshots": {},
  "disclosed_date": 1562127600,
  "report_url": "https://hackerone.com/reports/506595",
  "is_multi_component": true,
  "complexity": "MEDIUM",
  "novelty": "MEDIUM",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Send a request to a remote node with a large number of block IDs (exceeding CURRENCY_PROTOCOL_MAX_BLOCKS_REQUEST_COUNT)."
    ],
    [
      2,
      "Observe the node's response, which should drop the connection if the request exceeds the limit, otherwise the node may exhaust memory."
    ]
  ],
  "vuln_description": "The vulnerability is a remote Denial of Service (DoS) attack where an attacker can send a request with an excessive number of block IDs to a CryptoNote-based node (like Monero), potentially causing the node to exhaust all free memory and crash. The fix involves setting a maximum limit (CURRENCY_PROTOCOL_MAX_BLOCKS_REQUEST_COUNT) on the number of block IDs that can be requested in a single message.",
  "reason": "The attack is straightforward and involves sending a single, albeit large, request to the node. It does not require multiple components, complex state manipulation, or novel logic. The vulnerability is in the handling of the request size, which is a common issue in network protocols.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}