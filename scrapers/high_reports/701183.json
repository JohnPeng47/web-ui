{
  "reported_to": "Node.js third-party modules",
  "reported_by": "mik317 ",
  "title": "[tree-kill] RCE via insecure command concatenation (only Windows)",
  "content": "\nI would like to report a RCE issue in the tree-kill module.\nIt allows to execute arbitrary commands remotely inside the victim's PC\nModule\nmodule name: tree-kill\nversion: 1.2.1\nnpm page: https://www.npmjs.com/package/tree-kill\nModule Description\nKill all processes in the process tree, including the root process.\nModule Stats\n[N/A] downloads in the last day\n[2,108,440] downloads in the last week\n[~10M] downloads in the last month\nVulnerability Description\nThe issue occurs because a user input is concatenated with a command that will be executed without any check. The issue arises here: https://github.com/pkrumins/node-tree-kill/blob/master/index.js#L20 (as you can see, the Linux part is sanitized, while the Win one no ... it simply uses the + operand to concatenate the input)\nSteps To Reproduce:\nCreate the following PoC file:\nCode 91 Bytes\n1// poc.js\n2var kill = require('tree-kill');\n3kill('3333332 & echo \"HACKED\" > HACKED.txt & ');\nExecute the following commands in another terminal:\nCode 140 Bytes\n1npm i tree-kill # Install affected module\n2dir # Check *HACKED.txt* doesn't exist\n3node poc.js #  Run the PoC\n4dir # Now *HACKED.txt* exists :)\nA new file called HACKED.txt will be created, containing the HACKED string Note I can't provide a screenshot as I'm working on Linux (I'll be able to reinstall win only the next week), but the code showed in the module (line 20) makes clear the attack is possible. Pls note I'm not sure of the batch syntax used , as said I can't verify it on a win machine. Before close the report, share with me eventual problems, in order to make me able to determine if the provided PoC is fully working or lacks in something :)\nPatch\nDon't concatenate commands using insecure user's inputs :)\nSupporting Material/References:\n[OPERATING SYSTEM VERSION]: Kali Linux (should be used a win OS ... I've simply checked the code)\n\n\nWrap up\nI contacted the maintainer to let them know: [N]\nI opened an issue in the related repository: [N]\nImpact\nRCE on tree-kill via insecure command concatenation\n\n",
  "severity": [
    7.0,
    null
  ],
  "bounty": null,
  "weaknesses": [
    "Code Injection"
  ],
  "screenshots": {},
  "disclosed_date": 1575507240,
  "report_url": "https://hackerone.com/reports/701183",
  "is_multi_component": false,
  "complexity": "MEDIUM",
  "novelty": "MEDIUM",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Install the vulnerable module: npm i tree-kill"
    ],
    [
      2,
      "Run the PoC script: node poc.js (where poc.js contains the malicious command injection)"
    ]
  ],
  "vuln_description": "The tree-kill module on Windows is vulnerable to Remote Code Execution (RCE) due to insecure command concatenation of user input without proper sanitization. This allows an attacker to inject arbitrary commands that will be executed on the victim's system.",
  "reason": "The vulnerability is straightforward to discover as it involves basic command injection via unsanitized user input in a command string. The attack does not require complex interactions or state manipulation, and command injection is a well-known vulnerability pattern.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "injection_metadata": {
    "is_simple_payload": true
  },
  "authnz_metadata": {
    "reason": "The vulnerability involves command injection via insecure command concatenation in a Windows-specific part of the tree-kill module. The methodology described focuses on authentication and authorization bugs (AuthN/AuthZ) and IDOR vulnerabilities within web applications, which are not applicable to this RCE vulnerability in a Node.js module. The issue is not related to user sessions, resource IDs, or navigation actions within a web application context.",
    "is_detectable": false
  }
}