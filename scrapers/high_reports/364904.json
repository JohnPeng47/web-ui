{
  "reported_to": "Monero",
  "reported_by": "moneromooo ",
  "title": "Misreporting of received amount by show_transfers",
  "content": "\nSummary:\nA sender may cause show_transfers to report a higher amount that was actually sent on the recipient's show_transfers output.\nDescription:\nDue to a flaw in process_new_transaction in wallet2.cpp, if the tx pubkey is present multiple times, it will decode outputs correctly as many times, and add up the amounts. This means the final amount reported by show_transfers will be the actual amount received multiplied by the number of duplicate tx pubkeys present in the transaction extra field.\nProbably does not work if the recipient expects an integrated address, since someone stripping the payment id and contacting support would be unlikely, so priming the exchange to be suspicious.\nThis was found by investigating a bug report: https://github.com/monero-project/monero/issues/3983.\nA simple patch fixes this: keeping track of pubkeys already scanned for, and skipping those that were already scanned.\nReleases Affected:\nCurrent master and release versions.\nSteps To Reproduce:\nduplicate the \"add_tx_pub_key_to_extra(tx, txkey_pub);\" line as many times as wanted in src/cryptonote_core/cryptonote_tx_utils.cpp\nsend a transaction to an exchange, without payment id (so it doesn't get processed automatically)\ngive the tx details to the support person, telling them to check show_transfers for the amount\nSupporting Material/References:\nSending wallet sending 5 (difficulty was set to 100 for ease of mining on an offline testnet):\nstop_mining: transfer 9zcJy2vKeDzCWJXgDApGP3ee1YJvUNWS7UQ9Vn33HT4aSyXKrE9Fs2YCCtGMo7NbuE7zzvYZADkU3SgScqxkkLwnNR1wJdn 5\nTransaction 1/1:\nSpending from address index 0\nSending 5.000000000000. The transaction fee is 0.000902370000\nTransaction 1/1: txid=<a99c5017037039466f3191940fb03d234b23716b6d135ba01154ebc34bf95b00>\nInput 1/1: amount=1000.000000000000\nOriginating block heights: 877928 920324 968699 1026359 1055454 1116950 1120914\n|_oo_o__o___o|\nIs this okay? (Y/Yes/N/No): y\nTransaction successfully submitted, transaction <a99c5017037039466f3191940fb03d234b23716b6d135ba01154ebc34bf95b00>\nYou can check its status by using the show_transfers command.\nstop_mining: start_mining 1\nMining started in daemon\nMining stopped in daemon\nHeight 1121390, txid <3ccb5e289b34e03a72319ac2ee8058e2cddffc73dfcdc1ac21a6155d37614a49>, 7.520434042934, idx 0/0\nHeight 1121390, txid <a99c5017037039466f3191940fb03d234b23716b6d135ba01154ebc34bf95b00>, 994.999097630000, idx 0/0\nHeight 1121390, txid <a99c5017037039466f3191940fb03d234b23716b6d135ba01154ebc34bf95b00>, spent 1000.000000000000, idx 0/0\nHeight 1121391, txid <1b7ecae0238c030486f073480d6431fe5e5958ad59b70b5dee6dec2d05a90259>, 7.519517330565, idx 0/0\nHeight 1121392, txid <a38f31c5d7257fa803417d9055124627567ea86c7b2c5d2456dbeeb89bc2c288>, 7.519502988224, idx 0/0\nstop_mining: get_tx_key a99c5017037039466f3191940fb03d234b23716b6d135ba01154ebc34bf95b00\nTx key: d8c626596898013ee57aee1e8c974408cd153ea6ef64b44cb9d888730434fc00\nRecipient wallet receiving the tx (it is set up to use millinero as unit, hence the x1000), all is good:\nStarting refresh...\nHeight 1121390, txid <a99c5017037039466f3191940fb03d234b23716b6d135ba01154ebc34bf95b00>, 5000.000000000, idx 0/0\nRefresh done, blocks received: 3\nAnd yet, show_transfers reports 20 monero (20k millinero):\n1121390 in 04:44:06 AM 20000.000000000 a99c5017037039466f3191940fb03d234b23716b6d135ba01154ebc34bf95b00 0000000000000000 0 -\nNote that check_tx_key will show the correct amount, so this is not a sure fire way if the exchange support person is vigilant and asks for such a proof.\nImpact\nScamming a recipient of a lot of monero (up to about 8k times more than sent). Given exchanges using payment ids are used to people forgetting them and having to credit manually, they're likely to wave this through more easily.\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Business Logic Errors"
  ],
  "screenshots": {},
  "disclosed_date": 1533183960,
  "report_url": "https://hackerone.com/reports/364904",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "MEDIUM",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Duplicate the 'add_tx_pub_key_to_extra(tx, txkey_pub);' line multiple times in src/cryptonote_core/cryptonote_tx_utils.cpp"
    ],
    [
      2,
      "Send a transaction to an exchange without a payment ID and provide the tx details to support, instructing them to check show_transfers for the amount"
    ]
  ],
  "vuln_description": "A flaw in process_new_transaction in wallet2.cpp allows a sender to manipulate show_transfers to report a higher amount than actually sent. If the tx pubkey is duplicated in the transaction extra field, the recipient's wallet will decode and sum the amounts for each duplicate, leading to an inflated reported amount.",
  "reason": "The vulnerability requires understanding of Monero's transaction structure and the specific behavior of the wallet when processing duplicate tx pubkeys. The interaction between the duplicated pubkeys and the wallet's amount calculation is non-obvious but does not involve complex state manipulation or novel logic.",
  "new_complexity": "MEDIUM",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}