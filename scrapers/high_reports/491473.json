{
    "reported_to": "X (Formerly Twitter)",
    "reported_by": "terjanq ",
    "title": "Protected tweets exposure through the URL",
    "content": "\nSummary\nLeaking sensitive information from protected tweets via a prepared website. This vulnerability could lead to exposure of information such as credit card numbers, bank account numbers, phone numbers, tokens, specific words or even the whole phrases but also the exposure of any additional information such as mentioned users, tweet time frames, tweet locations or hashtags.\nDescription\nWhen searching for further URL exposure vulnerabilities on Twitter I noticed that a very unsafe URL redirect happens, depending on search results, when a user searches for some tweets.\nThe endpoint I found is that:\nIf there are no search results for a query e.g. https://twitter.com/search?q=veryveryunsaferedirect&src=typd the URL changes to https://twitter.com/search?f=tweets&q=secret%20from%3Aterjanq&src=typd and it doesn't when results were found. As can be spotted, the f=tweets parameter was added and hence that state can be leaked.\nThe detection of the URL change can be achieved in several ways, I will use the technique I already reported to Twitter in https://hackerone.com/reports/491243 and also described in https://terjanq.github.io/Bug-Bounty/Twitter/url-information-disclosure-q67svgtbqarv/index.html.\nThanks to Advanced Search option the attacker can obtain very detailed information about the victim's tweets when knowing their username even if the tweets are set as private. The full list of available options is as in the image below.\nhttps://i.imgur.com/xJeaixk.png\nTo make the X-Search attack more effective, the attacker can use logical operators AND and OR to narrow down the search area. For example, by using phrases like 1001 OR 1002 OR 1003 OR 1004\u00a0\u2026 the attacker can use binary-search to extract all four-digit numbers in only few requests. However, I noticed that the limit for the number of words that can be used in the search is limited by 50. Nevertheless, that number is big enough to effectively extract those four-digit numbers -- it would only take around 300 requests to extract all of them and then by combining them in the correct order the whole phrases such as credit card number can be leaked.\nIn the Proof of Concept, I have prepared an easy attack abusing this observation for three-digit ones.\nSteps To Reproduce:\nPrepare test twitter accounts and enable the option Protect your Tweets in the settings.\nVisit the https://terjanq.github.io/Bug-Bounty/Twitter/protected-tweets-exposure-efvju8i785y1/poc.html and click the button to start the PoC.\nPut phrases you want to find in your tweets and fill the field from: with your account's username and submit the form.\nWhen you are done with the previous step, click on the button Fetch all 3-digit numbers from tweets and wait for the timer to stop.\nYou should see all the three-digit numbers from your tweets.\nPlease note that the exploit can be coded much more efficiently. For example, instead of using one window to make the redirects several can be used to speed it up. Also due to the style it was written in, false-positives can appear when lags occur (it has primitive protection implemented for that case, but it's not perfect)\nImpact:\nA regular user of Twitter can have their protected tweets leaked along with additional information such as mentioned users, tweet time frames, tweet locations etc.\nSupporting Material/References:\nI made a short video demonstrating the PoC in action\nhttps://youtu.be/bSUS4THqssY\nI attached copies of the files required to run the PoC (main file poc.html) but they can also be accessed via https://terjanq.github.io/Bug-Bounty/Twitter/protected-tweets-exposure-efvju8i785y1/\nImpact\nA regular user of Twitter can have their protected tweets leaked along with additional information such as mentioned users, tweet time frames, tweet locations etc.\n\n",
    "severity": [
        7.0,
        8.9
    ],
    "bounty": 560,
    "weaknesses": [
        "Information Disclosure"
    ],
    "screenshots": {},
    "disclosed_date": 1555706040,
    "report_url": "https://hackerone.com/reports/491473",
    "is_multi_component": true,
    "complexity": "HIGH",
    "novelty": "MEDIUM",
    "vuln_category": "WEB_APP",
    "steps": [
        [
            1,
            "Prepare test Twitter accounts and enable 'Protect your Tweets' in the settings."
        ],
        [
            2,
            "Visit the PoC page (https://terjanq.github.io/Bug-Bounty/Twitter/protected-tweets-exposure-efvju8i785y1/poc.html) and click the button to start the PoC."
        ],
        [
            3,
            "Enter the phrases you want to find in your tweets and fill the 'from:' field with your account's username, then submit the form."
        ],
        [
            4,
            "Click on the button 'Fetch all 3-digit numbers from tweets' and wait for the timer to stop."
        ],
        [
            5,
            "Observe all the three-digit numbers from your tweets displayed on the page."
        ]
    ],
    "vuln_description": "This vulnerability allows an attacker to leak sensitive information from protected tweets by exploiting a URL redirect behavior in Twitter's search functionality. By manipulating search queries and observing URL changes, an attacker can infer the presence of specific content in protected tweets, including sensitive data like credit card numbers, phone numbers, and other private information.",
    "reason": "The attack involves multiple components, including understanding Twitter's search behavior, URL manipulation, and the use of logical operators to narrow down search results. The subtle interaction between the search endpoint's response and URL changes is non-obvious, and the attack requires manipulating complex application states to extract information efficiently. Additionally, the use of binary search techniques to extract data adds a layer of novelty and complexity.",
    "new_complexity": "HIGH",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": "491243"
}