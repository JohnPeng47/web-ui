{
  "reported_to": "Node.js third-party modules",
  "reported_by": "danny_grander ",
  "title": "Arbitrary File Write Through Archive Extraction",
  "content": "\nI would like to report arbitrary file write vulnerability in adm-zip module\nIt allows attackers to write arbitrary files when a malicious archive is extracted.\nMore info here:\nhttps://snyk.io/research/zip-slip-vulnerability\nhttps://github.com/snyk/zip-slip-vulnerability#affected-libraries\nModule\nmodule name: adm-zip\nversion: <0.4.9\nnpm page: https://www.npmjs.com/package/adm-zip\nModule Description\nADM-ZIP for NodeJS with added support for electron original-fs\nADM-ZIP is a pure JavaScript implementation for zip data compression for NodeJS.\nModule Stats\nReplace stats below with numbers from npm\u2019s module page:\n1.5M downloads in the last week\nVulnerability\nVulnerability Description\nThe vulnerability is a form of directory traversal that can be exploited by extracting files from an archive. The premise of the directory traversal vulnerability is that an attacker can gain access to parts of the file system outside of the target folder in which they should reside. The attacker can then overwrite executable files and either invoke them remotely or wait for the system or user to call them, thus achieving remote command execution on the victim\u2019s machine. The vulnerability can also cause damage by overwriting configuration files or other sensitive resources, and can be exploited on both client (user) machines and servers.\nThe vulnerability is exploited using a specially crafted archive that holds directory traversal filenames (e.g. ../../evil.sh). The Zip Slip vulnerability can affect numerous archive formats, including tar, jar, war, cpio, apk, rar and 7z. If you\u2019d like the information on this page in a downloadable technical white paper, click the button below.\nMore info here:\nhttps://snyk.io/research/zip-slip-vulnerability\nhttps://github.com/snyk/zip-slip-vulnerability\nSteps To Reproduce:\nSample files can be found here: https://github.com/snyk/zip-slip-vulnerability/tree/master/archives\nPatch\nVulnerability is already fixed in ver 0.4.9.\nWe opened a fix PR on 23rd of April, https://github.com/cthackers/adm-zip/pull/212\nCVE id for the vuln was assigned: CVE-2018-1002204\nSupporting Material/References:\nThere are multiple libraries affected, across different ecosystems.\nFull list here: https://github.com/snyk/zip-slip-vulnerability#affected-libraries\nhttps://snyk.io/research/zip-slip-vulnerability\nhttps://github.com/snyk/zip-slip-vulnerability\nWrap up\nI contacted the maintainer to let them know: Y, and helped fix the issue\nI opened an issue in the related repository: N\nImpact\nWriting arbitrary files on the system\n\n",
  "severity": [
    8.2,
    null
  ],
  "bounty": null,
  "weaknesses": [
    "None"
  ],
  "screenshots": {},
  "disclosed_date": 1534099560,
  "report_url": "https://hackerone.com/reports/362118",
  "is_multi_component": false,
  "complexity": "MEDIUM",
  "novelty": "LOW",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Create a malicious ZIP archive containing files with directory traversal filenames (e.g., '../../evil.sh')."
    ],
    [
      2,
      "Extract the malicious archive using adm-zip version <0.4.9 on the target system."
    ]
  ],
  "vuln_description": "The vulnerability is a directory traversal issue in the adm-zip module that allows arbitrary file writes when extracting a malicious archive. Attackers can overwrite files outside the target directory, potentially leading to remote code execution or other malicious actions.",
  "reason": "The vulnerability is straightforward to exploit once the concept of directory traversal in archive extraction is understood. It does not require complex interactions between components or manipulation of application states. The attack vector is well-known and documented in the Zip Slip vulnerability class.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}