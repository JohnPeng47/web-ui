{
  "reported_to": "shopify-scripts",
  "reported_by": "h72 ",
  "title": "Null target_class DoS",
  "content": "\nThe Object#instance_exec method in mrbgems/mruby-object-ext/src/object.c executes a block in the context of an object. It sets the VM's target_class pointer to the singleton class of this object. target_class is used as the definition target for constants and methods.\nIf a singleton class cannot be created for an object, target_class is set to NULL. The OP_CLASS and OP_MODULE opcodes in the VM assume target_class is not null when defining new classes and modules.\nThis causes a null pointer dereference and segfaults the mruby VM.\nSample code:\nCode 32 Bytes\n11.instance_exec { class X; end }\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": 8000,
  "weaknesses": [
    "Uncontrolled Resource Consumption"
  ],
  "screenshots": {},
  "disclosed_date": 1481954520,
  "report_url": "https://hackerone.com/reports/183405",
  "is_multi_component": false,
  "complexity": "MEDIUM",
  "novelty": "MEDIUM",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Execute the following Ruby code in an mruby environment: `11.instance_exec { class X; end }`"
    ],
    [
      2,
      "Observe the mruby VM segfault due to a null pointer dereference"
    ]
  ],
  "vuln_description": "The vulnerability occurs when the `Object#instance_exec` method in mruby sets the VM's `target_class` pointer to NULL when a singleton class cannot be created for an object. The VM's OP_CLASS and OP_MODULE opcodes then dereference this NULL pointer, causing a segfault.",
  "reason": "The vulnerability requires understanding of mruby's internal VM mechanics, specifically how `target_class` is used and when it might be NULL. However, the attack itself is straightforward once this knowledge is acquired, involving only a single line of code to trigger the issue.",
  "new_complexity": "MEDIUM",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}