{
  "reported_to": "Nextcloud",
  "reported_by": "icewind1991 ",
  "title": "(Authenticated) RCE by bypassing of the .htaccess blacklist",
  "content": "\nStorage::copyFromStorage doesn't check the content of a folder it copies against the list of blacklisted files.\nMeaning that if a user has access to an external storage (inc. fed. shares) that contains a .htaccess file, he can move the .htaccess file to the local data directory.\nThe attack works on any nextcloud/owncloud since federated sharing was introduced that uses apache and has the data directory inside the webroot (as is default)\nSteps to reproduce:\nSetup an evil instance (nc1) that has the file blacklist disabled (Filesystem.php line 616)\ncreate a folder 'sharefolder/attack' in nc1 with the following files\n.htaccess configured to \"allow from all\"\nattack.php with the desired attack\n.htaccess configured to \"allow from all\"\nattack.php with the desired attack\nSetup a non-evil instance (nc2) (or pick an existing nc instance that you want to attack)\nFederated share 'sharefolder' from nc1 to nc2\nIn nc2, move 'sharefolder/attack' to 'attack' (outside the share)\nnavigate to http://nc2/data/userid/files/attack/attack.php\n\n",
  "severity": [
    9.0,
    null
  ],
  "bounty": null,
  "weaknesses": [
    "Code Injection"
  ],
  "screenshots": {},
  "disclosed_date": 1583078520,
  "report_url": "https://hackerone.com/reports/228825",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "HIGH",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Setup an evil instance (nc1) with the file blacklist disabled and create a folder 'sharefolder/attack' with malicious .htaccess and attack.php files."
    ],
    [
      2,
      "Federated share 'sharefolder' from nc1 to a non-evil instance (nc2) and move 'sharefolder/attack' to 'attack' in nc2."
    ],
    [
      3,
      "Navigate to http://nc2/data/userid/files/attack/attack.php to execute the attack."
    ]
  ],
  "vuln_description": "The vulnerability allows an authenticated user to bypass the .htaccess blacklist by copying malicious files from an external storage (including federated shares) to the local data directory, leading to Remote Code Execution (RCE) when the data directory is inside the webroot.",
  "reason": "The attack involves multiple components (evil instance setup, federated sharing, file manipulation) and requires understanding of the .htaccess blacklist bypass. However, the interaction between these components is relatively straightforward once the initial setup is understood.",
  "new_complexity": "MEDIUM",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "injection_metadata": {
    "is_simple_payload": false
  },
  "authnz_metadata": {
    "reason": "The vulnerability involves bypassing .htaccess blacklist checks by moving a malicious .htaccess file from an external storage to the local data directory. This action is performed within the same application context (Nextcloud/OwnCloud) and involves authenticated user sessions interacting with resources (files and directories). The methodology described involves testing actions with different user sessions and resource IDs, which would include testing file operations like moving files between directories with different user sessions. Since the attack involves authenticated actions and resource manipulation within the same application, it falls under the scope of the described detection methodology.",
    "is_detectable": true
  }
}