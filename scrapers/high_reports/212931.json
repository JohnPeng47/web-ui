{
  "reported_to": "Internet Bug Bounty",
  "reported_by": "geeknik ",
  "title": "heap-buffer-overflow (buffer read overrun) in curl: ourWriteOut() src/tool_writeout.c:115",
  "content": "\nCurl is a ubiquitous tool in use by millions of people around the world. I reported this flaw to the curl security mailing list on 10 March 2017:\nCode 975 Bytes\n1./curl -q -K test000\n2==21754==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60200000dbb2 at pc 0x0000004fcd39 bp 0x7ffcd27dc250 sp 0x7ffcd27dc248\n3READ of size 1 at 0x60200000dbb2 thread T0\n4    #0 0x4fcd38 in ourWriteOut /root/curl/src/tool_writeout.c:115:3\n5    #1 0x4ec947 in operate_do /root/curl/src/tool_operate.c:1669:11\n6    #2 0x4e053e in operate /root/curl/src/tool_operate.c:2024:20\n7    #3 0x4de5a6 in main /root/curl/src/tool_main.c:252:14\n8    #4 0x7fad0a96fb44 in __libc_start_main /build/glibc-qK83Be/glibc-2.19/csu/libc-start.c:287\n9    #5 0x4c407c in _start (/root/curl/src/curl+0x4c407c)\n10\n110x60200000dbb2 is located 0 bytes to the right of 2-byte region [0x60200000dbb0,0x60200000dbb2)\n12allocated by thread T0 here:\n13    #0 0x4a69fb in malloc (/root/curl/src/curl+0x4a69fb)\n14    #1 0x7fad0a9cf989 in __strdup /build/glibc-qK83Be/glibc-2.19/string/strdup.c:42\n15\n16SUMMARY: AddressSanitizer: heap-buffer-overflow /root/curl/src/tool_writeout.c:115 ourWriteOut\nFixed by the developers on 12 March 2017:\nhttps://github.com/curl/curl/commit/1890d59905414ab84a35892b2e45833654aa5c13\nFrom the git commit:\nCode 187 Bytes\n1If a % ended the statement, the string's trailing NUL would be skipped\n2and memory past the end of the buffer would be accessed and potentially\n3displayed as part of the --write-out output.\nFrom the curl security mailing list:\nCode 225 Bytes\n1It's possible that the data past the end of the buffer could get displayed as\n2part of the --write-out output (up to the first nul character, anyway), so\n3theoretically, it could write out a password or secret key or something.\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Memory Corruption - Generic"
  ],
  "screenshots": {},
  "disclosed_date": 1526499420,
  "report_url": "https://hackerone.com/reports/212931",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "MEDIUM",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Run curl with the -K option pointing to a test file: `./curl -q -K test000`"
    ],
    [
      2,
      "Observe the heap-buffer-overflow error triggered by AddressSanitizer"
    ]
  ],
  "vuln_description": "The vulnerability is a heap-buffer-overflow in curl's ourWriteOut function in src/tool_writeout.c. When a % character ends the write-out statement, the function skips the string's trailing NUL and accesses memory past the end of the buffer. This could potentially display sensitive data (like passwords or secret keys) from adjacent memory locations in the --write-out output.",
  "reason": "The vulnerability is straightforward to trigger with a simple command-line argument and does not require complex interactions between components or manipulation of application state. The issue is localized to a specific string parsing function with a clear boundary error.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}