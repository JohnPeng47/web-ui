{
    "reported_to": "Node.js third-party modules",
    "reported_by": "danny_grander ",
    "title": "flatmap-stream malicious package (distributed via the popular events-stream)",
    "content": "\nI would like to report a case of malicious package (flat-stream) that made it's way into many other npm packages. One such popular package is event-stream (user dominictarr transferred the ownership of an npm module to another user because he wasn't actively maintaining it. That user then added malicious dependency to the package)\nSee discussion here:\nhttps://github.com/dominictarr/event-stream/issues/116\nModule\nmodule name: flatmap-stream\nversion: [MODULE VERSION]\nnpm page: https://www.npmjs.com/package/flatmap-stream (removed from npm by now)\nModule Description\nIt is not yet clear what the malicious code was doing.\nSee discussion here: https://github.com/dominictarr/event-stream/issues/116#issuecomment-441737695\nModule Stats\nReplace stats below with numbers from npm\u2019s module page:\nflatmap-stream is not popular, but event-stream is very popular (1,996,440 downloads per week)\nImpact\nRCE\n\n",
    "severity": [
        10.0,
        null
    ],
    "bounty": null,
    "weaknesses": [
        "Embedded Malicious Code"
    ],
    "screenshots": {},
    "disclosed_date": 1543289160,
    "report_url": "https://hackerone.com/reports/450006",
    "is_multi_component": true,
    "complexity": "HIGH",
    "novelty": "MEDIUM",
    "vuln_category": "CODE",
    "steps": [
        [
            1,
            "Identify the event-stream package as a dependency in your project."
        ],
        [
            2,
            "Check the dependencies of event-stream to find the malicious flatmap-stream package."
        ]
    ],
    "vuln_description": "The vulnerability involves a malicious package (flatmap-stream) that was added as a dependency to the popular event-stream npm package. The malicious code was inserted after the original maintainer transferred ownership to another user. The exact purpose of the malicious code is unclear, but it poses a risk of Remote Code Execution (RCE).",
    "reason": "The discovery of this vulnerability required identifying a malicious package hidden within a popular npm package's dependencies. The attack involved a non-obvious interaction where a trusted package was compromised through a transfer of ownership, and the malicious code was subtly introduced as a dependency.",
    "new_complexity": "HIGH",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}