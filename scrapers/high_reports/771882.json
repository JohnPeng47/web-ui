{
  "reported_to": "DRIVE.NET, Inc.",
  "reported_by": "konqi ",
  "title": "\u0425\u0440\u0430\u043d\u0438\u043c\u044b\u0439 XSS \u0432 Business-\u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0435, \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438",
  "content": "\n\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0443\u044f\u0437\u0432\u0438\u043c\u043e \u043a \u0430\u0442\u0430\u043a\u0430\u043c \u0422\u0438\u043f\u0430 \"\u041c\u0435\u0436\u0441\u0430\u0439\u0442\u043e\u0432\u043e\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432\". \u0422\u0438\u043f XSS - \u0425\u0440\u0430\u043d\u0438\u043c\u044b\u0439 (Persistent). \u0414\u043b\u044f \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0430\u0442\u0430\u043a\u0438 \u043d\u0443\u0436\u043d\u043e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0430\u0439\u0442\u0435 drive2.ru \u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0431\u0438\u0437\u043d\u0435\u0441-\u0430\u043a\u043a\u0430\u0443\u043d\u0442. \u041f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u043c \u0432 \u043f\u0430\u043d\u0435\u043b\u044c \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0435\u0439 \u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0432\u0441\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043f\u043e\u043b\u044f \u0434\u043b\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043d\u0430 \u0441\u0430\u0439\u0442\u0435. \u041d\u0430\u043c \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442 \u043f\u043e\u043b\u0435 \"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438\" \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043d\u0430 \u0441\u0430\u0439\u0442\u0435 \u0431\u0435\u0437 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0438. \u0417\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0444\u043e\u0440\u043c\u0443 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438, \u0430 \u0432 \u043f\u043e\u043b\u0435 \"\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438\" \u043f\u0438\u0448\u0435\u043c \u043d\u0430\u0448 payload, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:\nCode 37 Bytes\n1<svg/onload=confirm(document.domain)>\n<image_0>\nImpact\n\u0423\u044f\u0437\u0432\u0438\u043c\u043e\u0441\u0442\u044c \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e\u0439 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u043f\u0430\u0434\u0430\u044e\u0442 \u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 HTML \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043f\u043e \u0440\u0430\u0437\u043d\u043e\u043c\u0443, \u043e\u0442 \u0431\u0430\u043d\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0444\u0438\u0448\u0438\u043d\u0433\u0430 \u0434\u043e \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0430\u0442\u0430\u043a\u0438 XSS. \u0412 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0439 XSS \u0445\u0440\u0430\u043d\u0438\u043c\u044b\u0439, \u0447\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u0430\u0442\u0430\u043a\u0443 \u0431\u043e\u043b\u0435\u0435 \u043e\u043f\u0430\u0441\u043d\u044b\u043c, \u0442\u0430\u043a \u043a\u0430\u043a \u043d\u0435\u0442 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0436\u0435\u0440\u0442\u0432\u0435 \u0441\u0441\u044b\u043b\u043a\u0443 \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432\u0440\u0435\u0434\u043e\u043d\u043e\u0441\u043d\u044b\u0439 \u043a\u043e\u0434. \u041f\u0440\u0438 \u0431\u0440\u0430\u0443\u0437\u0438\u043d\u0433\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438 XSS payload \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0441\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438. \u0421 \u043f\u043e\u043c\u043e\u0449\u044c\u044e XSS \u0430\u0442\u0430\u043a\u0443\u044e\u0449\u0438\u0439 \u043c\u043e\u0436\u0435\u0442 \u043a\u0440\u0430\u0441\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u043a\u0443\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u044b \u0444\u043b\u0430\u0433\u043e\u043c \"httpOnly\". \u041f\u043e\u043c\u0438\u043c\u043e \u044d\u0442\u043e\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0440\u0435\u0434\u0438\u0440\u0435\u043a\u0442 \u043d\u0430 \u0432\u0440\u0435\u0434\u043e\u043d\u043e\u0441\u043d\u044b\u0435 \u0441\u0430\u0439\u0442\u044b \u0438 \u0442\u0430\u043a \u0434\u0430\u043b\u0435\u0435. \u0414\u043b\u044f \u0437\u0430\u0449\u0438\u0442\u044b \u043e\u0442 \u043f\u043e\u0434\u043e\u0431\u043d\u044b\u0445 \u0443\u044f\u0437\u0432\u0438\u043c\u043e\u0441\u0442\u0435\u0439 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u044e \u0442\u0449\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u043f\u0430\u0434\u0430\u044e\u0442 \u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 HTML. \u0421\u043f\u0435\u0446\u0441\u0438\u043c\u0432\u043e\u043b\u044b \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u044b \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0430\u0442\u0430\u043a\u0438 XSS/Content Injection \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0441\u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0432 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438 HTML. \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0444\u043b\u0430\u0433\u0438 \"secure\" \u0438 \"httpOnly\" \u0434\u043b\u044f \u0441\u0435\u0441\u0441\u0438\u043e\u043d\u043d\u044b\u0445/\u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0445 \u043a\u0443\u043a.\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Cross-site Scripting (XSS) - Stored"
  ],
  "screenshots": {
    "image_0": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/9WMrGKATRThMgpyTVsLd23dz?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_2.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_2.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2F5LD6M4%2F20250326%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250326T015606Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjELf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDr%2BL76Rnmq5Ct6TWBY26afD6Q45nl6IcyRCrQY9csp3gIhAKo6bco77fF57OZTg4VMHKofmH%2B8l1KwSqQWK45OMVMjKrIFCB8QAxoMMDEzNjE5Mjc0ODQ5IgxdPJL4fS0vJUKn2YAqjwXKLmXw5nMOhcPElmARMhEWIaDFwXlSDP43Q8Hn1xteDASL07PuPbOnFHOVWrwS7EKp6jBTrQUwTUvGKSxddyJXuG0GfnSNdtiS82EkFX9mQ41UMJ03QKWXBVE9Sec78%2FjBk6z%2Bv7Y1vGhBM283l93vsqlE%2Fuo5hI%2BHSLQQvtA9GpZYPvp9xylBe2YVilLNCdNCGCb8VG0MJuhlUuLMY9xKaGN%2BENez7t2wQAKZ%2FBvB%2FGVkTpvFZCV%2FInwBntC11WCfiWwozXvMoF0InmBCtmYsipmCaql47h1AjQR9x1POeG%2BVun2zK2KQqdjKoa%2F5njuuTHBAA0GeIUpN9uWPjyYMdMi2D7EOqHsjlkIsPcMm1cVjQ8xv7tSbpdDEh9%2FiJnwMJUK4xQIVdC349qt6m%2FmBazv94mzFsdiR24%2B3QBgRmd75IGCzYT99nUJYAGMv%2BEutcFfBdlL9B4JxCbU94F4fSxeqj10B8GJDvnvHyladYuL9MHE4Nw4Be2q%2BNzNbie4dVtqcBnTwS9vQo59ogI3IHhdtOqnrzk1xIBEyAJM9ROH%2BqXwRVJSMTDMzsH1vvhvTa4ojAYhAUW0iyYVlyseqKdGA7h%2Fss5KIVvOu1ymlxMB%2FgNdosQA3F8UH5AGkpdGidbVJz2Y18dZ%2FXoSgSESq1Gf%2B7t2EvYiPXZIMXX2vo2yw9Utsoa68CsGB1p%2Bl6KXklJgStPTOI5ZWqOmXXp1FdEhQTQvMnqefx9o7s9b5WQPyakwq5MexGnEoNtA0n58nEfQwMqtLtFxK%2F7K%2BrvUodxQizzbegfq0MLftfQH5F4c3I7SDfmanXc3r5%2FZutF%2BZ1XFpBofRBku6tr3qQwve%2FKKh6fQU8TuJG6HIYWz4MJ%2FXjL8GOrABIlcii%2Fk8xgo0N1ikGtLE1YgPflJYtd%2Bna%2BpIGOUgH1ztp1Nurm%2FSiC4nYJGFwCgi5TzAQ5wSv2Y57ty7IOJ8R5aIzxdlO1ZlkXGydC9MClrOW50Y5jPeECjCtYO0Y%2BJxYgkl5euKkeztbsDWLO7FKJwyAEdXX59L9vUFgHVgUjWYJh96ycbCLI8e6f4JHyKC%2BhLjlV7PYnsVvdiS0wcwOG1lRfnTn5h1CX%2B%2FkQcmG0k%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=c337e2f2c4d56599dbcf57edf65742787d61a6763c7f859989741ac21ba88569"
  },
  "disclosed_date": 1579290120,
  "report_url": "https://hackerone.com/reports/771882",
  "is_multi_component": false,
  "complexity": "MEDIUM",
  "novelty": "LOW",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Register an account on drive2.ru and upgrade to a Business account"
    ],
    [
      2,
      "Navigate to the company management panel and enter a malicious payload (e.g., '<svg/onload=confirm(document.domain)>') in the 'Company Name' field"
    ]
  ],
  "vuln_description": "The application is vulnerable to stored XSS attacks via the 'Company Name' field in the Business account settings. The input is not properly sanitized, allowing execution of arbitrary JavaScript when the company page is viewed.",
  "reason": "The vulnerability is straightforward to discover as it involves a common XSS payload in a standard input field without any complex interactions or state manipulations required. The steps to reproduce are simple and follow a typical XSS testing methodology.",
  "new_complexity": "LOW",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "authnz_metadata": {
    "reason": "The XSS vulnerability involves injecting malicious scripts into a stored field ('\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u043f\u0430\u043d\u0438\u0438') which is then rendered without proper sanitization. This does not involve authentication or authorization bypass, nor does it involve swapping user sessions or resource IDs. The methodology described focuses on AuthN/AuthZ and IDOR vulnerabilities, which are not applicable here.",
    "is_detectable": false
  }
}