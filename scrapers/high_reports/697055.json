{
    "reported_to": "Semmle",
    "reported_by": "testanull ",
    "title": "Worker container escape lead to arbitrary file reading in host machine [again]",
    "content": "\nSummary:\nAfter a successful build, LGTM allow user to view the file list.\nBy default, only source code files and build config files are reserved (lgtm.yml and .lgtm.yml).\nIf there are both files in folder, LGTM will process lgtm.yml file and skip .lgtm.yml, but it still keeps both of files in directory.\nBy making symlink to .lgtm.yml file, after successful build, it will point to HOST MACHINE file!\nSteps To Reproduce:\nCreate a simple project which LGTM can build successful. In this report, I use this project (https://github.com/testanull/test11)\nCreate file: lgtm.yml with a valid config content, for example:\nCode 74 Bytes\n1extraction:\n2  java:\n3    index:\n4      build_command:\n5      - ./custom-build\nMake a symlink point to a HOST MACHINE file/directory with name: .lgtm.yml\nAfter successful build, .lgtm.yml file will contain the host machine file content!\nPoC of reading /etc/passwd is attached below\nImpact\nGive attacker ability to explore the host machine, expose more sensitive informations from it.\n\n",
    "severity": [
        9.3,
        null
    ],
    "bounty": 2000,
    "weaknesses": [
        "Privilege Escalation"
    ],
    "screenshots": {},
    "disclosed_date": 1571635920,
    "report_url": "https://hackerone.com/reports/697055",
    "is_multi_component": false,
    "complexity": "LOW",
    "novelty": "LOW",
    "vuln_category": "CODE",
    "steps": [
        [
            1,
            "Create a simple project that LGTM can build successfully."
        ],
        [
            2,
            "Create a file named 'lgtm.yml' with a valid configuration content."
        ],
        [
            3,
            "Make a symlink named '.lgtm.yml' pointing to a file/directory on the host machine."
        ],
        [
            4,
            "After a successful build, the '.lgtm.yml' file will contain the host machine file content."
        ]
    ],
    "vuln_description": "The vulnerability allows an attacker to read arbitrary files on the host machine by exploiting a symlink issue in LGTM's file handling. By creating a symlink named '.lgtm.yml' pointing to a host machine file, the attacker can access the content of that file after a successful build.",
    "reason": "The attack involves understanding LGTM's file handling logic, specifically how it processes '.lgtm.yml' files when 'lgtm.yml' is also present. The interaction between the symlink and the file processing logic is subtle but not overly complex. The attacker needs to know about the file handling behavior and how symlinks can be exploited in this context.",
    "new_complexity": "MEDIUM",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null,
    "idor_detectable": false,
    "authnz_byppass_detectable": false,
    "is_simple_payload": false,
    "injection_metadata": {
        "is_simple_payload": false
    },
    "authnz_metadata": {
        "idor_detectable": false,
        "authnz_byppass_detectable": false
    }
}