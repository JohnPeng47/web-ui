{
  "reported_to": "Internet Bug Bounty",
  "reported_by": "jordyzomer ",
  "title": "Buffer overflow in PyCArg_repr in _ctypes/callproc.c for Python 3.x to 3.9.1",
  "content": "\nTL;DR Description\nPython 3.x through 3.9.1 has a buffer overflow in PyCArg_repr in _ctypes/callproc.c, which may lead to remote code execution in certain Python applications that accept floating-point numbers as untrusted input, as demonstrated by a 1e300 argument to c_double.from_param. This occurs because sprintf is used unsafely. The CVE number used for this vulnerability is CVE-2021-3177.\nDetails\nThere's a buffer overflow in the PyCArg_repr() function in _ctypes/callproc.c.\nThe buffer overflow happens due to not checking the length of th sprintf() function on line:\ncase 'd':\nsprintf(buffer, \"<cparam '%c' (%f)>\",\nself->tag, self->value.d);\nbreak;\nBecause we control self->value.d we could make it copy extreme values. For example we could make it copy 1e300 which would be a 1 with 300 zero's to overflow the buffer.\nThis could potentially cause RCE when a user allows untrusted input in these functions.\nProof of Concept\nfrom ctypes import *\nc_double.from_param(1e300)\nbuffer overflow detected : terminated\nAborted\nReferences\nMISC:https://bugs.python.org/issue42938\nMISC:https://github.com/python/cpython/pull/24239\nMISC:https://python-security.readthedocs.io/vuln/ctypes-buffer-overflow-pycarg_repr.html\nImpact\nAvailability\nBuffer overflows generally lead to crashes. Other attacks leading to lack of availability are possible, including putting the program into an infinite loop.\nAccess Control\nBuffer overflows often can be used to execute arbitrary code, which is usually outside the scope of a program\u2019s implicit security policy.\nOther\nWhen the consequence is arbitrary code execution, this can often be used to subvert any other security service.\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": 1500,
  "weaknesses": [
    "Classic Buffer Overflow"
  ],
  "screenshots": {},
  "disclosed_date": 1629937920,
  "report_url": "https://hackerone.com/reports/1084342",
  "vuln_category": "CODE",
  "is_multi_component": false,
  "complexity": "MEDIUM",
  "novelty": "MEDIUM",
  "steps": [
    [
      1,
      "Import the ctypes module in Python"
    ],
    [
      2,
      "Execute the following code: `c_double.from_param(1e300)`"
    ]
  ],
  "vuln_description": "A buffer overflow vulnerability exists in the PyCArg_repr function within _ctypes/callproc.c in Python versions 3.x through 3.9.1. This vulnerability arises due to unsafe use of sprintf when handling floating-point numbers, allowing an attacker to trigger a buffer overflow by providing an extremely large value (e.g., 1e300) as input. This could potentially lead to remote code execution in applications that accept untrusted floating-point input.",
  "reason": "The vulnerability is straightforward to discover as it involves a single, well-documented function with a clear trigger (a large floating-point number). The attack does not require multiple components, complex state manipulation, or novel logic. The issue is primarily due to improper bounds checking in a standard library function.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}