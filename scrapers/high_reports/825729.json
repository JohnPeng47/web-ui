{
  "reported_to": "Node.js third-party modules",
  "reported_by": "mik317 ",
  "title": "[logkitty] RCE via insecure command formatting",
  "content": "\nI would like to report a RCE issue in the logkitty module.\nIt allows to execute arbitrary commands remotely inside the victim's PC\nModule\nmodule name: logkitty\nversion: 0.7.0\nnpm page: https://www.npmjs.com/package/logkitty\nModule Description\nDisplay pretty Android and iOS logs without Android Studio or Console.app, with intuitive Command Line Interface.\nModule Stats\n[170,222] downloads in the last week\nVulnerability Description\nThe issue occurs because a user input is formatted inside a command that will be executed without any check. The issue arises here: https://github.com/zamotany/logkitty/blob/master/src/android/adb.ts#L55\nSteps To Reproduce:\nCheck there aren't files called HACKED\nExecute the following commands in another terminal:\nCode 198 Bytes\n1npm i logkitty # Install affected module\n2logkitty android app 'test; touch HACKED' #  Note the *touch command* is inside the *'* (single quote), so it's an argument, while it will be executed anyway\n<image_0>\nPatch\nDon't format commands using insecure user's inputs :)\nSupporting Material/References:\n[OPERATING SYSTEM VERSION]: Kali Linux\n\n\nWrap up\nI contacted the maintainer to let them know: [N]\nI opened an issue in the related repository: [N]\nImpact\nRCE via command formatting on logkitty\n\n",
  "severity": [
    7.8,
    null
  ],
  "bounty": null,
  "weaknesses": [
    "Code Injection"
  ],
  "screenshots": {
    "image_0": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/afQq4mFhBRYp8YRwFhQLtLLn?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2020-03-21_01-46-19.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2020-03-21_01-46-19.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVS47X3CA%2F20250326%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250326T005315Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjELf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDxYss4YIGls0cszZQ1SH%2B1xSdoErdhUvyV5RSVsfYSpAIhALgtyBSIuiyvfvrOuahp2dR7dhplGI0zsujwEWu%2Bq6%2BEKrIFCCAQAxoMMDEzNjE5Mjc0ODQ5Igz7reJAfU2xzcJQlysqjwUwgbkDy8FeHuIgjjQZSSQ%2Fwz2JcJJwoIVgnjZMbFWvXxA0hPyrfIjcwtLeyzF3ok5GehIXn91Wy7fDCUkrUU7A5VMhWYEvLV3DxDrYmNMuLZpE%2FWRUJYWQmSgVx2gZtW9%2FqsiGnwRNXYUZa5T6KF%2BUA31gpR%2Bu%2BFMPUkwNvxNyEBRHypojNYRFlzo5EggbbRP8aZmRqD833mDpafMDKiDfNA28eH79vkmbDUKFi%2FRhWykONG8JRQheb75v1GX31hrk1L8u1zPHTFbLn71p2H5wjZmEoonQGf5RhFmpW1zbbUEV65nl5DnLFaOjxUYksFgcGBJco0OtVsqN8nqdspsBJvQy6Qqc4X%2FkzuDXD%2BPYx3S7BO8Xva3s8a8TN96v1gX95XTaTemTmeaj1ESU1Y%2BiCDkvEfkzPaez0cSRWNdsq9i%2B%2B3AB121pQv97UmKNnymRC9XrfNCjheJvP8%2B1ahif4EzzwIZyuwjBMezZKhGLW7ulcNmW88VKqKacmqlyNHYWfiCiGmndOCbeQyYCRid9KzfIQ2SeNeqsnghfx8JVdvGKKtPB1hk7OQNCqb%2BtpgQWm%2B8n%2BtDNRQImuMOGK14DG3yRHy9Avx%2FHOGeF8a9GVJ6NJimW9Ecb2T6E7RqL7ne5qRZDmafIXgH6mlCFVcf%2Flr5QeQ52RhBCPYo6TRRgBWZ%2FEovl46GkFsYVBX%2FIr4SzvdVa%2FNww4T5NYik3vIJ1NHswu7sqCeZdDw7s3nxsVMRVYSGo72HmcEKxy7ZvjHaQ7%2FA%2FhytntT5d9gFqm%2BJZS2feTkdBLll7%2FZmU%2F0J7tml4GCVi0gUlz6n7oXDJBImiDBsaAqob0HPuP1lnTDGOARLWRi1VAkeyiSiZx6MQML3cjL8GOrABJaY4PqkzyFbyL9b2dX4ahmhxVJurQJJj1YCo%2FWMfCIcjtRIVhFMbuG8aMIc9rpd5RnH%2BdThD0TThbFSeDBmVPFdFSLa8sb4P%2FriAdsyJGyDCYOkPOqU5CNy29uE2efF02gCJn%2F3WqBrgnyVPeV9MEustSu%2Bi2xovh9huv2%2ByWnLF8g1vc9Ecjq6wFibTWSxIYTLlafk7orczm6J8TcD3XYRmLnPpvaubR7I6XZoSaZU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=315f92e32a665bafbb0bbae1c57ff8f49f26f317622da683fcbb9e539d0e90cb"
  },
  "disclosed_date": 1589028120,
  "report_url": "https://hackerone.com/reports/825729",
  "is_multi_component": false,
  "complexity": "MEDIUM",
  "novelty": "LOW",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "npm i logkitty"
    ],
    [
      2,
      "logkitty android app 'test; touch HACKED'"
    ]
  ],
  "vuln_description": "The vulnerability is a Remote Code Execution (RCE) issue in the logkitty module, where user input is formatted inside a command that is executed without proper sanitization or checks. This allows an attacker to execute arbitrary commands on the victim's system.",
  "reason": "The vulnerability is straightforward to discover as it involves a common pattern of insecure command formatting where user input is directly incorporated into a command string. The attack does not require multiple components, complex state manipulation, or novel logic.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "injection_metadata": {
    "is_simple_payload": true
  },
  "authnz_metadata": {
    "reason": "The vulnerability involves command injection via user input in a command that is executed without proper sanitization. The proposed methodologies focus on authentication and authorization issues within web applications, such as IDOR and AuthN/AuthZ bypasses, which are different from command injection vulnerabilities. The methodologies do not cover command injection or RCE via insecure command formatting.",
    "is_detectable": false
  }
}