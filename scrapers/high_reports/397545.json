{
  "reported_to": "Valve",
  "reported_by": "kohtep2010 ",
  "title": "Malformed .BMP file in Counter-Strike 1.6 may cause shellcode injection",
  "content": "\nWith the vulnerability of the GoldSource Engine, the server is able to perform remote code execution on the client, overwriting the stack when reading the BMP file. The problem is in the LoadBMP8 function, which is executed when the player connects to the server, by loading the \"overviews\\%MAPNAME%.bmp\" file. If we send a badly formed file to this function, then we will be able to rewrite the stack of the function by setting the own code in the stack and passing program control to it.\nI've wrote a program that compiles file like that. The shellcode, which runs on the stack, starts the \"calc.exe\" process with the WinExec function.\nFor the client to execute this file, the server must send this file to the client. The server can do this if map that is not present on the client is launched. The server must load a map with random name, for example, \"definitely_missing_client_map.bsp\". In this case, the name of the BMP file must also be \"definitely_missing_client_map.bmp\" and it must be in \"overviews\" folder. You also must create the \"overviews\\definitely_missing_client_map.txt\" file, which is overview description. The nonstandard name of the map prompts the client to download the missing files (bsp, bmp and txt). Upon completion, when the client is able to see the map, the BMP file will be loaded and the binary code from BMP file will be executed on the stack.\nI've attached the source code of \"compiler\" to the message. You can find more detailed instructions in the code comments. You need to compile this project in \"Release\" configuration and then start this project. After that, malformed \"de_dust2.bmp\" file will be produced.\nImpact\nAn attacker can execute remote code on the client's machine.\n\n",
  "severity": [
    8.8,
    null
  ],
  "bounty": 2000,
  "weaknesses": [
    "Classic Buffer Overflow"
  ],
  "screenshots": {},
  "disclosed_date": 1582846980,
  "report_url": "https://hackerone.com/reports/397545",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "HIGH",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Create a malformed BMP file using the provided compiler program, specifically targeting the 'overviews\\%MAPNAME%.bmp' file format."
    ],
    [
      2,
      "Set up a Counter-Strike 1.6 server with a map name that does not exist on the client (e.g., 'definitely_missing_client_map.bsp'). Ensure the corresponding BMP ('definitely_missing_client_map.bmp') and TXT ('definitely_missing_client_map.txt') files are in the 'overviews' folder."
    ],
    [
      3,
      "When a client connects to the server, the server will prompt the client to download the missing files (BSP, BMP, and TXT)."
    ],
    [
      4,
      "Upon loading the map, the client will process the malformed BMP file, triggering the stack overflow and executing the shellcode embedded in the BMP file (e.g., launching 'calc.exe')."
    ]
  ],
  "vuln_description": "The vulnerability lies in the GoldSource Engine's handling of BMP files in Counter-Strike 1.6. A malformed BMP file can trigger a stack overflow in the LoadBMP8 function, allowing remote code execution on the client's machine. The attacker exploits this by forcing the client to download and process a specially crafted BMP file when connecting to a server with a missing map.",
  "reason": "This vulnerability involves multiple components: crafting a malformed BMP file, setting up a server with a missing map, and understanding the client's file download behavior. The interaction between these components is non-obvious, requiring knowledge of the engine's file handling and stack manipulation. Additionally, the attack requires precise control over the stack to execute arbitrary code.",
  "new_complexity": "HIGH",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}