{
    "reported_to": "Node.js third-party modules",
    "reported_by": "skyn3t ",
    "title": "[glance] Access unlisted internal files/folders revealing sensitive information",
    "content": "\nI would like to report sensitive information disclosure in glance.\nSimilar to #486933 in ways\nModule\nmodule name: glance\nversion: 3.0.5\nnpm page: https://www.npmjs.com/package/glance\nModule Description\na quick disposable http server for static files\nModule Stats\nweekly downloads\n41\nVulnerability\nVulnerability Description\nThe glance modules allows directory browsing and to serve static files through the browser.\nThe config option nodot can be used to prevent serving sensitive folders such as .git or .DS_Store\nrefer: https://github.com/jarofghosts/glance#command-line-options\nThis rule can be bypassed using the technique below which can lead to sensitive information disclosure (An interesting example: https://smitka.me/).\nSteps To Reproduce:\nInstall glance\nCode 23 Bytes\n1$ npm install -g glance\nInside a project directory, initialise git.\nCode 10 Bytes\n1$ git init\nAdd rule to ignore dotfiles in .glance.json\nCode 19 Bytes\n1{\n2  \"nodot\": true\n3}\nStart glance in current directory.\nCode 65 Bytes\n1$ glance --verbose\n2glance serving /project/directory on port 8080\nNow, current directory will be served by serve with the exception of folder .git and file .gitignore.\nIf we try to curl .git or .gitignore we get a Not Found error\nCode 77 Bytes\n1$ curl --path-as-is 127.0.0.1:8080/.git\n2...\n3<title>File Not Found</title>\n4...\nAlthough if we try to fetch files/folders inside a forbidden [dot]folder there is no problem at all and most of it's content can be extracted successfully (except dotfiles itself).\nCode 73 Bytes\n1$ curl --path-as-is 127.0.0.1:8080/.git/HEAD      \n2ref: refs/heads/master\nThe structure of git repository is well known, so it is possible to found references to the objects/packs in the repository, download them via direct requests and reconstruct the repository and obtain your files \u2013 not only the current ones, but also the past files.\nSupporting Material/References:\nUbuntu 16.04\nnode v11.3.0\nnpm 6.7.0\nWrap up\nSelect Y or N for the following statements:\nI contacted the maintainer to let them know: [N]\nI opened an issue in the related repository: [N]\nHunter's comments and funny memes goes here\n<image_0>\nImpact\nThe essentially bypasses the nodot feature and allows an attacker to read from a directory that the victim has not allowed access to.\nReferences:\nhttps://github.com/jarofghosts/glance#command-line-options\nhttps://smitka.me/\n\n",
    "severity": [
        7.5,
        null
    ],
    "bounty": null,
    "weaknesses": [
        "Information Exposure Through Directory Listing"
    ],
    "screenshots": {
        "image_0": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/416/786/f70750a0c231dd0e1684a0fc4dbca1ce60e8068d/meme.png?response-content-disposition=attachment%3B%20filename%3D%22meme.png%22%3B%20filename%2A%3DUTF-8%27%27meme.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQQEUNZC36%2F20250326%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250326T045249Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjELz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIGssz2bSFlUtZ1f9byPt7Vq8QwtnWr9xgfL12qBCec2TAiBb1UKQimIIm1hWWA1sLQKRfbjjCcyMhVGRvREVEu2JGyqxBQglEAMaDDAxMzYxOTI3NDg0OSIMgzVkkrXwhgjE9sB4Ko4F5P8mSXZZKCy8TSt9G0VPGYaTU3ZTTV7Gh3%2BFbmy89ySU7EWxJDbXKbl8Ngmb3%2BRYbPXqJ6gr9GmiG65IpNNhNeajKArO2U3PDfhKu%2FCtWYySlZ%2FKOm8fG8HGxtsas8UcL2ArEs%2Faz1PcsKKGfgZZGZzOyemXJmg2kRN5yxgsRFcyyh1MUGnlg0h2U8twWHTlTYVs9lnUk5Cdlj8sHf41arfr4jfTsDFedAQDFl0OrJERQbiNCemnJN%2B3fFRj8fFVzfX6JfDazGt2FBjrfqVHSW357eG%2FZTVWaEgSIppEafgy2fKnPzL2TUoewt%2BQ%2Fvyfv7s6ewTniTYXsrl6%2BVjQoCdra7x9AJQ%2Bc1OoKGraDiGVhdt6Eot3LU7KlekAUaTm86q4whmj3Ax7tjeTO2TSA5ewLmR7kJT37DORByUaqiqwn9BrJpy8VWNAL8icP4HOyM7hu03W3DZ6qDk6QaR2FZBO8ajip8kSPtxHuiqpfsHzpGwpEqdT5oF9UG1C9vAoeRQbSpp%2B6FueQ%2B8zV1%2B7ZS0sSF63lLzOcqchFuG9j%2Bp45%2FtCMccswwCsysKskv4VRoGzDndcIvXqVRjliPHytz7DCW%2BQyLMCvqhO5eGRcVAsn7qVmi%2Bgp1HAeZI%2Bm2nZ2Xu171B50BHbxc99wRpDjSsl427ejhQ755fF%2FpP36XvSwASbcb1lW9iTSXVhcZMF74lq13NN66Giwu3XDZ96czWPf9aLvSgBk%2FzhhvmhG%2BZNraiRe8mQHYZcJPLC4ejv%2FGwy9Q9xRAWrVPkG0Py3WiG0KVormfM7U%2B1vCb%2Fcp3v43mau93yfy3tPavNksaGsscttuQYe09Vk6SuvtfRa%2Fhrsy8oWxVeVzik45zkOMMXojb8GOrIB8ty2Nn2DFJ8YE9vYwGMGKY5sUP3dGHoPQtaJfOMRBfLXRFBj%2BpsEUvo6FtwPnF4DMBUJswflZrq1unQBJ40nCF6BRJP6afnFCAtQi288IjGI1wumr9YGrDaGMRsZq4weemWiRzxYfb7Cu2Uu%2B3W7Nah9FTuA9%2FXZM4bfQ3P2bMkkkx5fHiRx0SYqFM%2FnaD3OS7d9T0qU2GvjWGoomILjyg0IuUXxnJ%2FUUILVguwe0yW7Xg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=2bc9d6585e6b7cee234433c602f8930e7e1d209c4d1f84f759effac9c7024da2"
    },
    "disclosed_date": 1551399900,
    "report_url": "https://hackerone.com/reports/490379",
    "is_multi_component": true,
    "complexity": "HIGH",
    "novelty": "HIGH",
    "vuln_category": "CODE",
    "steps": [
        [
            1,
            "Install glance: `npm install -g glance`"
        ],
        [
            2,
            "Initialize git in a project directory: `git init`"
        ],
        [
            3,
            "Add rule to ignore dotfiles in .glance.json: `{\"nodot\": true}`"
        ],
        [
            4,
            "Start glance in current directory: `glance --verbose`"
        ],
        [
            5,
            "Attempt to access .git or .gitignore directly: `curl --path-as-is 127.0.0.1:8080/.git` (should return Not Found)"
        ],
        [
            6,
            "Bypass nodot protection by accessing files inside .git: `curl --path-as-is 127.0.0.1:8080/.git/HEAD` (successfully retrieves file)"
        ]
    ],
    "vuln_description": "The glance module's `nodot` feature, intended to block access to dotfiles/folders (e.g., .git), can be bypassed by directly accessing files within those restricted directories. This allows unauthorized access to sensitive information, such as git repository contents, leading to potential reconstruction of the repository and exposure of historical files.",
    "reason": "The vulnerability involves understanding the `nodot` feature's limitation\u2014it blocks top-level dotfiles/folders but not their contents. This requires knowledge of common dotfile structures (e.g., .git/HEAD) but does not involve complex interactions or novel logic. The bypass is straightforward once the limitation is identified.",
    "new_complexity": "LOW",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": "486933"
}