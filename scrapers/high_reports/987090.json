{
  "reported_to": "U.S. Dept Of Defense",
  "reported_by": "pwnsauc3_ ",
  "title": "https://\u2588\u2588\u2588\u2588\u2588\u2588 vulnerable to CVE-2020-3187 - Unauthenticated arbitrary file deletion in Cisco ASA/FTD",
  "content": "\nHi team , while testing i found a host ip https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 which belong to DoD (\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.mil) running web services interface of Cisco ASA/FTD and it is vulnerable to CVE-2020-3187 - Unauthenticated arbitrary file deletion in Cisco ASA/FTD. An attacker could exploit this vulnerability by sending a crafted HTTP request containing directory traversal character sequences. An exploit could allow the attacker to view or delete arbitrary files on the targeted system. When the device is reloaded after exploitation of this vulnerability, any files that were deleted are restored. The attacker can only view and delete files within the web services file system.\nVulnerable IP : https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\ni did a whois search on it and it confirmed it belongs to DoD as you seen below\n\u2588\u2588\u2588\u2588\nSteps to Reproduce\ngo to https://\u2588\u2588\u2588\u2588\n\u2588\u2588\u2588\u2588\u2588\nyou will be redirected to SSL VPN service and you will see a web services interface of Cisco ASA/FTD. In above pic you can see the page we are looking at a web service which is vulnerable to CVE 2020-3187 and you can also see the certificate which indicates that this belongs to \u2588\u2588\u2588\u2588\u2588.mil.\nProof of Concept\nNow we know that in CVE-2020-3187 - Unauthenticated arbitrary file deletion in Cisco ASA/FTD. This allow the attacker to view or delete arbitrary files on the targeted system\nIn this we can delete the files. For example the logo file present on the server at https://\u2588\u2588\u2588\u2588/+CSCOU+/csco_logo.gif can be deleted by the following steps\nThis can be done by sending a curl request as : curl -H \"Cookie: token=../+CSCOU+/csco_logo.gif\" https://target/+CSCOE+/session_password.html\nTo delete this just hit the following command on your terminals.\nCode 92 Bytes\n1curl -H \u201cCookie: token=../+CSCOU+/csco_logo.gif\u201d https://\u2588\u2588\u2588\u2588\u2588/+CSCOE+/session_password.html\nIf that did not work because sometimes logo.gif/png has permission issues so try this \"https://\u2588\u2588\u2588\u2588\u2588\u2588/+CSCOE+/blank.html\"\nYou can also delete the file \"/+CSCOE+/blank.html\" (an empty HTML file), as it might be a problem with the permission of the custom logo file sometimes logo.gif has permission issue so we might not be able to delete but we can delete other files\nAfter, this the files ( logo and blank html page ) will be deleted from the server, for better demonstration check out this video :\nhttps://video.twimg.com/ext_tw_video/1286808440271183873/pu/vid/1270x720/8tccA2VgHV9TDtW4.mp4\nWarning : This can lead to a denial of service (DOS) on the VPN by deleting the lua source code files from the file system, which will break the WebVPN interface until the device is rebooted.\nNow i haven't deleted the logo file because i didn't wanted to cause any damage so i used another method which can help us confirming that target is vulnerable to this without causing damage and for that just check if \"/+CSCOE+/session_password.html\" endpoint exists, and it gives \"200 OK\" status, then it should be vulnerable because this affected endpoint has been removed from the patched versions.\nI sent a curl request to check and it gave 200 ok as shown below:\n\u2588\u2588\u2588\u2588\u2588\nIn a nutshell:\nCode 98 Bytes\n1/+CSCOE+/session_password.html -> 200 = Vulnerable\n2/+CSCOE+/session_password.html -> 404 = Patched\nbecause in patched versions this /+CSCOE+/session_password.html file is removed and you will not see it so if it is showing 200 ok then it is vulnerable as you have seen in above pic where it shows a 200 ok while curl request to\ncurl -kI https://\u2588\u2588\u2588\u2588\u2588/+CSCOE+/session_password.html\nMitigation/Remediation Actions\nUpgrade the ASA software version per the referenced advisory. This advisory is available at the following link:\nhttps://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-asaftd-path-JE3azWw43\nReference\nhttps://twitter.com/aboul3la/status/1286809567989575685\nhttps://medium.com/@parasarora06/hunting-for-cve-2020-3187-2020-3452-9f0dcc66f4d8\nhttps://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-asaftd-path-JE3azWw43\nhttp://packetstormsecurity.com/files/158648/Cisco-Adaptive-Security-Appliance-Software-9.7-Arbitrary-File-Deletion.html\nImpact\nHigh - This vulnerability allows the attacker to delete files within the web services file system.\n\n",
  "severity": [
    9.0,
    10.0
  ],
  "bounty": null,
  "weaknesses": [
    "Array Index Underflow"
  ],
  "screenshots": {},
  "disclosed_date": 1602892320,
  "report_url": "https://hackerone.com/reports/987090",
  "is_multi_component": false,
  "complexity": "MEDIUM",
  "novelty": "LOW",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Identify a target running Cisco ASA/FTD web services interface."
    ],
    [
      2,
      "Send a crafted HTTP request with directory traversal sequences to delete arbitrary files (e.g., curl -H \"Cookie: token=../+CSCOU+/csco_logo.gif\" https://target/+CSCOE+/session_password.html)."
    ],
    [
      3,
      "Alternatively, verify vulnerability by checking if \"/+CSCOE+/session_password.html\" returns 200 OK (vulnerable) or 404 (patched)."
    ]
  ],
  "vuln_description": "Unauthenticated arbitrary file deletion in Cisco ASA/FTD due to improper handling of directory traversal sequences in HTTP requests, allowing attackers to delete files within the web services file system.",
  "reason": "The attack involves a single straightforward HTTP request with directory traversal, leveraging a known CVE. No complex interactions or novel logic is required.",
  "new_complexity": "LOW",
  "requires_code": false,
  "requires_CVE": true,
  "is_ctf": false,
  "other_report": null
}