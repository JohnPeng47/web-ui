{
  "reported_to": "Kubernetes",
  "reported_by": "amlweems ",
  "title": "Ingress-nginx annotation injection allows retrieval of ingress-nginx serviceaccount token and secrets across all namespaces",
  "content": "\nI submitted the following report to security@kubernetes.io:\nI've been exploring CVE-2021-25742 and believe I've discovered a variant (although it appears there may be many). Most template variables are not escaped properly in nginx.tmpl, leading to injection of arbitrary nginx directives. For example, the nginx.ingress.kubernetes.io/connection-proxy-header annotation is not validated/escaped and is inserted directly into the nginx.conf file.\nAn attacker in a multi-tenant cluster with permission to create/modify ingresses can inject content into the connection-proxy-header annotation and read arbitrary files from the ingress controller (including the service account).\nI've created a secret gist demonstrating the issue against ingress-nginx v1.0.4: https://gist.github.com/amlweems/1cb7e96dca8ada8aee8dc019d4163f2c\nImpact\nAn attacker with permission to create/modify ingresses in one namespace can inject content into the connection-proxy-header annotation and read arbitrary files from the ingress controller (including the service account). This service account has permission to read secrets in all namespaces.\n\n",
  "severity": [
    7.6,
    null
  ],
  "bounty": 50,
  "weaknesses": [
    "Code Injection"
  ],
  "screenshots": {},
  "disclosed_date": 1660428780,
  "report_url": "https://hackerone.com/reports/1378175",
  "is_multi_component": true,
  "complexity": "MEDIUM",
  "novelty": "MEDIUM",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Identify an ingress-nginx controller version vulnerable to annotation injection (e.g., v1.0.4)."
    ],
    [
      2,
      "Create or modify an Ingress resource with a malicious annotation (e.g., nginx.ingress.kubernetes.io/connection-proxy-header) containing injected nginx directives."
    ],
    [
      3,
      "Use the injected directives to read arbitrary files from the ingress controller's filesystem, including the service account token."
    ],
    [
      4,
      "Use the stolen service account token to access secrets across all namespaces."
    ]
  ],
  "vuln_description": "The vulnerability allows an attacker with permissions to create/modify Ingress resources to inject malicious nginx directives via unescaped template variables in annotations. This leads to arbitrary file read on the ingress controller, including the service account token which has cluster-wide secrets access.",
  "reason": "While the vulnerability requires understanding of nginx configuration injection and Kubernetes RBAC, the attack path is relatively straightforward once the template injection vector is identified. The main complexity comes from knowing which annotations are vulnerable and how to craft the malicious payload.",
  "new_complexity": "MEDIUM",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "injection_metadata": {
    "is_simple_payload": false
  },
  "authnz_metadata": {
    "reason": "The vulnerability involves injecting content into the connection-proxy-header annotation to read arbitrary files from the ingress controller, which is a specific action (annotation injection) on a specific resource (ingress). The methodology involves testing actions with different user sessions and resource IDs, which would include testing annotation modifications with different permissions. However, the specific injection vector and the impact on the ingress controller's service account might not be directly covered by the generic IDOR/AuthZ testing methodology unless the test cases specifically include annotation manipulation scenarios.",
    "is_detectable": false
  }
}