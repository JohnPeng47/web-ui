{
  "reported_to": "Node.js third-party modules",
  "reported_by": "cris_semmle ",
  "title": "Command Injection Vulnerability in kill-port Package",
  "content": "\nI would like to report a command injection vulnerability in kill-port. It allows an attacker to inject arbitrary commands.\nModule\nmodule name: kill-port\nversion: 1.3.1\nnpm page: https://www.npmjs.com/package/kill-port\nModule Description\nKill the process running on given port\nModule Stats\n5,282 downloads in the last week\nVulnerability\nVulnerability Description\nIf an attacker can control the port, which in itself is a very sensitive value, he can inject arbitrary OS commands due to the usage of exec in a third-party module.\nSteps To Reproduce:\nCode 80 Bytes\n1const kill = require('kill-port');\n2kill(\"23;`touch ./success.txt; 2222222222`\");\nPatch\nN/A replace exec (through execa.shell) with spawn\nSupporting Material/References:\nWrap up\nI contacted the maintainer to let them know: N\nI opened an issue in the related repository: N\nImpact\nShe can inject arbitrary commands. However, I assume that the real impact is not that high, since for most usages of the package I do not expect the user to be able to control the port value.\n\n",
  "severity": [
    7.3,
    null
  ],
  "bounty": null,
  "weaknesses": [
    "Command Injection - Generic"
  ],
  "screenshots": {},
  "disclosed_date": 1546751880,
  "report_url": "https://hackerone.com/reports/389561",
  "is_multi_component": false,
  "complexity": "LOW",
  "novelty": "LOW",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Install the kill-port package (version 1.3.1) in a Node.js environment."
    ],
    [
      2,
      "Run the following code snippet that includes a malicious port value: `const kill = require('kill-port'); kill(\"23;`touch ./success.txt; 2222222222`\");`"
    ]
  ],
  "vuln_description": "The kill-port package (version 1.3.1) is vulnerable to command injection via the port parameter. An attacker can inject arbitrary OS commands by controlling the port value due to the use of exec in a third-party module.",
  "reason": "The vulnerability is straightforward to discover as it involves a common pattern of command injection through user-controlled input. The attack does not require multiple components, complex state manipulation, or novel logic. It is a typical case of improper input sanitization leading to command execution.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "injection_metadata": {
    "is_simple_payload": true
  },
  "authnz_metadata": {
    "reason": "The vulnerability involves command injection through user-controlled input (port number) in the 'kill-port' package. The proposed methodologies focus on authentication and authorization (AuthN/AuthZ) vulnerabilities, such as IDOR and AuthZ bypasses, which are unrelated to command injection vulnerabilities. The methodologies do not cover input validation or command injection scenarios.",
    "is_detectable": false
  }
}