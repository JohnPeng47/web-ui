{
    "reported_to": "GlassWire",
    "reported_by": "dawouw ",
    "title": "Uncontrolled Search Path Element allows DLL hijacking for priv esc to SYSTEM",
    "content": "\nGlassWire contains a DLL hijacking vulnerability that could allow an authenticated attacker to execute arbitrary code on the targeted system. The vulnerability exists due to GlassWire loading DLL files from the PATH environment variable without verification. The machine should have at least one writable PATH directory for the privilege escalation to work (e.g. having Python, Java, etc. installed).\nNine different DLL's are loaded by the GlassWire Service (GWCtlSrv.exe) as SYSTEM.\nOne DLL is loaded by the GUI (GlassWire.exe) as the currently logged in user.\nClass: Privilege Escalation [CAPEC-233]\nClass: Uncontrolled Search Path Element [CWE-427]\nAffected Product\nGlassWire 2.2.210.0\nProof of Concept\nUsually, Python is prepended to the PATH environment (Path=C:\\Python38\\Scripts\\;C:\\Python38\\;..). For my ease and workflow, I prepended my folder to it (C:\\Dima\\;). Place the x86 DLL in one of the writable folder paths.\nC:\\Program Files (x86)\\GlassWire\\GWCtlSrv.exe\nGlassWire (32bit) loads the following DLLs during boot as SYSTEM:\nswift.dll\nCSUNSAPI.dll\nnfhwcrhk.dll\nSureWareHook.dll\naep.dll\nnfhwcrhk.dll\natasi.dll\nnuronssl.dll\nubsec.dll\n<image_0>\nC:\\Program Files (x86)\\GlassWire\\GlassWire.exe\nGlasswire GUI (32bit) loads the following DLL after user logon as the current user:\nWtsapi32.dll.dll\n<image_1>\nI hope this helps. Please let me know if you require more information.\nKind regards,\nDima van de Wouw\nOutflank\nImpact\nSuccessful exploitation of the GlassWire service allows an attacker to gain SYSTEM privileges and inject into the GlassWire service process at boot.\nSuccessful exploitation of the GlassWire GUI allows a user to gain persistence. On shared machines, this would allow a user to move laterally to sessions of other users.\n\n",
    "severity": [
        7.0,
        null
    ],
    "bounty": 250,
    "weaknesses": [
        "Privilege Escalation"
    ],
    "screenshots": {
        "image_0": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/QJGKrhoabXq4u1UcKycbQJMa?response-content-disposition=attachment%3B%20filename%3D%22GlassWire1.png%22%3B%20filename%2A%3DUTF-8%27%27GlassWire1.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQY4DISKOL%2F20250325%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250325T194336Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjELT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIBqF2lvFpMcqFzjBIzJcJtDgvOZuJrja5qtx%2Fl8htr4DAiEAmy2vP8uaiY5FYr0H56LVu4u2LH0TnTs%2BkU4MeSVQEG0qsgUIHRADGgwwMTM2MTkyNzQ4NDkiDOFE9Gg4KqrhCSGxRyqPBQ6SHZcdjGhwQUqXfWH6I8qRSnqnf%2Bs7KW0C%2BqwGFZx0X2cxzI1P0bJRa9HIdVlBAzXv6xKRXcne77q8tkugJJgXCOi1gzVZY9VXGVm8zFpYeg9aoCl7Zj9noeLT2rD7BsqhuZAqiF%2FT7Y5uOIE1DUUYYdk4iCrp%2BuBZYWBMk1STh%2BdP44%2F9APgfuuYAYxkrwQiIetgon7IgY2XSAnG1pkMHYRDVFtl9htgmqDLU3NU3U8q9CXUI9WtSC8D8T8jft%2Fld5BhiYCmKyWl%2FPzQ9Wjvu17rmpemyGdAvglH07OxMxzqECNvH%2FSBfLesMXL9o4g6F%2FXD%2BxLvud%2FuWF%2F0kb5SD0X42Xrvm7SG6KSz%2FJ61TlisbmrXX7PGj7VCITGVnQJU8vJ%2FalcG7hXzUY%2BQmWjNFjB0%2BtoEYBG977s8ZYip%2F%2FPGcYbNamAms73uZN%2FrZIXsAwLqxpRBBZ6Z3DWtBb12UmTiVPoqJZzc1UAZjFOQX6FIPEKNlhxxtJQH%2FDVoiUHBuuvqCXZsNY6szIzppFdTgQoN5%2BWQPxj98B4JK4cwFHUxIvq98pPJM4N0ofvlpVRKnuJH%2FAeYpxmT%2FkkOt91mP1nWpqov%2BjHhge05uUvmglXoVN%2Fa9CuS3PStMsI72Mo061rhv%2Bq%2BWTidR6otkc9yz%2BhZYtvI3E1iNg1gnZ9fSpwSjbWgpmkHrKF5wyS%2BoP8v7OIHl3fSxXHzoCgBwQfTO72QB1eDmXvVe5zWxTPcm06zEEjqsTNFfVDjpt7UO3Zz8x5MxC3bqegO58OQhtXYFxEf0U8n99Tez37m9LJEPFv9Wxfn9Ya3HiiM10DJok1NCf829onYKgfASuEjnFbFfqSqleYaQVm99i0POvrkwhIiMvwY6sQG6gHWCL5mzfvQe9nmnGMl9sLfAV6JM2lZQ6Be%2BeqNWjFqyDi16Ryn7hBnTSEdltACAVN6%2F2f%2F88NeAk5yFS3ushjMUtsYi8kNqD6mRY7crfQ6UInLFIUCHxwp693Kk%2Bxt2HSmF6kpJKe3aQZj952Qyblap2857Wc8JMKvAIvTOKYnrDRa5xMc8HLglLWuIql6TFgLKWuDVoUrgkWT7tgHzBd%2Bk1xVACIyLrXyy7iM%2FpS0%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=bbb8df14d94f3f7ee0110ee2b37d91e0c37c5817f32c9d0bac92644ce408403e",
        "image_1": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/WxnsVnmarH1yFvs9eMPeymo1?response-content-disposition=attachment%3B%20filename%3D%22GlassWireU.png%22%3B%20filename%2A%3DUTF-8%27%27GlassWireU.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQY4DISKOL%2F20250325%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250325T194336Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjELT%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIBqF2lvFpMcqFzjBIzJcJtDgvOZuJrja5qtx%2Fl8htr4DAiEAmy2vP8uaiY5FYr0H56LVu4u2LH0TnTs%2BkU4MeSVQEG0qsgUIHRADGgwwMTM2MTkyNzQ4NDkiDOFE9Gg4KqrhCSGxRyqPBQ6SHZcdjGhwQUqXfWH6I8qRSnqnf%2Bs7KW0C%2BqwGFZx0X2cxzI1P0bJRa9HIdVlBAzXv6xKRXcne77q8tkugJJgXCOi1gzVZY9VXGVm8zFpYeg9aoCl7Zj9noeLT2rD7BsqhuZAqiF%2FT7Y5uOIE1DUUYYdk4iCrp%2BuBZYWBMk1STh%2BdP44%2F9APgfuuYAYxkrwQiIetgon7IgY2XSAnG1pkMHYRDVFtl9htgmqDLU3NU3U8q9CXUI9WtSC8D8T8jft%2Fld5BhiYCmKyWl%2FPzQ9Wjvu17rmpemyGdAvglH07OxMxzqECNvH%2FSBfLesMXL9o4g6F%2FXD%2BxLvud%2FuWF%2F0kb5SD0X42Xrvm7SG6KSz%2FJ61TlisbmrXX7PGj7VCITGVnQJU8vJ%2FalcG7hXzUY%2BQmWjNFjB0%2BtoEYBG977s8ZYip%2F%2FPGcYbNamAms73uZN%2FrZIXsAwLqxpRBBZ6Z3DWtBb12UmTiVPoqJZzc1UAZjFOQX6FIPEKNlhxxtJQH%2FDVoiUHBuuvqCXZsNY6szIzppFdTgQoN5%2BWQPxj98B4JK4cwFHUxIvq98pPJM4N0ofvlpVRKnuJH%2FAeYpxmT%2FkkOt91mP1nWpqov%2BjHhge05uUvmglXoVN%2Fa9CuS3PStMsI72Mo061rhv%2Bq%2BWTidR6otkc9yz%2BhZYtvI3E1iNg1gnZ9fSpwSjbWgpmkHrKF5wyS%2BoP8v7OIHl3fSxXHzoCgBwQfTO72QB1eDmXvVe5zWxTPcm06zEEjqsTNFfVDjpt7UO3Zz8x5MxC3bqegO58OQhtXYFxEf0U8n99Tez37m9LJEPFv9Wxfn9Ya3HiiM10DJok1NCf829onYKgfASuEjnFbFfqSqleYaQVm99i0POvrkwhIiMvwY6sQG6gHWCL5mzfvQe9nmnGMl9sLfAV6JM2lZQ6Be%2BeqNWjFqyDi16Ryn7hBnTSEdltACAVN6%2F2f%2F88NeAk5yFS3ushjMUtsYi8kNqD6mRY7crfQ6UInLFIUCHxwp693Kk%2Bxt2HSmF6kpJKe3aQZj952Qyblap2857Wc8JMKvAIvTOKYnrDRa5xMc8HLglLWuIql6TFgLKWuDVoUrgkWT7tgHzBd%2Bk1xVACIyLrXyy7iM%2FpS0%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=4563a8ed8eb8cef642262b4b49d294f0ad9ac436bcaa61026835567aa9132067"
    },
    "disclosed_date": 1622829360,
    "report_url": "https://hackerone.com/reports/921675",
    "is_multi_component": false,
    "complexity": "MEDIUM",
    "novelty": "MEDIUM",
    "vuln_category": "CODE",
    "steps": [
        [
            1,
            "Identify a writable directory in the PATH environment variable (e.g., C:\\Python38\\Scripts\\ or C:\\Dima\\)"
        ],
        [
            2,
            "Place a malicious DLL (e.g., swift.dll, CSUNSAPI.dll, etc.) in the identified writable directory"
        ],
        [
            3,
            "Restart the GlassWire service or log in to trigger the loading of the malicious DLL by GWCtlSrv.exe (as SYSTEM) or GlassWire.exe (as the current user)"
        ]
    ],
    "vuln_description": "GlassWire contains a DLL hijacking vulnerability due to loading DLLs from the PATH environment variable without verification. An authenticated attacker can place a malicious DLL in a writable PATH directory, leading to arbitrary code execution as SYSTEM (via the service) or persistence (via the GUI).",
    "reason": "The vulnerability involves understanding DLL search order and PATH manipulation, but the attack itself is straightforward once the writable PATH directory is identified. The components (DLL loading, PATH environment) are common and well-documented, with no subtle interactions or novel logic required.",
    "new_complexity": "LOW",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null,
    "idor_detectable": false,
    "authnz_byppass_detectable": false,
    "is_simple_payload": false,
    "injection_metadata": {
        "is_simple_payload": true
    },
    "authnz_metadata": {
        "idor_detectable": false,
        "authnz_byppass_detectable": false
    }
}