{
  "reported_to": "U.S. Dept Of Defense",
  "reported_by": "sw33tlie ",
  "title": "Remote Code Execution via Insecure Deserialization in Telerik UI ",
  "content": "\nHello,\nI found an outdated version of Telerik Web UI (v2016.2.607.40) at the following URL: https://\u2588\u2588\u2588/Telerik.Web.UI.WebResource.axd?type=rau.\nThis means that we can achieve full RCE by chaining two different CVEs: CVE-2017-11317, which allows us to upload arbitrary files on the server, and CVE-2019-18935, which is a deserialization vulnerability.\nFirst of all, the only thing that I tried to prove that I had successfully achieved code execution was making the server sleep for 10 seconds.\nNo data was compromised.\nSteps to reproduce\nThe steps that I followed are thoroughly described in this blog post: https://know.bishopfox.com/research/cve-2019-18935-remote-code-execution-in-telerik-ui.\nHere's a quick summary:\nDownload the files in the attachments\nMake sure you have pycryptodome installed (pip3 install pycryptodome)\nRun the following command: python3 CVE-2019-18935.py -u https://\u2588\u2588\u2588\u2588\u2588/Telerik.Web.UI.WebResource.axd?type=rau -v 2016.2.607.40 -f 'C:\\Windows\\Temp' -p sleep_042020163752,45_amd64.dll\nThe sleep_042020160430,40_amd64.dll is supposed to Sleep(10). This will make the server hang for roughly ten seconds, and after that you will get a response like this one: [*] Response time: 12.88 seconds\nThe exploit worked.\nThings to note\nI had to edit the original exploit code provided in the aforementioned blog post (https://github.com/noperator/CVE-2019-18935) because I noticed that when uploading the .dll file the server added a .tmp at the end of the file name.\nThat's why the original code was failing to exploit the deserialization part.\nI added + '.tmp' at the end of line 95 and after that it worked just fine.\nA DLL file can only work once. This means that to test the vulnerability again a new DLL has to be compiled.\nFor this reason I provided several DLLs in the attachments so you don't have to compile them (especially because a windows machine with Visual Studio installed is required).\nI didn't upload a reverse shell because I thought it was not a great idea, but if needed I could do it.\nHow to fix\nJust upgrade Telerik for ASP.NET AJAX to R3 2019 SP1 (v2019.3.1023) or later.\nImpact\nFull Remote Code Execution on the vulnerable server.\n\n",
  "severity": [
    9.0,
    10.0
  ],
  "bounty": null,
  "weaknesses": [
    "Deserialization of Untrusted Data"
  ],
  "screenshots": {},
  "disclosed_date": 1588884840,
  "report_url": "https://hackerone.com/reports/838196",
  "is_multi_component": true,
  "complexity": "MEDIUM",
  "novelty": "MEDIUM",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Identify the outdated version of Telerik Web UI (v2016.2.607.40) at the URL: https://\u2588\u2588\u2588/Telerik.Web.UI.WebResource.axd?type=rau."
    ],
    [
      2,
      "Chain two CVEs (CVE-2017-11317 and CVE-2019-18935) to achieve RCE by uploading arbitrary files and exploiting deserialization vulnerability."
    ],
    [
      3,
      "Use the provided exploit script (CVE-2019-18935.py) to upload a DLL file that makes the server sleep for 10 seconds, proving RCE."
    ],
    [
      4,
      "Modify the exploit script to account for the server adding a .tmp extension to uploaded files."
    ]
  ],
  "vuln_description": "The vulnerability involves chaining two CVEs to achieve Remote Code Execution (RCE) via insecure deserialization in an outdated version of Telerik UI. The attacker can upload arbitrary files and exploit a deserialization flaw to execute arbitrary code on the server.",
  "reason": "The attack requires chaining two distinct CVEs, modifying the exploit script to handle server-side file naming quirks, and understanding the deserialization process. While the steps are documented, the interaction between the components and the need for script modification add complexity.",
  "new_complexity": "MEDIUM",
  "requires_code": false,
  "requires_CVE": true,
  "is_ctf": false,
  "other_report": null
}