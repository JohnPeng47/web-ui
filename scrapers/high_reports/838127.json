{
  "reported_to": "Internet Bug Bounty",
  "reported_by": "anatoliq ",
  "title": "mb_strtolower (UTF-32LE): stack-buffer-overflow at php_unicode_tolower_full (CVE-2020-7065)",
  "content": "\nPHP bug report (made public by the maintainers at the time of writing): https://bugs.php.net/bug.php?id=79371\nMitre CVE page: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-7065\nLink to the release notes: https://www.php.net/ChangeLog-7.php#7.4.4\nImpact\nOne of impacts is that the issue allows an attacker to straightforwardly crash the PHP interpreter provided a specific UTF character can be passed to mb_strtolower function dealing with UTF-32LE encoding.\nOriginal summary from the bug report:\nA call to mb_strtolower allows overwriting of a stack-allocated buffer with an overflown array from .rodata.\nDescription as provided by CVE database entry:\nIn PHP versions 7.3.x below 7.3.16 and 7.4.x below 7.4.34, while using mb_strtolower() function with UTF-32LE encoding, certain invalid strings could cause PHP to overwrite stack-allocated buffer. This could lead to memory corruption, crashes and potentially code execution.\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Stack Overflow"
  ],
  "screenshots": {},
  "disclosed_date": 1603281360,
  "report_url": "https://hackerone.com/reports/838127",
  "is_multi_component": false,
  "complexity": "LOW",
  "novelty": "LOW",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Prepare a specific UTF-32LE encoded string that triggers the buffer overflow in mb_strtolower function."
    ],
    [
      2,
      "Pass the crafted string to the mb_strtolower function in PHP (versions 7.3.x below 7.3.16 or 7.4.x below 7.4.4) with UTF-32LE encoding specified."
    ]
  ],
  "vuln_description": "The vulnerability involves a stack-buffer-overflow in PHP's mb_strtolower function when processing UTF-32LE encoded strings. Certain invalid strings can cause PHP to overwrite a stack-allocated buffer, leading to memory corruption, crashes, and potentially code execution.",
  "reason": "The vulnerability requires knowledge of specific UTF-32LE encoding and how PHP handles it in the mb_strtolower function. However, the attack itself is straightforward once the specific invalid string is known, involving no complex interactions or state manipulations.",
  "new_complexity": "MEDIUM",
  "requires_code": true,
  "requires_CVE": true,
  "is_ctf": false,
  "other_report": null
}