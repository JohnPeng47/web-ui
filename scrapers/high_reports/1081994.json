{
  "reported_to": "U.S. Dept Of Defense",
  "reported_by": "5050thepiguy ",
  "title": "Stored XSS at https://www.\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.mil",
  "content": "\nSummary:\nStored XSS exists at https://www.\u2588\u2588\u2588\u2588\u2588\u2588.mil. A user can fill out the form and upload a file containing javascript code to trigger XSS.\nDescription:\nStored XSS exists at https://www.\u2588\u2588\u2588\u2588.mil. A user can fill out the form and upload a file containing javascript code to trigger XSS.\nImpact\nA user can steal cookies, deface a site, etc.\nStep-by-step Reproduction Instructions\n(1) Go to https://www.\u2588\u2588\u2588\u2588\u2588\u2588.mil/jppso/vendor/WFDPMMiscInvoicingDocuments.aspx\n(2) Fill out the form, upload a file, and add the file\n(3) Once the file is uploaded right click to get to the Developer Tools.\n(4) Inspect the page and find the path for the file -- \u2588\u2588\u2588\u2588\u2588\\file.txt. For example, the file path for the file I uploaded is as follows: https://www.\u2588\u2588\u2588\u2588\u2588\u2588.mil/jppso/vendor/Data/cme1rjjcnjhnvdzhf5lgfbge-01192021-065856_testing-new.html\n(5) Observe that XSS is triggered.\nProduct, Version, and Configuration (If applicable)\nhttps://www.\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.mil\nTested in Firefox\nSuggested Mitigation/Remediation Actions\nImpact\nStored XSS exists at https://www.\u2588\u2588\u2588\u2588\u2588.mil. A user can fill out the form and upload a file containing javascript code to trigger XSS.\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Cross-site Scripting (XSS) - Stored"
  ],
  "screenshots": {},
  "disclosed_date": 1612219680,
  "report_url": "https://hackerone.com/reports/1081994",
  "vuln_category": "WEB_APP",
  "is_multi_component": false,
  "complexity": "LOW",
  "novelty": "LOW",
  "steps": [
    [
      1,
      "Go to https://www.\u2588\u2588\u2588\u2588\u2588\u2588.mil/jppso/vendor/WFDPMMiscInvoicingDocuments.aspx"
    ],
    [
      2,
      "Fill out the form, upload a file containing javascript code, and submit"
    ],
    [
      3,
      "After upload, inspect the page to find the file path in Developer Tools"
    ],
    [
      4,
      "Access the uploaded file URL directly to trigger the XSS"
    ]
  ],
  "vuln_description": "Stored XSS vulnerability exists where a user can upload a file containing malicious JavaScript code, which is then executed when the file is accessed.",
  "reason": "The vulnerability involves a straightforward file upload mechanism without proper content validation or sanitization. The attack does not require complex interactions or understanding of subtle application behaviors.",
  "new_complexity": "LOW",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "authnz_metadata": {
    "reason": "The stored XSS vulnerability involves uploading a file containing JavaScript code, which is then executed when the file is accessed. This does not directly involve authentication or authorization bypass, nor does it involve swapping user sessions or resource IDs. The methodology described focuses on AuthN/AuthZ and IDOR vulnerabilities by testing session and resource ID combinations, which is not applicable here.",
    "is_detectable": false
  }
}