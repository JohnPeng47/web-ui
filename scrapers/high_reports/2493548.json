{
    "reported_to": "curl",
    "reported_by": "z3r0yu ",
    "title": "Incorrect Type Conversion in interpreting IPv4-mapped IPv6 addresses and below `curl` results in indeterminate SSRF vulnerabilities.",
    "content": "\nSummary:\nOctal Type Handling of Errors in IPv4 Mapped IPv6 Addresses in curl allows unauthenticated remote attackers to perform indeterminate SSRF, RFI, and LFI attacks on many programs that rely on curl.\nRFC 4291 defines ways to embed an IPv4 address into IPv6 addresses. One of the methods defined in the RFC is to use IPv4-mapped IPv6 addresses, that have the following format:\nCode 283 Bytes\n1   |                80 bits               | 16 |      32 bits        |\n2   +--------------------------------------+--------------------------+\n3   |0000..............................0000|FFFF|    IPv4 address     |\n4   +--------------------------------------+----+---------------------+\nIn IPv6 notation, the corresponding mapping for 127.0.0.1 is ::ffff:127.0.0.1 (RFC 4038). Although curl correctly converts octal numbers starting with 0 in IPv4 format, such as recognizing 0177.0.0.1 as 127.0.0.1, it fails to properly identify the data format of 0127.0.0.1 in IPv4-mapped IPv6 addresses. The curl command automatically removes the leading zeros from IP addresses in the format ::ffff:0127.0.0.1, and sends requests to 127.0.0.1 instead. This behavior can undermine defensive strategies that restrict access to 127.0.0.1, potentially leading to security threats such as Server-Side Request Forgery (SSRF) and Remote Code Execution (RCE) on the server.\nSteps To Reproduce:\n### 2.1 Affected components\nThe vulnerable component is:\ncurl: https://github.com/curl/curl\n8.7.1 and below\n### 2.2 Attack scenario\nA typical attack scenario is illustrated in the diagram below. The Validator checks whether the attacker-supplied URL is on the blocklist. If not, the URL is passed to the Requester for processing. The Requester is responsible for sending requests to the hostname specified by the URL.\n<image_0>\n### 2.3 PoC\npayloads:\nCode 29 Bytes\n1http://[::ffff:0127.000.0.1]/\nYou can verify this issue using the sample program below. Simply replace the payload variable in the verify function with the above payload to conduct the test.\nCode 34 Bytes\n1curl http://[::ffff:0127.000.0.1]/\nI set up an HTTP server on my local machine using port 80 with the following Python code. Upon a successful request, the server will return the string \"FindVuln\".\nCode 178 Bytes\n1from flask import Flask\n2\n3app = Flask(__name__)\n4@app.route(\"/\")\n5def index():\n6    return \"FindVuln\"\n7\n8if __name__ == \"__main__\":\n9    app.run(host='0.0.0.0', port=80, threaded=True)\n10\nFigure 1 illustrates how curl handles IPv4 addresses, while Figure 2 demonstrates curl's processing of IPv4-mapped IPv6 representations.\nFigure 1:\n<image_1>\nFigure 2:\n<image_2>\nMitigation\nPlease refer to RFC 4291 and RFC 4038 to fix this function.\nSupporting Material/References:\nThis security issue has also been identified in other libraries, and CVE IDs have been assigned. For more information, refer to [1], [2], [3] and [4].\n[1] https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-24329\n[2] https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-22243\n[3] https://sick.codes/sick-2021-015/\n[4] https://sick.codes/sick-2021-016/\nImpact\nThe impact of this vulnerability is huge because the curl is widely used. In many cases, developers need a blocklist to block on some IPs. However, the vulnerability will help attackers bypass the protection developers have set up for schemes and hosts. The vulnerability will lead to SSRF[1] and RCE[2] vulnerabilities in several cases.\n[1] https://cwe.mitre.org/data/definitions/918.html\n[2] https://cwe.mitre.org/data/definitions/94.html\n\n",
    "severity": [
        9.8,
        null
    ],
    "bounty": null,
    "weaknesses": [
        "Type Confusion"
    ],
    "screenshots": {
        "image_0": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/g2hlslwxdsdojgmmfunrht80saub?response-content-disposition=attachment%3B%20filename%3D%22image-20240507225530596.png%22%3B%20filename%2A%3DUTF-8%27%27image-20240507225530596.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQWDNVDTOV%2F20250324%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250324T215453Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIFfYz76VgKIVelpAyZYrTFyd%2Bv888ECgb3hj5JkFANhaAiBakh4q7w5DF%2BQv%2FfR5eWubo4B2u%2Bo1QPF29kQLxJJCtSq7BQj0%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAMaDDAxMzYxOTI3NDg0OSIMaTuljdCxi50w8QUmKo8FD%2BiOVbeXUa7mNlCRPUySpi4kddXYtD2seD5WI2%2F2DmARIyxhjceaM8TKf%2BSYoZzhII3Lo%2BxB9bhtM5mq5GHf8dhuKa6wT1fnf6QzZEKaUgSCbLM07nMLMlW8kqutXY0X59awJLzZ1yQMPBhBi80DLAkNvswgcBRW4v5P7iqkX0ggbzpmcRST%2FVm29J8Y5JKSc3LejY6AEIsv4KP6HB8aQXd%2BfsBH5R%2Bv6nok8pt6DJSaPkv5WA74F1I2%2FsmQsyL3exdqZLhvUP%2B6eTtLSHhdrEDhOIY34aESXhoik3RW%2B8g32NTyeA3P2G9e%2F4F7a3Rx6v%2BE7XMojKylsb5WIGfTy8QvhnCQCH9ukOo6rO5xOtdoQw%2BU4WqZuOTJU74EkFLV6%2FyUVWSq4FVDYEYqrbwizaX9y%2FV2Cy9LgrEtMK6sn8DZ3ViZlKyuxY19GNuJ5sW0c0M4RHngn3EmFJO0aNsL0r%2BbolwLdLRfuYtJe5DmZwCoKEbDaNAUonhneBWF55jLQZHoGAoWZ6qMF%2BevUTo0Jql5kULJryvcc%2FFpS8lTO%2BOZ3fGiS1eQAI2Fz0703T3mmda4haYMEOXNijTbkWhBg5v9JYyT2oqNlXBK7WUSUCkENcoqMjC4Z4VbEGjG4jS2qi%2BTYrhX4S3Sb1T987q8w6MeoXfX6tGmDYwiyj5QpWbUDz7cYSR0EBMdQlqeDG94vE59xzsfUrmstdXm%2FFxukqgG%2B7WWbJ1DxPiM3ia6sOr977IrFajGqovgtqRLgyGpz%2F9TqWE3RwWypLQ084%2FW16SLKEEufJUuPDTkr6LyX%2FDeWbUHVMs85EWTJG9ustt2iOq1%2F11LdHrP2SbFR46XOj69Mtw5xz%2F6iYaqUFV4ejD8yoa%2FBjqyAYwDDYybi7D4pT0wCry5lOVh3Zq%2B8g6G5jdIa7jf8%2FaU312%2BiIcARtKrUoF2Sn0ak6xLhjw%2BJVOcFyXg%2FOHRvGjaHhYmekMQ96U1XkJfdyuitawsi7z%2FEymOHQV%2BY9%2Bfo8XothwNtx6eE%2FG6W1iLa%2BedAtMC1tXYp3IvbXoZrn4jPRRJ5G0BroF0e3VIz4sm1tGxNoieH9VOPyqjIvF8mLhji1Uw2M%2F8ryzZmpR%2Fx4z3q1Q%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=cad5363ce46210e19100ed38cf4917f2b71dd759bfe89a4cabf66d3e58fe2e12",
        "image_1": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/l8jrydr4s9zyzvf92wl6h0m8ckqp?response-content-disposition=attachment%3B%20filename%3D%22image-20240507230111068.png%22%3B%20filename%2A%3DUTF-8%27%27image-20240507230111068.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQWDNVDTOV%2F20250324%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250324T215453Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIFfYz76VgKIVelpAyZYrTFyd%2Bv888ECgb3hj5JkFANhaAiBakh4q7w5DF%2BQv%2FfR5eWubo4B2u%2Bo1QPF29kQLxJJCtSq7BQj0%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAMaDDAxMzYxOTI3NDg0OSIMaTuljdCxi50w8QUmKo8FD%2BiOVbeXUa7mNlCRPUySpi4kddXYtD2seD5WI2%2F2DmARIyxhjceaM8TKf%2BSYoZzhII3Lo%2BxB9bhtM5mq5GHf8dhuKa6wT1fnf6QzZEKaUgSCbLM07nMLMlW8kqutXY0X59awJLzZ1yQMPBhBi80DLAkNvswgcBRW4v5P7iqkX0ggbzpmcRST%2FVm29J8Y5JKSc3LejY6AEIsv4KP6HB8aQXd%2BfsBH5R%2Bv6nok8pt6DJSaPkv5WA74F1I2%2FsmQsyL3exdqZLhvUP%2B6eTtLSHhdrEDhOIY34aESXhoik3RW%2B8g32NTyeA3P2G9e%2F4F7a3Rx6v%2BE7XMojKylsb5WIGfTy8QvhnCQCH9ukOo6rO5xOtdoQw%2BU4WqZuOTJU74EkFLV6%2FyUVWSq4FVDYEYqrbwizaX9y%2FV2Cy9LgrEtMK6sn8DZ3ViZlKyuxY19GNuJ5sW0c0M4RHngn3EmFJO0aNsL0r%2BbolwLdLRfuYtJe5DmZwCoKEbDaNAUonhneBWF55jLQZHoGAoWZ6qMF%2BevUTo0Jql5kULJryvcc%2FFpS8lTO%2BOZ3fGiS1eQAI2Fz0703T3mmda4haYMEOXNijTbkWhBg5v9JYyT2oqNlXBK7WUSUCkENcoqMjC4Z4VbEGjG4jS2qi%2BTYrhX4S3Sb1T987q8w6MeoXfX6tGmDYwiyj5QpWbUDz7cYSR0EBMdQlqeDG94vE59xzsfUrmstdXm%2FFxukqgG%2B7WWbJ1DxPiM3ia6sOr977IrFajGqovgtqRLgyGpz%2F9TqWE3RwWypLQ084%2FW16SLKEEufJUuPDTkr6LyX%2FDeWbUHVMs85EWTJG9ustt2iOq1%2F11LdHrP2SbFR46XOj69Mtw5xz%2F6iYaqUFV4ejD8yoa%2FBjqyAYwDDYybi7D4pT0wCry5lOVh3Zq%2B8g6G5jdIa7jf8%2FaU312%2BiIcARtKrUoF2Sn0ak6xLhjw%2BJVOcFyXg%2FOHRvGjaHhYmekMQ96U1XkJfdyuitawsi7z%2FEymOHQV%2BY9%2Bfo8XothwNtx6eE%2FG6W1iLa%2BedAtMC1tXYp3IvbXoZrn4jPRRJ5G0BroF0e3VIz4sm1tGxNoieH9VOPyqjIvF8mLhji1Uw2M%2F8ryzZmpR%2Fx4z3q1Q%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=b74e355a6ca501ad32cb7190ba149445f026917967dc3f67f1e1652f761b36da",
        "image_2": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/1tr2ah8gmy9ipphus1mbs5jo4drj?response-content-disposition=attachment%3B%20filename%3D%22image-20240507230208127.png%22%3B%20filename%2A%3DUTF-8%27%27image-20240507230208127.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQWDNVDTOV%2F20250324%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250324T215453Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJv%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIFfYz76VgKIVelpAyZYrTFyd%2Bv888ECgb3hj5JkFANhaAiBakh4q7w5DF%2BQv%2FfR5eWubo4B2u%2Bo1QPF29kQLxJJCtSq7BQj0%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAMaDDAxMzYxOTI3NDg0OSIMaTuljdCxi50w8QUmKo8FD%2BiOVbeXUa7mNlCRPUySpi4kddXYtD2seD5WI2%2F2DmARIyxhjceaM8TKf%2BSYoZzhII3Lo%2BxB9bhtM5mq5GHf8dhuKa6wT1fnf6QzZEKaUgSCbLM07nMLMlW8kqutXY0X59awJLzZ1yQMPBhBi80DLAkNvswgcBRW4v5P7iqkX0ggbzpmcRST%2FVm29J8Y5JKSc3LejY6AEIsv4KP6HB8aQXd%2BfsBH5R%2Bv6nok8pt6DJSaPkv5WA74F1I2%2FsmQsyL3exdqZLhvUP%2B6eTtLSHhdrEDhOIY34aESXhoik3RW%2B8g32NTyeA3P2G9e%2F4F7a3Rx6v%2BE7XMojKylsb5WIGfTy8QvhnCQCH9ukOo6rO5xOtdoQw%2BU4WqZuOTJU74EkFLV6%2FyUVWSq4FVDYEYqrbwizaX9y%2FV2Cy9LgrEtMK6sn8DZ3ViZlKyuxY19GNuJ5sW0c0M4RHngn3EmFJO0aNsL0r%2BbolwLdLRfuYtJe5DmZwCoKEbDaNAUonhneBWF55jLQZHoGAoWZ6qMF%2BevUTo0Jql5kULJryvcc%2FFpS8lTO%2BOZ3fGiS1eQAI2Fz0703T3mmda4haYMEOXNijTbkWhBg5v9JYyT2oqNlXBK7WUSUCkENcoqMjC4Z4VbEGjG4jS2qi%2BTYrhX4S3Sb1T987q8w6MeoXfX6tGmDYwiyj5QpWbUDz7cYSR0EBMdQlqeDG94vE59xzsfUrmstdXm%2FFxukqgG%2B7WWbJ1DxPiM3ia6sOr977IrFajGqovgtqRLgyGpz%2F9TqWE3RwWypLQ084%2FW16SLKEEufJUuPDTkr6LyX%2FDeWbUHVMs85EWTJG9ustt2iOq1%2F11LdHrP2SbFR46XOj69Mtw5xz%2F6iYaqUFV4ejD8yoa%2FBjqyAYwDDYybi7D4pT0wCry5lOVh3Zq%2B8g6G5jdIa7jf8%2FaU312%2BiIcARtKrUoF2Sn0ak6xLhjw%2BJVOcFyXg%2FOHRvGjaHhYmekMQ96U1XkJfdyuitawsi7z%2FEymOHQV%2BY9%2Bfo8XothwNtx6eE%2FG6W1iLa%2BedAtMC1tXYp3IvbXoZrn4jPRRJ5G0BroF0e3VIz4sm1tGxNoieH9VOPyqjIvF8mLhji1Uw2M%2F8ryzZmpR%2Fx4z3q1Q%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=70231e4229c7bed2d6ff332bc643b5ef918d3a4311f1aec19aeb4c92cb5ce2f1"
    },
    "disclosed_date": 1715167020,
    "report_url": "https://hackerone.com/reports/2493548",
    "is_multi_component": true,
    "complexity": "MEDIUM",
    "novelty": "MEDIUM",
    "vuln_category": "CODE",
    "steps": [
        [
            1,
            "Use curl to send a request to an IPv4-mapped IPv6 address with octal notation, e.g., `curl http://[::ffff:0127.000.0.1]/`"
        ],
        [
            2,
            "Observe that the request is sent to `127.0.0.1` instead of the intended `0127.0.0.1`, bypassing blocklist protections"
        ]
    ],
    "vuln_description": "The vulnerability involves incorrect type conversion in curl when handling IPv4-mapped IPv6 addresses with octal notation. Specifically, curl fails to properly interpret octal numbers in IPv4-mapped IPv6 addresses, leading to unintended requests to `127.0.0.1` instead of the specified address. This can bypass security measures designed to block access to `127.0.0.1`, potentially enabling SSRF, RFI, and LFI attacks.",
    "reason": "The vulnerability requires knowledge of IPv4-mapped IPv6 addresses and octal notation in IP addresses, but the attack itself is straightforward once these concepts are understood. The interaction between curl's IP parsing and blocklist validation is subtle but not overly complex.",
    "new_complexity": "MEDIUM",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}