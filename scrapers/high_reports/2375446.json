{
  "reported_to": "Internet Bug Bounty",
  "reported_by": "bart ",
  "title": "http: Reading unprocessed HTTP request with unbounded chunk extension allows DoS attacks",
  "content": "\nI'd like to report Node.js vulnerability (CVE-2024-22019) that was recently fixed:\nHackerOne report: https://hackerone.com/reports/2233486\nRelease notes: https://nodejs.org/en/blog/vulnerability/february-2024-security-releases\nImpact\nThis is a major issue because it allows unbounded resource (CPU, network bandwidth) consumption of the standard Node.js http server. The standard methods which could help blocking a malicious requests like timeouts and limiting request body size do not seem to work.\n\n",
  "severity": [
    7.5,
    null
  ],
  "bounty": 3495,
  "weaknesses": [
    "Uncontrolled Resource Consumption"
  ],
  "screenshots": {},
  "disclosed_date": 1709658540,
  "report_url": "https://hackerone.com/reports/2375446",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "MEDIUM",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Set up a Node.js HTTP server using the standard `http` module."
    ],
    [
      2,
      "Send a malicious HTTP request with an unbounded chunk extension to the server."
    ]
  ],
  "vuln_description": "The vulnerability involves the Node.js HTTP server improperly processing HTTP requests with unbounded chunk extensions, leading to potential Denial of Service (DoS) attacks by consuming excessive CPU and network bandwidth. Standard mitigation techniques like timeouts and request body size limits are ineffective against this attack.",
  "reason": "This vulnerability requires understanding of HTTP protocol specifics, particularly chunked transfer encoding, and how Node.js processes these requests. The interaction between the HTTP request parsing and resource consumption is non-obvious, but the attack itself is relatively straightforward once the flaw is identified.",
  "new_complexity": "MEDIUM",
  "requires_code": true,
  "requires_CVE": true,
  "is_ctf": false,
  "other_report": null
}