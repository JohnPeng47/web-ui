{
  "reported_to": "HackerOne",
  "reported_by": "jobert ",
  "title": "HackerOne Pentesters can access any structured scope object through GraphQL node interface",
  "content": "\nA missing authorization check in the StructuredScope protector class (app/protectors/protected_structured_scope.rb:42) enables any HackerOne Pentester to access structured scope objects of programs they aren't invited to or aren't running a penetration test through HackerOne.\nCode 639 Bytes\n1class ProtectedStructuredScope\n2  # ...\n3\n4  property(:CAN_INVITE_HACKERS) do\n5    StructuredScope.unscoped\n6      .joins(:team)\n7      .merge(Team.that_can_invite_hackers)\n8  end\n9\n10  group(\n11    # ...\n12    (has_role(H1_PENTESTER) & has_feature(CAN_INVITE_HACKERS)),\n13  ) do\n14    allow :id\n15    allow :asset_identifier\n16    allow :asset_type\n17    allow :eligible_for_bounty\n18    allow :eligible_for_submission\n19    allow :instruction\n20    allow :rendered_instruction\n21    allow :availability_requirement\n22    allow :confidentiality_requirement\n23    allow :integrity_requirement\n24    allow :max_severity\n25    allow :archived_at\n26    allow :updated_at\n27    # ...\n28end\nThe H1_PENTESTER role is defined as:\nCode 197 Bytes\n1  scope :user_is_hackerone_pentester, ->(user) do\n2    verified.where(\n3      User.where(id: user).where.not(id: nil).where(User.arel_table[:h1_pentester].eq(true)).select(1).arel.exists,\n4    )\n5  end\nThe authorization logic should contain a check that determines whether the user has access to the structured scope through the Pentest object.\nTo reproduce, the following GraphQL query can be used:\nCode 159 Bytes\n1query {\n2  node(id: \"Z2lkOi8vaGFja2Vyb25lL1N0cnVjdHVyZWRTY29wZS8x\") {\n3    ... on StructuredScope {\n4      _id\n5      asset_identifier\n6      asset_type\n7    }\n8  }\n9}\nReplace the node ID with any structured scope that belongs to a private program and it'll expose the attributes included in the protector.\nImpact\nHackerOne Pentesters, although having more access than normal users, can obtain information from private programs that they don't have access to and aren't doing a penetration test through HackerOne.\n\n",
  "severity": "[",
  "bounty": null,
  "weaknesses": "[",
  "screenshots": {},
  "disclosed_date": 1583980680,
  "report_url": "https://hackerone.com/reports/781150",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "MEDIUM",
  "vuln_category": "API",
  "steps": "[",
  "vuln_description": "A missing authorization check in the StructuredScope protector class allows HackerOne Pentesters to access structured scope objects of programs they are not invited to or not currently testing, leading to unauthorized information disclosure.",
  "reason": "The vulnerability involves understanding the GraphQL interface and the specific authorization logic flaw in the protector class, but does not require complex interactions or state manipulation.",
  "new_complexity": "MEDIUM",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "idor_detectable": true,
  "authnz_byppass_detectable": true,
  "injection_classification": "}"
}