{
  "reported_to": "GitLab",
  "reported_by": "jobert ",
  "title": "Project Template functionality can be used to copy private project data, such as repository, confidential issues, snippets, and merge requests",
  "content": "\nI've found a three minor vulnerabilities which, when combined, allow an attacker to copy private repositories, confidential issues, private snippets, and then some. I'll go through the code path to explain the vulnerabilities and how they are combined. See the Proof of Concept section if you want to reproduce it immediately.\nLet's start at the ProjectsController of EE, which is prepended to app/controllers/projects_controller.rb in an EE instance.\nee/app/controllers/ee/projects_controller.rb\nCode 252 Bytes\n1override :project_params_attributes\n2    def project_params_attributes\n3      super + project_params_ee\n4    end\n5\n6def project_params_ee\n7  attrs = %i[\n8    # ...\n9    use_custom_template\n10    # ...\n11    group_with_project_templates_id\n12  ]\n13\n14  # ...\n15\n16  attrs\n17end\nThis method defines what parameters can be passed by the user. The two notable parameters here are use_custom_template and group_with_project_templates_id. This method appends the result value of project_params_attributes method in app/controllers/projects_controller.rb on line 351, which specifies all the CE attributes a user can provide when creating a project. The CE controller allows the template_name parameter to be passed, too. This means that these three parameters can be passed to the Projects::CreateService in the create method:\napp/controllers/projects_controller.rb\nCode 236 Bytes\n1def create\n2  @project = ::Projects::CreateService.new(current_user, project_params(attributes: project_params_create_attributes)).execute\n3\n4  # ...\n5end\n6\n7# ...\n8\n9def project_params_attributes\n10  [\n11    # ...\n12    :template_name,\n13    # ...\n14  ]\nIn EE, the EE:Projects::CreateService is prepended to the Projects::CreateService. The prepended EE code contains logic to validate the use_custom_template and group_with_project_templates_id parameters.\nee/app/services/ee/projects/create_service.rb\nCode 765 Bytes\n1def execute\n2  # ...\n3\n4  group_with_project_templates_id = params.delete(:group_with_project_templates_id) if params[:template_name].blank?\n5\n6  # ...\n7\n8    validate_namespace_used_with_template(project, group_with_project_templates_id)\n9end\n10\n11# ...\n12\n13def validate_namespace_used_with_template(project, group_with_project_templates_id)\n14  return unless project.group\n15\n16  subgroup_with_templates_id = group_with_project_templates_id || params[:group_with_project_templates_id]\n17  return if subgroup_with_templates_id.blank?\n18\n19  templates_owner = ::Group.find(subgroup_with_templates_id).parent\n20\n21  unless templates_owner.self_and_descendants.exists?(id: project.namespace_id)\n22    project.errors.add(:namespace, _(\"is not a descendant of the Group owning the template\"))\n23  end\n24end\nThe code above is where the first vulnerability can be found. In a normal situation, a Project Template can only be copied to a namespace (group) that is a descendant of the project template. However, the validate_namespace_used_with_template method returns a nil value when the project is not being created for a group (return unless project.group). This means that if a group_with_project_templates_id is given for a project that is created in a User namespace, the authorization / validation logic is never executed. This means that the use_custom_template and group_with_project_templates_id parameters remain to be set on the instance variable params.\nBecause the EE code is prepended, the execute method is executed before the Projects::CreateService is called. Because the EE class its validation logic is bypassed, the execute method of the Projects::CreateService class is called:\napp/services/projects/create_service.rb\nCode 151 Bytes\n1def execute\n2  if @params[:template_name].present?\n3    return ::Projects::CreateFromTemplateService.new(current_user, params).execute\n4  end\n5\n6  # ...\n7end\nWhen a template_name is given, instead of executing the normal execution flow, the result of Projects::CreateFromTemplateService is returned. The CE code for this class isn't very important. The EE class contains the logic that is worth checking out:\nee/app/services/ee/projects/create_from_template_service.rb\nCode 704 Bytes\n1def execute\n2  return super unless use_custom_template?\n3\n4  override_params = params.dup\n5  params[:custom_template] = template_project if template_project\n6\n7  ::Projects::GitlabProjectsImportService.new(current_user, params, override_params).execute\n8end\n9\n10private\n11\n12def use_custom_template?\n13  # ...\n14    template_name &&\n15      ::Gitlab::Utils.to_boolean(params.delete(:use_custom_template)) &&\n16      ::Gitlab::CurrentSettings.custom_project_templates_enabled?\n17  # ...\n18end\n19\n20def template_project\n21  # ...\n22    current_user.available_custom_project_templates(search: template_name, subgroup_id: subgroup_id)\n23                .first\n24  # ...\n25end\n26\n27def subgroup_id\n28  params[:group_with_project_templates_id].presence\n29end\nThis class does a couple of things: it makes sure a custom template name is given, that it should use the given template name, and that the GitLab instance has custom project templates enabled. For what it's worth: gitlab.com has this setting enabled. When it passes those checks, the template_project method is invoked. Here is the definition of the available_custom_project_templates method:\nee/app/models/ee/user.rb\nCode 357 Bytes\n1def available_custom_project_templates(search: nil, subgroup_id: nil)\n2  templates = ::Gitlab::CurrentSettings.available_custom_project_templates(subgroup_id)\n3\n4  ::ProjectsFinder.new(current_user: self,\n5                       project_ids_relation: templates,\n6                       params: { search: search, sort: 'name_asc' })\n7                  .execute\n8end\nThis method requires two parameters: search and subgroup_id. The first one is the template_name the user passes, the second one group_with_project_templates_id. The templates variable gets its value based on the following method definition:\nee/app/models/ee/application_setting.rb\nCode 208 Bytes\n1def available_custom_project_templates(subgroup_id = nil)\n2  group_id = subgroup_id || custom_project_templates_group_id\n3\n4  return ::Project.none unless group_id\n5\n6  ::Project.where(namespace_id: group_id) \n7end\nThis method will return all Project models based on the namespace_id that is provided in the subgroup_id parameter. This is then passed to the ProjectsFinder in the available_custom_project_templates method on the User model. This is where the second vulnerability can be found. The ProjectsFinder uses an initial collection, which consists of the projects the authenticated user can access. However, it does not check the access level of the user. This means that any project that is public, but has Repository, Issue, Snippets (etc.) access disabled for Guests, will be returned by the available_custom_project_templates method on the User model. In a perfect world, it seems that this method would limit the projects that can be returned based on the user's permissions for said projects.\nIf we go back to the EE:Projects::CreateFromTemplateService file, you can see that the template_project will return the first project that is returned by the available_custom_project_templates method. This means that params[:custom_template] may contain a Project model that the user is not authorized to see everything for. The EE::Projects::CreateFromTemplateService class then calls the Projects::GitlabProjectsImportService class with the updated parameters.\nee/app/services/ee/projects/gitlab_projects_import_service.rb\nCode 675 Bytes\n1def execute\n2  super.tap do |project|\n3    if project.saved? && custom_template\n4      custom_template.add_export_job(current_user: current_user,\n5                                     after_export_strategy: export_strategy(project))\n6    end\n7  end\n8end\n9\n10private\n11\n12override :prepare_import_params\n13def prepare_import_params\n14  super\n15\n16  if custom_template\n17    params[:import_type] = 'gitlab_custom_project_template'\n18  end\n19end\n20\n21def custom_template\n22  strong_memoize(:custom_template) do\n23    params.delete(:custom_template)\n24  end\n25end\n26\n27def export_strategy(project) \n28 Gitlab::ImportExport::AfterExportStrategies::CustomTemplateExportImportStrategy.new(export_into_project_id: project.id)\n29end\nThis EE class is prepended, but uses super.tap to call the CE code (super) and then taps into the result of the CE code. If params[:custom_template] has been set and the project was successfully saved by the super call, an export job is scheduled for the custom_template that was returned by the ProjectsFinder. It's worth nothing that at this point the user may not be authorized to see the code, issues, etc., of the project. Additionally, an export strategy is passed that imports the export file in the newly created project.\nThis is where the third vulnerability can be found. When an export job is scheduled, it assumes the user is authorized to make the export. Ideally, the Sidekiq job (ProjectExportWorker) that is scheduled would do an authorization check to make sure that the user is authorized to export the project. This would also avoid a TOCTOU issue where the user schedules a job when the queue is clogged / Sidekiq workers are paused and would leave the project before the job is executed. When the export is created, it'll automatically be imported in the project that the user has full access to.\nCombined, these vulnerabilities results in an attacker being able to obtain any confidential information that is included in a project export. This vulnerability only works for public projects with limited access levels for repositories, issues, pipelines, merge requests (and more) that belong to a group. A good example of this would be gitlab-org, gitlab-data, gitlab-com, on gitlab.com. There are plenty of repositories, such as https://gitlab.com/gitlab-com/finance (see below), that are public but don't expose the repository, issues, and merge requests.\n<image_0>\nProof of Concept\nTo reproduce this vulnerability:\nsign in as a normal user and create a group, let's assume this is group ID 1\nwithin this group, create a public project named test_project\nunder Settings > General update the Visibility, project features, permissions to only allow Issues, Repository, Wiki, and Snippets to be seen by Only Project Members:\n<image_1>\nsign into another account and go to http://instance/projects/new\ncreate a new project and intercept the request, it'll look something like this (I've left out unimportant parameters):\nCode 602 Bytes\n1POST /projects HTTP/1.1\n2Host: instance\n3...\n4\n5----------506740453\n6Content-Disposition: form-data; name=\"project[use_custom_template]\"\n7\n8false\n9----------506740453\n10Content-Disposition: form-data; name=\"project[template_name]\"\n11\n12----------506740453\n13Content-Disposition: form-data; name=\"project[group_with_project_templates_id]\"\n14\n15----------506740453\n16Content-Disposition: form-data; name=\"project[name]\"\n17\n18project_name\n19----------506740453\n20Content-Disposition: form-data; name=\"project[namespace_id]\"\n21\n221\n23----------506740453\n24Content-Disposition: form-data; name=\"project[path]\"\n25\n26project_name\n27----------506740453--\nin this request, change use_custom_template to true, the template_name to the name the victim gave to the project (test_project), and group_with_project_templates_id to the group ID of the public group the victim created (1). When forwarded, the server will respond with a redirect and, when followed, show a page indicating that the project is being imported:\n<image_2>\nDepending on the size of the project and how busy the queues are, it can take a couple of minutes to generate the export of the project and then import it to the new project. Come back in a couple minutes and find the repository, confidential issues, private snippets, merge requests, CI pipelines, and more being copied to the attacker's project.\n<image_3>\nImpact\nAny access level that has been put in place for projects the user can access can be bypassed using this vulnerability. According to the documentation, this means that the following information can be obtained:\nProject and wiki repositories\nProject uploads\nProject configuration, including services\nIssues with comments, merge requests with diffs and comments, labels, milestones, snippets, and other project entities\nLFS objects\nIssue Boards\n<image_4>\n\n",
  "severity": [
    9.0,
    10.0
  ],
  "bounty": 12000,
  "weaknesses": [
    "Privilege Escalation"
  ],
  "screenshots": {
    "image_0": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/YJg2MxMjQFVWz8m31AMTNF2n?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2019-09-05_at_10.08.18_PM.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2019-09-05_at_10.08.18_PM.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVS47X3CA%2F20250326%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250326T022957Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjELf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDxYss4YIGls0cszZQ1SH%2B1xSdoErdhUvyV5RSVsfYSpAIhALgtyBSIuiyvfvrOuahp2dR7dhplGI0zsujwEWu%2Bq6%2BEKrIFCCAQAxoMMDEzNjE5Mjc0ODQ5Igz7reJAfU2xzcJQlysqjwUwgbkDy8FeHuIgjjQZSSQ%2Fwz2JcJJwoIVgnjZMbFWvXxA0hPyrfIjcwtLeyzF3ok5GehIXn91Wy7fDCUkrUU7A5VMhWYEvLV3DxDrYmNMuLZpE%2FWRUJYWQmSgVx2gZtW9%2FqsiGnwRNXYUZa5T6KF%2BUA31gpR%2Bu%2BFMPUkwNvxNyEBRHypojNYRFlzo5EggbbRP8aZmRqD833mDpafMDKiDfNA28eH79vkmbDUKFi%2FRhWykONG8JRQheb75v1GX31hrk1L8u1zPHTFbLn71p2H5wjZmEoonQGf5RhFmpW1zbbUEV65nl5DnLFaOjxUYksFgcGBJco0OtVsqN8nqdspsBJvQy6Qqc4X%2FkzuDXD%2BPYx3S7BO8Xva3s8a8TN96v1gX95XTaTemTmeaj1ESU1Y%2BiCDkvEfkzPaez0cSRWNdsq9i%2B%2B3AB121pQv97UmKNnymRC9XrfNCjheJvP8%2B1ahif4EzzwIZyuwjBMezZKhGLW7ulcNmW88VKqKacmqlyNHYWfiCiGmndOCbeQyYCRid9KzfIQ2SeNeqsnghfx8JVdvGKKtPB1hk7OQNCqb%2BtpgQWm%2B8n%2BtDNRQImuMOGK14DG3yRHy9Avx%2FHOGeF8a9GVJ6NJimW9Ecb2T6E7RqL7ne5qRZDmafIXgH6mlCFVcf%2Flr5QeQ52RhBCPYo6TRRgBWZ%2FEovl46GkFsYVBX%2FIr4SzvdVa%2FNww4T5NYik3vIJ1NHswu7sqCeZdDw7s3nxsVMRVYSGo72HmcEKxy7ZvjHaQ7%2FA%2FhytntT5d9gFqm%2BJZS2feTkdBLll7%2FZmU%2F0J7tml4GCVi0gUlz6n7oXDJBImiDBsaAqob0HPuP1lnTDGOARLWRi1VAkeyiSiZx6MQML3cjL8GOrABJaY4PqkzyFbyL9b2dX4ahmhxVJurQJJj1YCo%2FWMfCIcjtRIVhFMbuG8aMIc9rpd5RnH%2BdThD0TThbFSeDBmVPFdFSLa8sb4P%2FriAdsyJGyDCYOkPOqU5CNy29uE2efF02gCJn%2F3WqBrgnyVPeV9MEustSu%2Bi2xovh9huv2%2ByWnLF8g1vc9Ecjq6wFibTWSxIYTLlafk7orczm6J8TcD3XYRmLnPpvaubR7I6XZoSaZU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=7427296816264dd67dbc99d5d9231d99c97a7ccc42ce861bef7addcde4479d5b",
    "image_1": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/56DQDWBuNn7wzkMA2XHp4Hav?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2019-09-05_at_10.13.21_PM.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2019-09-05_at_10.13.21_PM.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVS47X3CA%2F20250326%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250326T022957Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjELf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDxYss4YIGls0cszZQ1SH%2B1xSdoErdhUvyV5RSVsfYSpAIhALgtyBSIuiyvfvrOuahp2dR7dhplGI0zsujwEWu%2Bq6%2BEKrIFCCAQAxoMMDEzNjE5Mjc0ODQ5Igz7reJAfU2xzcJQlysqjwUwgbkDy8FeHuIgjjQZSSQ%2Fwz2JcJJwoIVgnjZMbFWvXxA0hPyrfIjcwtLeyzF3ok5GehIXn91Wy7fDCUkrUU7A5VMhWYEvLV3DxDrYmNMuLZpE%2FWRUJYWQmSgVx2gZtW9%2FqsiGnwRNXYUZa5T6KF%2BUA31gpR%2Bu%2BFMPUkwNvxNyEBRHypojNYRFlzo5EggbbRP8aZmRqD833mDpafMDKiDfNA28eH79vkmbDUKFi%2FRhWykONG8JRQheb75v1GX31hrk1L8u1zPHTFbLn71p2H5wjZmEoonQGf5RhFmpW1zbbUEV65nl5DnLFaOjxUYksFgcGBJco0OtVsqN8nqdspsBJvQy6Qqc4X%2FkzuDXD%2BPYx3S7BO8Xva3s8a8TN96v1gX95XTaTemTmeaj1ESU1Y%2BiCDkvEfkzPaez0cSRWNdsq9i%2B%2B3AB121pQv97UmKNnymRC9XrfNCjheJvP8%2B1ahif4EzzwIZyuwjBMezZKhGLW7ulcNmW88VKqKacmqlyNHYWfiCiGmndOCbeQyYCRid9KzfIQ2SeNeqsnghfx8JVdvGKKtPB1hk7OQNCqb%2BtpgQWm%2B8n%2BtDNRQImuMOGK14DG3yRHy9Avx%2FHOGeF8a9GVJ6NJimW9Ecb2T6E7RqL7ne5qRZDmafIXgH6mlCFVcf%2Flr5QeQ52RhBCPYo6TRRgBWZ%2FEovl46GkFsYVBX%2FIr4SzvdVa%2FNww4T5NYik3vIJ1NHswu7sqCeZdDw7s3nxsVMRVYSGo72HmcEKxy7ZvjHaQ7%2FA%2FhytntT5d9gFqm%2BJZS2feTkdBLll7%2FZmU%2F0J7tml4GCVi0gUlz6n7oXDJBImiDBsaAqob0HPuP1lnTDGOARLWRi1VAkeyiSiZx6MQML3cjL8GOrABJaY4PqkzyFbyL9b2dX4ahmhxVJurQJJj1YCo%2FWMfCIcjtRIVhFMbuG8aMIc9rpd5RnH%2BdThD0TThbFSeDBmVPFdFSLa8sb4P%2FriAdsyJGyDCYOkPOqU5CNy29uE2efF02gCJn%2F3WqBrgnyVPeV9MEustSu%2Bi2xovh9huv2%2ByWnLF8g1vc9Ecjq6wFibTWSxIYTLlafk7orczm6J8TcD3XYRmLnPpvaubR7I6XZoSaZU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=9dce621ab3f0e13e4cc6fbc972244a78e1548f77bc11d41c6a1986092db69139",
    "image_2": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/7iEDiBFgHrATxZkkAtqhmNhR?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2019-09-05_at_10.17.09_PM.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2019-09-05_at_10.17.09_PM.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVS47X3CA%2F20250326%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250326T022957Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjELf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDxYss4YIGls0cszZQ1SH%2B1xSdoErdhUvyV5RSVsfYSpAIhALgtyBSIuiyvfvrOuahp2dR7dhplGI0zsujwEWu%2Bq6%2BEKrIFCCAQAxoMMDEzNjE5Mjc0ODQ5Igz7reJAfU2xzcJQlysqjwUwgbkDy8FeHuIgjjQZSSQ%2Fwz2JcJJwoIVgnjZMbFWvXxA0hPyrfIjcwtLeyzF3ok5GehIXn91Wy7fDCUkrUU7A5VMhWYEvLV3DxDrYmNMuLZpE%2FWRUJYWQmSgVx2gZtW9%2FqsiGnwRNXYUZa5T6KF%2BUA31gpR%2Bu%2BFMPUkwNvxNyEBRHypojNYRFlzo5EggbbRP8aZmRqD833mDpafMDKiDfNA28eH79vkmbDUKFi%2FRhWykONG8JRQheb75v1GX31hrk1L8u1zPHTFbLn71p2H5wjZmEoonQGf5RhFmpW1zbbUEV65nl5DnLFaOjxUYksFgcGBJco0OtVsqN8nqdspsBJvQy6Qqc4X%2FkzuDXD%2BPYx3S7BO8Xva3s8a8TN96v1gX95XTaTemTmeaj1ESU1Y%2BiCDkvEfkzPaez0cSRWNdsq9i%2B%2B3AB121pQv97UmKNnymRC9XrfNCjheJvP8%2B1ahif4EzzwIZyuwjBMezZKhGLW7ulcNmW88VKqKacmqlyNHYWfiCiGmndOCbeQyYCRid9KzfIQ2SeNeqsnghfx8JVdvGKKtPB1hk7OQNCqb%2BtpgQWm%2B8n%2BtDNRQImuMOGK14DG3yRHy9Avx%2FHOGeF8a9GVJ6NJimW9Ecb2T6E7RqL7ne5qRZDmafIXgH6mlCFVcf%2Flr5QeQ52RhBCPYo6TRRgBWZ%2FEovl46GkFsYVBX%2FIr4SzvdVa%2FNww4T5NYik3vIJ1NHswu7sqCeZdDw7s3nxsVMRVYSGo72HmcEKxy7ZvjHaQ7%2FA%2FhytntT5d9gFqm%2BJZS2feTkdBLll7%2FZmU%2F0J7tml4GCVi0gUlz6n7oXDJBImiDBsaAqob0HPuP1lnTDGOARLWRi1VAkeyiSiZx6MQML3cjL8GOrABJaY4PqkzyFbyL9b2dX4ahmhxVJurQJJj1YCo%2FWMfCIcjtRIVhFMbuG8aMIc9rpd5RnH%2BdThD0TThbFSeDBmVPFdFSLa8sb4P%2FriAdsyJGyDCYOkPOqU5CNy29uE2efF02gCJn%2F3WqBrgnyVPeV9MEustSu%2Bi2xovh9huv2%2ByWnLF8g1vc9Ecjq6wFibTWSxIYTLlafk7orczm6J8TcD3XYRmLnPpvaubR7I6XZoSaZU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=9a52c6f46ccc4b4246dd6dd5d5feb94693325d1ccdda8ad831365f1d7c41b32a",
    "image_3": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/U4T78d2Ai7e5K5WrkV3tQn2D?response-content-disposition=attachment%3B%20filename%3D%22Screen_Shot_2019-09-05_at_10.19.15_PM.png%22%3B%20filename%2A%3DUTF-8%27%27Screen_Shot_2019-09-05_at_10.19.15_PM.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVS47X3CA%2F20250326%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250326T022957Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjELf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDxYss4YIGls0cszZQ1SH%2B1xSdoErdhUvyV5RSVsfYSpAIhALgtyBSIuiyvfvrOuahp2dR7dhplGI0zsujwEWu%2Bq6%2BEKrIFCCAQAxoMMDEzNjE5Mjc0ODQ5Igz7reJAfU2xzcJQlysqjwUwgbkDy8FeHuIgjjQZSSQ%2Fwz2JcJJwoIVgnjZMbFWvXxA0hPyrfIjcwtLeyzF3ok5GehIXn91Wy7fDCUkrUU7A5VMhWYEvLV3DxDrYmNMuLZpE%2FWRUJYWQmSgVx2gZtW9%2FqsiGnwRNXYUZa5T6KF%2BUA31gpR%2Bu%2BFMPUkwNvxNyEBRHypojNYRFlzo5EggbbRP8aZmRqD833mDpafMDKiDfNA28eH79vkmbDUKFi%2FRhWykONG8JRQheb75v1GX31hrk1L8u1zPHTFbLn71p2H5wjZmEoonQGf5RhFmpW1zbbUEV65nl5DnLFaOjxUYksFgcGBJco0OtVsqN8nqdspsBJvQy6Qqc4X%2FkzuDXD%2BPYx3S7BO8Xva3s8a8TN96v1gX95XTaTemTmeaj1ESU1Y%2BiCDkvEfkzPaez0cSRWNdsq9i%2B%2B3AB121pQv97UmKNnymRC9XrfNCjheJvP8%2B1ahif4EzzwIZyuwjBMezZKhGLW7ulcNmW88VKqKacmqlyNHYWfiCiGmndOCbeQyYCRid9KzfIQ2SeNeqsnghfx8JVdvGKKtPB1hk7OQNCqb%2BtpgQWm%2B8n%2BtDNRQImuMOGK14DG3yRHy9Avx%2FHOGeF8a9GVJ6NJimW9Ecb2T6E7RqL7ne5qRZDmafIXgH6mlCFVcf%2Flr5QeQ52RhBCPYo6TRRgBWZ%2FEovl46GkFsYVBX%2FIr4SzvdVa%2FNww4T5NYik3vIJ1NHswu7sqCeZdDw7s3nxsVMRVYSGo72HmcEKxy7ZvjHaQ7%2FA%2FhytntT5d9gFqm%2BJZS2feTkdBLll7%2FZmU%2F0J7tml4GCVi0gUlz6n7oXDJBImiDBsaAqob0HPuP1lnTDGOARLWRi1VAkeyiSiZx6MQML3cjL8GOrABJaY4PqkzyFbyL9b2dX4ahmhxVJurQJJj1YCo%2FWMfCIcjtRIVhFMbuG8aMIc9rpd5RnH%2BdThD0TThbFSeDBmVPFdFSLa8sb4P%2FriAdsyJGyDCYOkPOqU5CNy29uE2efF02gCJn%2F3WqBrgnyVPeV9MEustSu%2Bi2xovh9huv2%2ByWnLF8g1vc9Ecjq6wFibTWSxIYTLlafk7orczm6J8TcD3XYRmLnPpvaubR7I6XZoSaZU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=c6a0f169e4c5aa1e36e1d67d2d9ea835ed93a0035c0f6b0ff478a18fc1107d03",
    "image_4": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/7cGEg6PnngXDrDJvUgGvLtdx?response-content-disposition=attachment%3B%20filename%3D%22cat.gif%22%3B%20filename%2A%3DUTF-8%27%27cat.gif&response-content-type=image%2Fgif&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQVS47X3CA%2F20250326%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250326T022957Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjELf%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJIMEYCIQDxYss4YIGls0cszZQ1SH%2B1xSdoErdhUvyV5RSVsfYSpAIhALgtyBSIuiyvfvrOuahp2dR7dhplGI0zsujwEWu%2Bq6%2BEKrIFCCAQAxoMMDEzNjE5Mjc0ODQ5Igz7reJAfU2xzcJQlysqjwUwgbkDy8FeHuIgjjQZSSQ%2Fwz2JcJJwoIVgnjZMbFWvXxA0hPyrfIjcwtLeyzF3ok5GehIXn91Wy7fDCUkrUU7A5VMhWYEvLV3DxDrYmNMuLZpE%2FWRUJYWQmSgVx2gZtW9%2FqsiGnwRNXYUZa5T6KF%2BUA31gpR%2Bu%2BFMPUkwNvxNyEBRHypojNYRFlzo5EggbbRP8aZmRqD833mDpafMDKiDfNA28eH79vkmbDUKFi%2FRhWykONG8JRQheb75v1GX31hrk1L8u1zPHTFbLn71p2H5wjZmEoonQGf5RhFmpW1zbbUEV65nl5DnLFaOjxUYksFgcGBJco0OtVsqN8nqdspsBJvQy6Qqc4X%2FkzuDXD%2BPYx3S7BO8Xva3s8a8TN96v1gX95XTaTemTmeaj1ESU1Y%2BiCDkvEfkzPaez0cSRWNdsq9i%2B%2B3AB121pQv97UmKNnymRC9XrfNCjheJvP8%2B1ahif4EzzwIZyuwjBMezZKhGLW7ulcNmW88VKqKacmqlyNHYWfiCiGmndOCbeQyYCRid9KzfIQ2SeNeqsnghfx8JVdvGKKtPB1hk7OQNCqb%2BtpgQWm%2B8n%2BtDNRQImuMOGK14DG3yRHy9Avx%2FHOGeF8a9GVJ6NJimW9Ecb2T6E7RqL7ne5qRZDmafIXgH6mlCFVcf%2Flr5QeQ52RhBCPYo6TRRgBWZ%2FEovl46GkFsYVBX%2FIr4SzvdVa%2FNww4T5NYik3vIJ1NHswu7sqCeZdDw7s3nxsVMRVYSGo72HmcEKxy7ZvjHaQ7%2FA%2FhytntT5d9gFqm%2BJZS2feTkdBLll7%2FZmU%2F0J7tml4GCVi0gUlz6n7oXDJBImiDBsaAqob0HPuP1lnTDGOARLWRi1VAkeyiSiZx6MQML3cjL8GOrABJaY4PqkzyFbyL9b2dX4ahmhxVJurQJJj1YCo%2FWMfCIcjtRIVhFMbuG8aMIc9rpd5RnH%2BdThD0TThbFSeDBmVPFdFSLa8sb4P%2FriAdsyJGyDCYOkPOqU5CNy29uE2efF02gCJn%2F3WqBrgnyVPeV9MEustSu%2Bi2xovh9huv2%2ByWnLF8g1vc9Ecjq6wFibTWSxIYTLlafk7orczm6J8TcD3XYRmLnPpvaubR7I6XZoSaZU%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=8466b3c692598c800bf94a2f1abe67ef2bda21d165f3086129b5a749c7bdd311"
  },
  "disclosed_date": 1574866920,
  "report_url": "https://hackerone.com/reports/689314",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "HIGH",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Sign in as a normal user and create a group (assume group ID 1). Within this group, create a public project named 'test_project'. Under Settings > General, update the Visibility, project features, permissions to only allow Issues, Repository, Wiki, and Snippets to be seen by 'Only Project Members'."
    ],
    [
      2,
      "Sign into another account and go to http://instance/projects/new. Create a new project and intercept the request. Modify the request to set 'use_custom_template' to true, 'template_name' to 'test_project', and 'group_with_project_templates_id' to the group ID of the public group (1). Forward the request and observe the project being imported with all private data."
    ]
  ],
  "vuln_description": "The vulnerability allows an attacker to copy private project data (repositories, confidential issues, snippets, merge requests) from a public project with restricted access by exploiting a chain of three minor vulnerabilities in the project template functionality. The attacker bypasses authorization checks by manipulating project creation parameters to trigger an unauthorized export and import of the target project's data.",
  "reason": "This vulnerability involves understanding and chaining three distinct flaws: 1) bypassing group namespace validation for user namespaces, 2) improper access control in the ProjectsFinder that returns projects without proper permission checks, and 3) missing authorization in the export job scheduling. The attacker needs to understand the complex interaction between these components and the project creation flow.",
  "new_complexity": "HIGH",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "idor_detectable": true,
  "authnz_byppass_detectable": true,
  "is_simple_payload": false,
  "injection_metadata": {
    "is_simple_payload": false
  },
  "authnz_metadata": {
    "idor_detectable": true,
    "authnz_byppass_detectable": true
  }
}