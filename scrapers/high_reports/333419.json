{
    "reported_to": "Slack",
    "reported_by": "sandrogauci ",
    "title": "TURN server allows TCP and UDP proxying to internal network, localhost and meta-data services",
    "content": "\nThe TURN servers used by Slack allow TCP connections and UDP packets to be proxied to the internal network. This gives an attacker the ability to scan and interact with internal systems.\nThe attacker may proxy TCP connections to the internal network by setting the XOR-PEER-ADDRESS of the TURN connect message (method 0x000A, https://tools.ietf.org/html/rfc6062#section-4.3) to a private IPv4 address.\nUDP packets may be proxied by setting the XOR-PEER-ADDRESS to a private IP in the TURN send message indication (method 0x0006, https://tools.ietf.org/html/rfc5766#section-10).\nPlease check the attached report for additional details.\nImpact\nBy abusing this feature an attacker will be able to read and potentially modify sensitive information in Slack's internal infrastructure. Typically, this security vulnerability has at least the same impact as an SSRF. However it is considered more useful from an attacker's point of view since attacks are not restricted to HTTP.\nThe hacker selected the Server-Side Request Forgery (SSRF) weakness. This vulnerability type requires contextual information from the hacker. They provided the following answers:\nCan internal services be reached bypassing network access control?\nYes\nWhat internal services were accessible?\nMetadata, localhost, network services on the 10.0.0.0/8\nSecurity Impact\nBy abusing this feature an attacker will be able to read and potentially modify sensitive information in Slack's internal infrastructure. Typically, this security vulnerability has at least the same impact as an SSRF. However it is considered more useful from an attacker's point of view since attacks are not restricted to HTTP.\nNote: vulnerability is not SSRF but open TURN proxy - this was the closest I could choose.\n\n",
    "severity": [
        9.0,
        10.0
    ],
    "bounty": 3500,
    "weaknesses": [
        "Server-Side Request Forgery (SSRF)"
    ],
    "screenshots": {},
    "disclosed_date": 1583986500,
    "report_url": "https://hackerone.com/reports/333419",
    "is_multi_component": true,
    "complexity": "HIGH",
    "novelty": "MEDIUM",
    "vuln_category": "API",
    "steps": [
        [
            1,
            "Identify the TURN server used by Slack."
        ],
        [
            2,
            "Use the TURN connect message (method 0x000A) to set the XOR-PEER-ADDRESS to a private IPv4 address to proxy TCP connections to the internal network."
        ],
        [
            3,
            "Use the TURN send message indication (method 0x0006) to set the XOR-PEER-ADDRESS to a private IP to proxy UDP packets to the internal network."
        ],
        [
            4,
            "Scan and interact with internal systems, including metadata, localhost, and network services on the 10.0.0.0/8 range."
        ]
    ],
    "vuln_description": "The TURN servers used by Slack allow TCP connections and UDP packets to be proxied to the internal network, enabling an attacker to scan and interact with internal systems. This can lead to reading or modifying sensitive information in Slack's internal infrastructure, similar to an SSRF but more versatile as it is not restricted to HTTP.",
    "reason": "The vulnerability involves understanding TURN server protocols and how to manipulate them to proxy connections to internal networks. While the steps are straightforward once the TURN server is identified, the initial discovery of the misconfigured TURN server and understanding the protocol specifics add to the complexity.",
    "new_complexity": "MEDIUM",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}