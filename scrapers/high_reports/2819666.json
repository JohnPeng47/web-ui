{
  "reported_to": "curl",
  "reported_by": "reterix ",
  "title": "Exploitable Format String Vulnerability in curl_mfprintf Function",
  "content": "\nSummary:\nThe curl_mfprintf function in the curl_printf.h file contains a format string vulnerability that allows an attacker to inject arbitrary format specifiers. This can lead to unauthorized access to memory content, potential application crashes, or leakage of sensitive data.\nSteps To Reproduce:\nPrepare the Test Code: Create a new file named test_printf.c with the following content:\ninclude <stdio.h>\ninclude \"curl_printf.h\"\nint main() {\nchar* user_input = \"%x %x %x %x\"; // Attempt to read memory content\ncurl_mfprintf(stdout, user_input); // Passing user-controlled input to the vulnerable function\nreturn 0;\n}\nCompile the Code: Compile the test program with the following command:\nbash\ngcc -o test_printf test_printf.c -I./lib -I./include -L./lib/.libs -lcurl\nExecute the Code: Run the compiled program:\nbash\n./test_printf\nObserve the Output: The output should display memory content, which confirms that the vulnerability is exploitable.\nImpact\nThis vulnerability allows an attacker to use format string specifiers to access arbitrary memory locations. By exploiting this issue, an attacker could potentially:\nLeak sensitive information from the process memory.\nCause a denial-of-service by crashing the application.\nFurther exploit the application depending on the context of the memory exposure.\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Use of Externally-Controlled Format String"
  ],
  "screenshots": {},
  "disclosed_date": 1730894400,
  "report_url": "https://hackerone.com/reports/2819666",
  "is_multi_component": false,
  "complexity": "LOW",
  "novelty": "LOW",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Prepare the Test Code: Create a new file named test_printf.c with the specified content"
    ],
    [
      2,
      "Compile the Code: Compile the test program with the given command"
    ],
    [
      3,
      "Execute the Code: Run the compiled program"
    ],
    [
      4,
      "Observe the Output: The output displays memory content, confirming the vulnerability"
    ]
  ],
  "vuln_description": "The curl_mfprintf function in the curl_printf.h file contains a format string vulnerability that allows an attacker to inject arbitrary format specifiers. This can lead to unauthorized access to memory content, potential application crashes, or leakage of sensitive data.",
  "reason": "The vulnerability is straightforward to discover as it involves a well-known format string vulnerability pattern. The attack does not require multiple components, complex application states, or novel logic. The interaction is obvious and commonly found in other applications.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "injection_metadata": {
    "is_simple_payload": true
  },
  "authnz_metadata": {
    "reason": "The vulnerability involves a format string issue within the curl_mfprintf function, which is not related to authentication or authorization (AuthN/AuthZ) boundaries. The proposed methodologies focus on testing AuthN/AuthZ boundaries by swapping user sessions or resource IDs, which does not apply to format string vulnerabilities.",
    "is_detectable": false
  }
}