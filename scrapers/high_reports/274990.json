{
  "reported_to": "RubyGems",
  "reported_by": "max ",
  "title": "Remote code execution on rubygems.org",
  "content": "\nWhen parsing a gem POSTed to the /api/v1/gems endpoint, the rubygems.org application immediately calls Gem::Package.new(body).spec inside app/models/pusher.rb. The authors of the application correctly observed that parsing untrusted YAML is dangerous (since it can serialize more or less arbitrary objects), so they monkey-patched the spec parser to use Psych.safe_load set from config/initializers/forbidden_yaml.rb.\nHowever, YAML.load is called directly when parsing the gem's checksum file in Gem::Package#read_checksums. Using classes accessible within the application, I was able to turn this into a call to Marshal.load on attacker-controlled data. From there, I was able to use known Marshal exploitation techniques to achieve code execution on the server (I'm omitting some details here for brevity so that I can submit this report right away).\nA proof of concept, poc.gem, is attached. Run the exploit with the following command:\ncat poc.gem | curl -H 'Content-Type: application/gzip' --data-binary @- -H 'Authorization: \u2588\u2588\u2588\u2588\u2588' https://rubygems.org/api/v1/gems\nI ran the attached PoC twice. It just does a wget to my server.\nPlease let me know if I should clarify anything! Thanks for running this program.\n\n",
  "severity": [
    9.0,
    10.0
  ],
  "bounty": 1500,
  "weaknesses": [
    "Deserialization of Untrusted Data"
  ],
  "screenshots": {},
  "disclosed_date": 1510224960,
  "report_url": "https://hackerone.com/reports/274990",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "HIGH",
  "vuln_category": "API",
  "steps": [
    [
      1,
      "Create a malicious gem file (poc.gem) that contains a crafted YAML payload designed to exploit the direct YAML.load call in Gem::Package#read_checksums."
    ],
    [
      2,
      "Upload the malicious gem to rubygems.org using the provided curl command: `cat poc.gem | curl -H 'Content-Type: application/gzip' --data-binary @- -H 'Authorization: \u2588\u2588\u2588\u2588\u2588' https://rubygems.org/api/v1/gems`"
    ]
  ],
  "vuln_description": "The vulnerability is a remote code execution flaw in rubygems.org. While the application attempts to safely parse YAML in gem specifications using Psych.safe_load, it directly calls YAML.load when parsing the gem's checksum file. This allows an attacker to craft a malicious gem that, when processed, leads to arbitrary code execution on the server via Marshal.load exploitation techniques.",
  "reason": "This vulnerability requires understanding multiple components: the gem file structure, YAML parsing behavior differences (safe_load vs load), and Marshal exploitation techniques. The attacker must also recognize the subtle interaction between the gem's checksum parsing and the YAML.load call, which bypasses the intended safe_load protection. Additionally, the exploitation involves manipulating complex application states through crafted YAML/Marshal data.",
  "new_complexity": "HIGH",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}