{
  "reported_to": "Shopify",
  "reported_by": "dr_dragon ",
  "title": "Reflected XSS on $Any$.myshopify.com/admin",
  "content": "\nDescription :\nHi,\nI have found a reflected cross site scripting vulnerability in <any>.myshopify.com/admin through return_url parameter .\nStep to reproduce :\n1-Go to https://<Any>.myshopify.com/admin/authenticate?return_url=javascript:alert(100)//\n2-Click on reload this page\n3-Xss alert message\nImpact\nXss attack in <Any>.myshopify.com/admin\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": 1500,
  "weaknesses": [
    "Cross-site Scripting (XSS) - Reflected"
  ],
  "screenshots": {},
  "disclosed_date": 1542122160,
  "report_url": "https://hackerone.com/reports/422707",
  "is_multi_component": false,
  "complexity": "LOW",
  "novelty": "LOW",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Go to https://<Any>.myshopify.com/admin/authenticate?return_url=javascript:alert(100)//"
    ],
    [
      2,
      "Click on 'reload this page' to trigger the XSS alert"
    ]
  ],
  "vuln_description": "A reflected cross-site scripting (XSS) vulnerability exists in the 'return_url' parameter of <any>.myshopify.com/admin. By injecting a malicious JavaScript payload via the 'return_url' parameter, an attacker can execute arbitrary JavaScript code in the context of the admin interface when the victim reloads the page.",
  "reason": "The vulnerability is straightforward to discover as it involves a simple reflected XSS via a URL parameter, which is a common and well-documented vulnerability pattern. The attack does not require multiple components, complex state manipulation, or novel logic.",
  "new_complexity": "LOW",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "authnz_metadata": {
    "reason": "The vulnerability involves a reflected XSS through the return_url parameter in a specific URL pattern. The proposed methodologies focus on authentication and authorization bypasses (AuthN/AuthZ) and IDOR vulnerabilities by manipulating user sessions, actions, and resource IDs. Since XSS is a client-side vulnerability that does not directly involve AuthN/AuthZ bypass or IDOR, it would not be detected by the described methodologies.",
    "is_detectable": false
  }
}