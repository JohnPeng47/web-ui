{
  "reported_to": "shopify-scripts",
  "reported_by": "avisaven ",
  "title": "Heap Overflow in fiber_switch triggered from Fiber.transfer",
  "content": "\nIt appears as if my recommendations were ignored in the GitHub issue, so I've repeated the issue here.\nPoC\nFiber.new{}.transfer(\n0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0,0,0,0,0,0,\n0,0,0,0,0)\nExplanation\nThe cause of this is that in mrbgems/mruby-fiber/src/fiber.c the stack Fiber stack is initialized lines 90-96 to a default of 64 (FIBER_STACK_INIT_SIZE), however in fiber_switch lines 191-198, if the Fiber's status is currently MRB_FIBER_CREATED, then it will copy the arguments provided from fiber_transfer irregardless of whether or not there are more arguments than 64 (the PoC doesn't need ~127 arguments, anything 64 or above will work!). The quick fix would be to make sure that theres not more than 64 arguments passed to fiber_transfer.\nSolution\ndiff --git a/mrbgems/mruby-fiber/src/fiber.c b/mrbgems/mruby-fiber/src/fiber.c\nindex bd1d09d4..2d0fc39a 100644\n--- a/mrbgems/mruby-fiber/src/fiber.c\n+++ b/mrbgems/mruby-fiber/src/fiber.c\n@@ -188,6 +188,9 @@ fiber_switch(mrb_state mrb, mrb_value self, mrb_int len, const mrb_value a, mr\nmrb->c->status = resume ? MRB_FIBER_RESUMED : MRB_FIBER_TRANSFERRED;\nc->prev = resume ? mrb->c : (c->prev ? c->prev : mrb->root_c);\nif (c->status == MRB_FIBER_CREATED) {\nif (len >= FIBER_STACK_INIT_SIZE) {\nmrb_raise(mrb, E_FIBER_ERROR, \"too many arguments to fiber\");\n} mrb_value b = c->stack+1; mrb_value e = b + len;\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Heap Overflow"
  ],
  "screenshots": {},
  "disclosed_date": 1496169420,
  "report_url": "https://hackerone.com/reports/227762",
  "is_multi_component": false,
  "complexity": "LOW",
  "novelty": "LOW",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Create a new Fiber with Fiber.new{}"
    ],
    [
      2,
      "Call transfer on the Fiber with more than 64 arguments (e.g., 65 zeros)"
    ]
  ],
  "vuln_description": "The vulnerability is a heap overflow in the fiber_switch function triggered from Fiber.transfer. The issue occurs because the Fiber stack is initialized to a default size of 64 (FIBER_STACK_INIT_SIZE), but when the Fiber's status is MRB_FIBER_CREATED, it copies all arguments provided to fiber_transfer without checking if the number of arguments exceeds the stack size. This leads to a heap overflow when more than 64 arguments are passed.",
  "reason": "The vulnerability is straightforward to discover as it only requires passing more arguments than the stack size to a Fiber.transfer call. There are no complex interactions or states involved, and the issue is a classic buffer overflow scenario.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}