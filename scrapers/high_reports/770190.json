{
  "reported_to": "curl",
  "reported_by": "nyymi ",
  "title": "Unexpected access to process open files via file:///proc/self/fd/n",
  "content": "\nSummary:\nfile_connect() routine (https://github.com/curl/curl/blob/1b71bc532bde8621fd3260843f8197182a467ff2/lib/file.c#L134) does not prevent access to /proc/self/fd pseudo filesystem. Application using libcurl and accepting URLs to fetch can be tricked to return content of any open file by passing a specially crafted file:///proc/self/fd/<number> URLs. Since the specific files are open by the application itself, they will always be accessible as long as the files remain open. This will bypass for example drop of privileges performed after opening the file(s).\nSteps To Reproduce:\n[add details for how we can reproduce the issue]\nOpen a privileged file (for example /etc/shadow)\nDrop the process privileges\nAccept URL as user input\nFetch URL with libcurl\nSend received data to user\nSupporting Material/References:\nImpact\nAuthorization bypass: Access to privileged files otherwise not accessible via file://\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Information Disclosure"
  ],
  "screenshots": {},
  "disclosed_date": 1612788780,
  "report_url": "https://hackerone.com/reports/770190",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "HIGH",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Open a privileged file (e.g., /etc/shadow) in the application."
    ],
    [
      2,
      "Drop the process privileges after opening the file."
    ],
    [
      3,
      "Accept a user-provided URL input."
    ],
    [
      4,
      "Fetch the URL using libcurl (e.g., file:///proc/self/fd/<number>)."
    ],
    [
      5,
      "Send the received data (contents of the privileged file) back to the user."
    ]
  ],
  "vuln_description": "The vulnerability allows unauthorized access to privileged files via libcurl's file:// protocol handler, which does not properly restrict access to /proc/self/fd pseudo filesystem. This bypasses privilege drops and exposes sensitive file contents.",
  "reason": "The attack involves understanding the interaction between file descriptors, privilege dropping, and libcurl's file handling. While the components are straightforward, the interaction between them is subtle and requires knowledge of how /proc/self/fd works.",
  "new_complexity": "MEDIUM",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}