{
  "reported_to": "GitLab",
  "reported_by": "legit-security ",
  "title": "DOS via issue preview",
  "content": "\nSummary\nPreviewing an issue with a specially-crafted description results in high CPU usage for 60 seconds (request timeout).\nMultiple requests can be issued in parallel to create a larger impact.\nSteps to reproduce\nGiven an authorized user (on GitLab.com - anyone can self-register. On EE - depends on instance configuration).\nCreate an issue with the following description (provided a one-line python script to avoid bloating):\nHit the preview button.\nSteps 2&3 can be accomplished via the preview_markdown API endpoint.\nThe script:\npython -c \"print('![l' * int(1048576 / 3 - 1) + '\\n')\"\nNote: this is essentially the maximal description size, but a smaller number of repetitions works too.\nImpact\nAfter 60 seconds (timeout) - the request fails.\nMeanwhile, on the server end, (a single) CPU is burnt out (verified against a local EE instance).\nIssuing multiple requests in parallel results in multiple CPUs burn out.\nUsing the DockerHub image, the entire server is completely unavailable by repeatedly sending a small number of requests repeatedly.\nExamples\nThe bug is instance-independent, works on latest versions. Since GitLab.com is open-core - it would work on GitLab too.\nWhat is the current bug behavior?\nThe HTTP request fails for timeout while the server is burning CPU.\nOn the code side:\ntexts_and_contexts is being initialized here:\nCode 101 Bytes\n1def analyze(text, context = {})\n2      @texts_and_contexts << { text: text, context: context }\n3    end\nIt is then used at banzai/reference_extractor.rb:\nCode 118 Bytes\n1def html_documents\n2      ...\n3      @html_documents ||= Renderer.cache_collection_render(@texts_and_contexts)\n4      ...\nThe CPU utilization is found in the execution of cache_collection_render.\nWhat is the expected correct behavior?\nFix the implementation of cache_collection_render.\nRelevant logs and/or screenshots\nOutput of checks\nResults of GitLab environment info\nImpact\nA complete denial of service of a GitLab EE instance.\nAs this vulnerability impacts GitLab.com, we assume that this vulnerability opens the door for a DDOS attack.\n\n",
  "severity": [
    7.5,
    null
  ],
  "bounty": 7640,
  "weaknesses": [
    "Uncontrolled Resource Consumption"
  ],
  "screenshots": {},
  "disclosed_date": 1667548020,
  "report_url": "https://hackerone.com/reports/1543718",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "HIGH",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Create an issue with a specially-crafted description using the provided Python script."
    ],
    [
      2,
      "Hit the preview button or use the preview_markdown API endpoint to trigger the CPU usage."
    ]
  ],
  "vuln_description": "Previewing an issue with a specially-crafted description results in high CPU usage for 60 seconds (request timeout). Multiple requests can be issued in parallel to create a larger impact, leading to a denial of service.",
  "reason": "The vulnerability involves a straightforward exploitation of a markdown preview feature with a crafted input. The attack does not require complex interactions or understanding of multiple components, making it relatively easy to discover.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}