{
  "reported_to": "GitLab",
  "reported_by": "yvvdwf ",
  "title": "Stored-XSS in merge requests",
  "content": "\nHi team,\nA stored XSS is existing in the merge requests pages.\nSteps to reproduce\nIn any existing project or create a new project with checking option \"Initialize repository with a README\"\nCreate a new branch with name '><iframe/srcdoc='<script/src=/yvvdwf/data/-/jobs/552156057/artifacts/raw/alert.js></script>'></iframe>, e.g., git push origin master:\"'><iframe/srcdoc='<script/src=/yvvdwf/data/-/jobs/552156057/artifacts/raw/alert.js></script>'></iframe>\"\nCreate a new merge request from the new branch to master\nWhen open the merge request being created, you should see an alert\nImpact\nThis stored-XSS allows attacker to execute arbitrary actions on behalf of victim notably via gitlab API. It occurs automatically without any need of victim's interaction despite gitlab CSP.\nExamples\n(the alert occurs although existing of CSP of gitlab)\nhttps://gitlab.com/yvvdwf/store-xss-merge-request/-/merge_requests/1\nWhat is the current bug behavior?\nIn _sidebar.html.haml, the source_branch is not sanitized when using as title attribute\nCode 243 Bytes\n1%span\n2    = _('Source branch: %{source_branch_open}%{source_branch}%{source_branch_close}').html_safe % { source_branch_open: \"<cite title='#{source_branch}'>\".html_safe, source_branch_close: \"</cite>\".html_safe, source_branch: source_branch }\nWhat is the expected correct behavior?\nsourche_banch should be sanitized\nOutput of checks\nThis bug happens on GitLab.com\nImpact\nThis stored-XSS allows attacker to execute arbitrary actions on behalf of victim notably via gitlab API. It occurs automatically without any need of victim's interaction despite gitlab CSP.\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Cross-site Scripting (XSS) - Stored"
  ],
  "screenshots": {},
  "disclosed_date": 1626179880,
  "report_url": "https://hackerone.com/reports/977697",
  "is_multi_component": false,
  "complexity": "LOW",
  "novelty": "LOW",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Create a new project with the option 'Initialize repository with a README' or use an existing project."
    ],
    [
      2,
      "Create a new branch with a name containing an XSS payload, e.g., '><iframe/srcdoc='<script/src=/yvvdwf/data/-/jobs/552156057/artifacts/raw/alert.js></script>'></iframe>'."
    ],
    [
      3,
      "Create a new merge request from the new branch to master."
    ],
    [
      4,
      "Open the merge request to trigger the XSS payload."
    ]
  ],
  "vuln_description": "A stored XSS vulnerability exists in the merge requests pages where the source_branch parameter is not sanitized when used as a title attribute, allowing an attacker to execute arbitrary JavaScript code in the context of the victim's session.",
  "reason": "The vulnerability involves a straightforward injection of an XSS payload into a branch name, which is then reflected in the merge request page without proper sanitization. The attack does not require complex interactions or deep understanding of the application's state.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "injection_metadata": {
    "is_simple_payload": false
  },
  "authnz_metadata": {
    "reason": "The vulnerability involves a stored XSS in the merge request pages where the source_branch is not sanitized when used as a title attribute. This is a client-side vulnerability that does not directly involve authentication or authorization bypass. The methodology described focuses on testing AuthN/AuthZ boundaries by swapping user sessions and resource IDs, which is not applicable here as the issue is about input sanitization and XSS.",
    "is_detectable": false
  }
}