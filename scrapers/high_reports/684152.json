{
  "reported_to": "BlockDev Sp. Z o.o",
  "reported_by": "lucash-dev ",
  "title": "Steal all MKR from `flap` during liquidation by exploiting lack of validation in `flap.kick`",
  "content": "\nSummary:\nThe flap contract provides the ability to auction DAI for MKR. That's a fundamental functionality of the MCD system, invoked usually from the vow contract.\nA flaw in the validation of calls to flap.kick, however, allows a malicious user to create \"fake' auctions that can be later used to steal MKR from flap during the liquidation (end) phase.\nDetailed description\nThe method flap.kick, used to start an auction of DAI (for MKR) in the flap contract, lacks any validation of the bid parameter. Since the method is public, a malicious user can directly invoke it, passing an arbitrary bid parameter -- affecting other contracts that assume this value represents the highest bid in the auction.\nWhile it's possible that this issue will cause other problems, in this report I'll focus on what seems to be the highest severity attack enabled by it.\nThe attack consists of two parts:\n1 - During the normal operation of the MCD system (contracts not \"caged\"), the attacker will create one or more \"fake\" auctions by calling flap.kick. The bid parameter can be arbitrarily large, and won't be validated in any way. On the other hand, the lot parameter can be arbitrarily small, as long as it's not zero, which means the auction can be placed with almost zero cost.\n2 - After governance calls end.cage, the auctions are stopped -- but any MKR deposited in the flap contract for any outstanding auction will still be there until someone calls yank for each one.\nAt this point, the attacker can call flap.yank for his own \"fake\" auctions, and that will result in him getting MKR transferred from the flap contract to himself -- in whatever amount was specified as bid in step 1.\nSince the attacker might no know beforehand, it would be wise for them to create multiple \"fake\" auctions. In particular, an exponential series of auctions, with bid values 1, 2, 4, 8, 16... will allow the attacker to extract any exact amount of MKR from the flap contract.\nSteps To Reproduce:\nI've attached to this report a modified version of end.t.sol which contains a test (the last one, test_steal_mkr_from_flapper) that reproduces this attack.\nPlease don't hesitate to contact me if you have any trouble understanding or reproducing this issue.\nImpact\nThis issue allows an attacker to steal arbitrary amounts of MKR deposited for auction.\nThat impact is particularly troubling, as MKR tokens are used to govern the platform, and anyone maliciously obtaining large quantities of these tokens might use them to further affect other core functionalities, potentially leading to stealing collateral, DAI etc. Also, because the same MKR token might be used for governance of future versions of the contracts, the damage might be much more enduring and harder to mitigate.\nGiven the above, and the minimal cost for perpetrating the attack, this issue would normally be classified as Critical. The specific policies for this program, though, won't allow for that, since this attack doesn't steal collateral directly. So, I classified the severity as High.\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Improper Input Validation"
  ],
  "screenshots": {},
  "disclosed_date": 1569526440,
  "report_url": "https://hackerone.com/reports/684152",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "MEDIUM",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Create one or more 'fake' auctions by calling flap.kick with an arbitrarily large bid parameter and a very small lot parameter."
    ],
    [
      2,
      "After governance calls end.cage, call flap.yank for the fake auctions to transfer MKR from the flap contract to the attacker's address."
    ]
  ],
  "vuln_description": "The flap contract's kick method lacks validation of the bid parameter, allowing an attacker to create fake auctions with high bid values and small lot values. After the system is caged, the attacker can yank these auctions to steal MKR from the contract.",
  "reason": "The attack requires understanding of the flap contract's auction mechanism, the lack of validation in the kick method, and the timing of the end.cage call. It also involves manipulating the contract's state to create fake auctions and then exploiting the yank function to steal funds.",
  "new_complexity": "HIGH",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}