{
  "reported_to": "Monero",
  "reported_by": "cutcoin ",
  "title": "Zero-amount miner TX + RingCT allows monero wallet to receive arbitrary amount of monero",
  "content": "\nNOTE! Thanks for submitting a report! Please replace all the [square] sections below with the pertinent details. Remember, the more detail you provide, the easier it is for us to verify and then potentially issue a bounty, so be sure to take your time filling out the report!\nSummary:\nBy mining a specially crafted block, that still passes daemon verification an attacker can create a miner transaction that appears to the wallet to include sum of XMR picked by the attacker. It is our belief that this can be exploited to steal money from exchanges.\nDescription:\nI'm the lead developer of CUT coin (https://github.com/cutcoin/cutcoin), a coin based on Monero codebase. Our aim is to build a cryptonote coin with proof of stake consensus. In order to achieve this we needed to deeply analize both block verification in daemon and get familiar with wallet code. This lead us to discovering a vulnerability in (mainly) the wallet, that allows an attacker to convince any cli wallet that it received transaction with amount chosen by the attacker, that is virtually any. It is our believe that this can be used to send such counterfeit XMR to an exchange, that will credit the attacker with the sait amount of XMR inside the exchange, which can be exchanged for other coins and withdrawn. However this was of course not attempted. It is our belief that the vulnerability can not be used to \"mint\" real, transactable monero out of thin air, at least without knowledge of private key of rct::H.\nThe vulnerability is not very hard to describe. According to current verification rules in the daemon, it is perfectly fine to have a zero amount in the miner transaction (besides the real, non-zero amount). It is also perfectly fine to have RCT signatures and they of course will not be checked. On the other hand, there is code in the wallet that basically says \"if the amount is zero, decode the amount from RCT\".\nSo to exploit the vulnerability an attacker will need to modify the daemon to create blocktemplates with zero amount in the miner tx, with a valid-enough RCT signatures so the amount will decode. The attacker will need to mine a block directly to an exchange wallet. Most exchanges identify their users by payment id. Including the said field in miner tx is not available functionality. While this seems to be trivial to implement, it was not attempted by us.\nObviously this issue can be resolved in both the daemon and the wallet.\nWe have verified that the vulnerability is exploitable against github master as of today, February 25th.\nWe have proof of concept code, that can be provided if needed.\nWe leave decision about disclosure and timeline of this issue entirely to you. We do not intend to disclose it at all, however we will appreciate credit when disclosed.\nA fix for this vulnerability was today published to our github as a part of a single huge commit and is unlikely to be noticed by anyone.\nReleases Affected:\ncurrent git master\nImpact\nTricking an exchange that she has deposited a huge sum of XMR and therefore effectively stealing from the said exchange.\n\n",
  "severity": [
    9.0,
    10.0
  ],
  "bounty": 45,
  "weaknesses": [
    "Resource Injection"
  ],
  "screenshots": {},
  "disclosed_date": 1562127120,
  "report_url": "https://hackerone.com/reports/501585",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "MEDIUM",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Modify the daemon to create block templates with zero amount in the miner transaction and valid-enough RCT signatures."
    ],
    [
      2,
      "Mine a block directly to an exchange wallet, bypassing payment ID restrictions by modifying the daemon if necessary."
    ]
  ],
  "vuln_description": "The vulnerability allows an attacker to create a specially crafted block with a zero-amount miner transaction that includes RingCT signatures. The wallet incorrectly interprets these signatures as a valid transaction with an arbitrary amount chosen by the attacker. This can be exploited to trick exchanges into crediting the attacker's account with counterfeit XMR.",
  "reason": "This vulnerability involves deep understanding of both the Monero daemon's block verification rules and the wallet's transaction processing logic. The attacker must manipulate the daemon to produce invalid blocks that still pass verification, and exploit a subtle interaction between zero-amount transactions and RingCT signature handling in the wallet.",
  "new_complexity": "VERY_HIGH",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "injection_metadata": {
    "is_simple_payload": false
  },
  "authnz_metadata": {
    "reason": "The vulnerability involves manipulating the miner transaction in a way that tricks the wallet into displaying an arbitrary amount of XMR, which is not directly related to authentication or authorization bypass within the same application. The methodology described focuses on cross-user or cross-resource authorization checks within a single application context, not on blockchain transaction validation or wallet display issues.",
    "is_detectable": false
  }
}