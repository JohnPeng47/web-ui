{
  "reported_to": "BlockDev Sp. Z o.o",
  "reported_by": "lucash-dev ",
  "title": "Steal ALL collateral during liquidation by exploiting lack of validation in `flip.kick`",
  "content": "\nSummary:\nThe flip contract allows for the MCD system to auction collateral in exchange for DAI.\nA lack of validation in the method flip.kick allows an attacker to create an auction with a fake\nbid value. Since the end contract trusts that value, it can be exploited to issue any amount of free\nDAI during liquidation. That DAI can then be immediately used to obtain all collateral stored in the\nend contract.\nDetailed Description:\nThe flipper contract (flip.sol) is intended to offer a way for the MCD contracts to obtain DAI by auctioning gems. An auction is initiated by calling the flip.kick method, which is normally done by the cat contract when it grabs collateral from a CDP.\nThe implementation of that method, however, completely lacks access control and has very little validation -- in particular, it's possible to execute the method even during the liquidation phase.\nOn top of that, all values stored in the auction are accepted as parameters of the method, including the bid amount. By directly calling the method, a malicious user can create a \"fake\" auction, with an arbitrary initial bid value, without spending the corresponding DAI.\nThough that technique could be used to cause other damage, I will focus this report on the maximum-impact effect by exploiting it during the liquidation phase, in an attack vector that leads to transferring all collateral to the attacker.\nFirst, the system must be in the liquidation phase, after end.flow is called to fix the exchange rate for redeeming collateral. Then the attacker performs three actions as follows:\nCreate a \"fake\" auction, by calling flip.kick. The bid parameter of the method can be set to any arbitrarily large value, in special a value at least equal to the total supply of DAI. The lot parameter, on the other hand, can be arbitrarily small, as long as it's not zero.\nThe attacker calls end.skip. The end contract will try to return the bid amount to the attacker. This will result in the issuance -- for free -- of DAI to the attacker, in any amount entered during step 1.\nThe attacker calls end.pack and end.cash thus converting the DAI into collateral. If the amount entered in step 1 is the total supply of DAI, the attacker will obtain ALL collateral stored in the end contract.\nSteps To Reproduce:\nI've attached to this report a modified version of end.t.sol which contains a test (test_steal_all_collateral_using_flipper) that reproduces the attack.\nPlease don't hesitate to contact me if you need help understanding the test or reproducing the issue.\nImpact\nThe issue described in this report allows an attacker to steal ALL collateral stored in the MCD system during the liquidation phase -- possibly within a single transaction. This would result in a complete loss of funds for all users.\nThe cost of performing the attack is almost zero -- just the minimal denomination of each type of gem stolen plus gas.\nGiven the above I understand the issue has Critical severity, and fully qualifies for the corresponding bounty.\n\n",
  "severity": [
    9.0,
    10.0
  ],
  "bounty": 50000,
  "weaknesses": [
    "Improper Input Validation"
  ],
  "screenshots": {},
  "disclosed_date": 1569963060,
  "report_url": "https://hackerone.com/reports/684092",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "HIGH",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Call flip.kick with an arbitrarily large bid value and a small lot value to create a fake auction."
    ],
    [
      2,
      "Call end.skip to receive the bid amount as free DAI."
    ],
    [
      3,
      "Call end.pack and end.cash to convert the DAI into collateral, potentially stealing all collateral in the end contract."
    ]
  ],
  "vuln_description": "The vulnerability allows an attacker to exploit the lack of validation in the flip.kick method to create a fake auction with an arbitrarily large bid value. During the liquidation phase, this can be used to issue free DAI, which can then be converted into all collateral stored in the end contract, resulting in a complete loss of funds for all users.",
  "reason": "The attack involves multiple components (flip.kick, end.skip, end.pack, end.cash) and requires manipulating complex application states during the liquidation phase. The interaction between these components is subtle and non-obvious, as it relies on the lack of validation in flip.kick and the trust placed in the bid value by the end contract.",
  "new_complexity": "VERY_HIGH",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}