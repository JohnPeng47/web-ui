{
    "reported_to": "Gratipay",
    "reported_by": "promx ",
    "title": "CSRF csrftoken in cookies",
    "content": "\nHi,\nYour web application generates CSRF token values inside cookies\nwhich is not a best practice for web applications as revelation of cookies can reveal CSRF Tokens as well.\nAuthenticity tokens should be kept separate from cookies and should be isolated to change operations in the account only.\nMore description:\nThis report tells that the CSRF tokens are present inside of the cookies value which is not a best practice and if the cookie is intercepted and compromised than the CSRF token will also be vulnerable.\nThis is the Captured request of edit Statement HTTP ,In this request you can see CSRF token is generating in cookies named as csrftoken\nHTTP/1.1 200 OK\nConnection: close\nServer: gunicorn\nDate: Wed, 05 Oct 2016 23:09:42 GMT\nCache-Control: no-cache\nX-Gratipay-Version: 1986\nX-Content-Type-Options: nosniff\nX-Frame-Options: SAMEORIGIN\nContent-Type: text/html; charset=UTF-8\nSet-Cookie: csrf_token=zxRkWnGq3I5bMcXDRUWuWWXjxdsO1JtZ; expires=Wed, 12 Oct 2016 23:09:42 GMT; Path=/; secure\nX-Xss-Protection: 1; mode=block\nVia: 1.1 vegur\nContent-Length: 400168\nRegards,\nPromx\n\n",
    "severity": [
        7.0,
        8.9
    ],
    "bounty": null,
    "weaknesses": [
        "Cross-Site Request Forgery (CSRF)"
    ],
    "screenshots": {},
    "disclosed_date": 1481163480,
    "report_url": "https://hackerone.com/reports/174228",
    "is_multi_component": false,
    "complexity": "LOW",
    "novelty": "LOW",
    "vuln_category": "WEB_APP",
    "steps": [
        [
            1,
            "Inspect the HTTP headers of a request/response from the web application."
        ],
        [
            2,
            "Check for the presence of a CSRF token in the cookies (e.g., 'csrftoken')."
        ]
    ],
    "vuln_description": "The web application generates CSRF tokens inside cookies, which is not a best practice. If cookies are intercepted, the CSRF token can be compromised, making the application vulnerable to CSRF attacks.",
    "reason": "The vulnerability is straightforward to discover as it only involves inspecting HTTP headers and cookies, which are easily accessible through browser developer tools or proxy tools like Burp Suite.",
    "new_complexity": "LOW",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}