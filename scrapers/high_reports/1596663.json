{
    "reported_to": "Reddit",
    "reported_by": "41bin ",
    "title": "Admin can create a hidden admin account  which even the owner can not detect and remove and do administrative actions on the application.",
    "content": "\nads.reddit.com is an ads creating and managing application for reddit. The application has the feature to invite other members to the organization and give different roles at ad management.\nTesting around the role management functionalities, I have noticed that a user with the same email can get invited to the same organization multiple times if the user is assigned with different roles.\nSo, taking advantage of this behavior I found the admin as an attacker can create an undetectable/hidden admin account and do administrative actions on the organization like remove other users and invite other users. Since this malicious account information can not be seen in the members section, even the owner of the organization can not detect and remove this malicious user from the organization.\nSteps to reproduce:\n1) Login as admin from https://ads.reddit.com/\nCode 249 Bytes\n1I know creating an owner account and then creating an admin account with in a limited time is  little-bit painful.\n2You can use the following credentials to login as admin\n3\n4        email :\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n5        name: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\n6        password : \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n2) Go to https://ads.reddit.com/account/\u2588\u2588\u2588/permissions and invite a user (malicious hidden user) by giving the role as admin\n3) login to that account (malicious hidden user) from a different browser and accept the invite.\n4) Same as the second step, go to the admin account and invite the same malicious user by giving the role as Analyst.\n5) Now go to the malicious user account and then go to https://ads.reddit.com/accounts.\n6) You will see the new invitation arrived with the Analyst role. Accept the invitation.\n7) From this account (malicious) go to https://ads.reddit.com/account/\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/billing while intercepting the requests using burpsuite.\n8) Look at the burp history and find out the Authorization token used by the account and copy it. (see copy-the-auth-token.png)\n9) Now go to the normal admin account and change the permission of this malicious account to None (It removes malicious account from the organization) and refresh the page to confirm that the malicious user is removed.\n10) Using burpsuite repeater, change the email and send the following request by replacing the token which you copied from the 8'th step.\nCode 660 Bytes\n1POST /api/v2.0/accounts/\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/invitations HTTP/2\n2Host: ads-api.reddit.com\n3Content-Length: 87\n4Sec-Ch-Ua: \" Not A;Brand\";v=\"99\", \"Chromium\";v=\"102\"\n5Accept: application/json\n6Content-Type: application/json\n7Authorization: \u2588\u2588\u2588\u2588\u2588\u2588\n8Sec-Ch-Ua-Mobile: ?0\n9User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.5005.61 Safari/537.36\n10Sec-Ch-Ua-Platform: \"Linux\"\n11Origin: https://ads.reddit.com\n12Sec-Fetch-Site: same-site\n13Sec-Fetch-Mode: cors\n14Sec-Fetch-Dest: empty\n15Referer: https://ads.reddit.com/\n16Accept-Encoding: gzip, deflate\n17Accept-Language: en-GB,en-US;q=0.9,en;q=0.8\n18\n19{\"data\":{\"recipient_email\":\"\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\",\"type\":\"ADMIN\"}}\n20\n11) Now you are able to invite other users to the organization even though you are not a member of that organization.\nImpact\nLet me explain the impact with different scenarios as an example.\n1)\nThe owner invites an admin to the organization and the admin who knows about this issue creates an account in this way.\nLatter, the owner decide to change the role of this admin to analyst or remove this admin from the organization due to some reasons\nNow the admin as the malicious user, can do sensitive actions in the organization like inviting or removing other users.\nWhen the owner goes to the members section, he will not find the malicious account there and even he can not remove that malicious account from the organization.\n2)\nIt also happens when the owner or admin invites other users accidentally in this way.\nIt is not complicated, the vulnerability arises when a user accepts multiple invitations assigned with different roles from a single organization.\n\n",
    "severity": [
        7.0,
        8.9
    ],
    "bounty": 50,
    "weaknesses": [
        "Improper Access Control - Generic"
    ],
    "screenshots": {},
    "disclosed_date": 1668418440,
    "report_url": "https://hackerone.com/reports/1596663",
    "is_multi_component": true,
    "complexity": "HIGH",
    "novelty": "MEDIUM",
    "vuln_category": "WEB_APP",
    "steps": [
        [
            1,
            "Login as admin from https://ads.reddit.com/"
        ],
        [
            2,
            "Go to permissions page and invite a user with admin role"
        ],
        [
            3,
            "Login to the invited account and accept the invite"
        ],
        [
            4,
            "From the admin account, invite the same user again but with Analyst role"
        ],
        [
            5,
            "From the malicious user account, accept the new invitation"
        ],
        [
            6,
            "Use Burp Suite to capture the Authorization token from the malicious account"
        ],
        [
            7,
            "From the admin account, change the malicious user's role to None to remove them"
        ],
        [
            8,
            "Use the captured token to send a request to invite another user as an admin"
        ],
        [
            9,
            "Verify the malicious account can perform admin actions despite being 'removed'"
        ]
    ],
    "vuln_description": "An admin can create a hidden admin account by exploiting the ability to invite the same user with different roles. This hidden account remains undetectable and can perform administrative actions even after being 'removed' from the organization.",
    "reason": "The vulnerability involves multiple steps including role manipulation, session token capture, and exploiting invitation logic. The interaction between these components is subtle and requires understanding of the application's state management.",
    "new_complexity": "HIGH",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null,
    "idor_detectable": true,
    "authnz_byppass_detectable": true,
    "is_simple_payload": false,
    "injection_metadata": {
        "is_simple_payload": false
    },
    "authnz_metadata": {
        "idor_detectable": true,
        "authnz_byppass_detectable": true
    }
}