{
  "reported_to": "GitLab",
  "reported_by": "saltyyolk ",
  "title": "Private objects exposed through project import",
  "content": "\nSummary\nThis is a bypass of https://hackerone.com/reports/743953 , the current fix is blocking all \"_ids\" attributes. However an attacker could still set attributes like issue_ids by indrectly settings the field within the attributes field it self:\nCode 134 Bytes\n1# project.json\n2    \"attributes\": {\n3        \"issue_ids\": [ 29279725 ],\n4        \"description\": \"Set from attributes[description]\"\n5    },\nSteps to reproduce\nImport the attached tarball.\nCheck issues tab\nThe other parts of the report are mostly same as those I mentioned in https://hackerone.com/reports/743953 , I decide to write a new report considering the impact to gitlab.com.\nImpact\nWith this ability to modify relations between objects, an attacker could end up with accessing random resources of other users by traversing the incremental ID space.\n\n",
  "severity": [
    9.0,
    10.0
  ],
  "bounty": 20000,
  "weaknesses": [
    "Insecure Direct Object Reference (IDOR)"
  ],
  "screenshots": {},
  "disclosed_date": 1654625760,
  "report_url": "https://hackerone.com/reports/767770",
  "is_multi_component": true,
  "complexity": "MEDIUM",
  "novelty": "MEDIUM",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Create a project.json file with an 'attributes' field containing 'issue_ids' and other fields."
    ],
    [
      2,
      "Import the project.json file into GitLab and check the issues tab to see the unauthorized changes."
    ]
  ],
  "vuln_description": "This vulnerability allows an attacker to modify relations between objects in GitLab by exploiting a bypass in the project import functionality. Despite a previous fix that blocked '_ids' attributes, the attacker can still set fields like 'issue_ids' indirectly through the 'attributes' field, potentially accessing random resources of other users by traversing the incremental ID space.",
  "reason": "The vulnerability involves understanding the previous fix and finding a subtle bypass by manipulating the 'attributes' field. It requires knowledge of how GitLab handles project imports and object relations, but the attack itself is straightforward once the bypass method is identified.",
  "new_complexity": "MEDIUM",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": "743953",
  "idor_detectable": true,
  "authnz_byppass_detectable": false,
  "is_simple_payload": false,
  "injection_metadata": {
    "is_simple_payload": false
  },
  "authnz_metadata": {
    "reasoning": "The vulnerability involves manipulating attributes during project import to set issue_ids indirectly. The methodology focuses on swapping user sessions and resource IDs, but this issue requires crafting specific payloads in the import data, which may not be covered by automated tuple extraction and substitution. The detection methods check for existing resource IDs and sessions but may not generate malicious attribute payloads like 'issue_ids' in the import file.",
    "is_simple_authnz": false
  }
}