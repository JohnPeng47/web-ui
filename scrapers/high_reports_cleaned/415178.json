{
  "reported_to": "Brave Software",
  "reported_by": "qab ",
  "title": "chrome://brave can still be navigated to, leading to RCE",
  "content": "\nSummary:\n'chrome://brave' can be navigated to using the middle mouse click (or normal click with CTRL held) IFF coming from a bookmark. I am also using a small bug to actually trick a user into bookmarking our crafted URL through drag and drop.\nProducts affected:\nBrave: 0.24.0\nV8: 6.9.427.23\nrev: f657f15bf7e0e0c50a2b854c6b05edb59bfc556c\nMuon: 8.1.6\nOS Release: 10.0.17134\nUpdate Channel: Release\nOS Architecture: x64\nOS Platform: Microsoft Windows\nNode.js: 7.9.0\nBrave Sync: v1.4.2\nlibchromiumcontent: 69.0.3497.100\nSteps To Reproduce:\nHost attached PoC in any web\nOnce opened, you will be instructed to save the html file locally and open it this way\nOpen the saved PoC from local disk\nClick anywhere to open a popup\nDrag the anchor tag into the main window bookmark bar (if you never bookmarked anything then just right click and bookmark)\nHold CTRL and click on the new bookmark, or right click and press \"open in new tab\"\nImpact\nNavigating to chrome://brave is a bad thing since it can lead to RCE ( https://hackerone.com/reports/395737 )\nWe can also use another bug I filed ( https://hackerone.com/reports/415167 ) which can detect local files. If there is a way to drop HTML files into the local disk (cache or some other possibility) we can then try to use bug 415167 to bypass having to know OS username and any potentially salted folders. If this is achievable we can skip the part where we need to download and open PoC locally.\nIt would go something like:\nOpen PoC from web\nPoC will somehow drop HTML in local disk (I have heard in other reports of possible local file XSS)\nUsing bug 415167 we try to guess OS username + folder path to dropped HTML file\nUse the bookmark trick as described above.\nInstruct user to open bookmark with either method described above.\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": 300,
  "weaknesses": [
    "Code Injection"
  ],
  "screenshots": {},
  "disclosed_date": 1540336320,
  "report_url": "https://hackerone.com/reports/415178",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "MEDIUM",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Host the provided PoC HTML file on a web server."
    ],
    [
      2,
      "Instruct the user to save the HTML file locally and open it."
    ],
    [
      3,
      "Once opened, the user clicks anywhere to trigger a popup."
    ],
    [
      4,
      "The user drags the anchor tag from the popup to the bookmark bar."
    ],
    [
      5,
      "The user holds CTRL and clicks the bookmark or right-clicks and selects 'Open in new tab'."
    ]
  ],
  "vuln_description": "The vulnerability allows navigation to 'chrome://brave' via a crafted bookmark, which can lead to Remote Code Execution (RCE). The attack involves tricking a user into bookmarking a malicious URL and then exploiting the browser's handling of 'chrome://' URLs.",
  "reason": "The attack involves multiple components including user interaction (bookmarking), browser behavior (handling of 'chrome://' URLs), and potential RCE. The subtle interaction between these components and the need to manipulate the user into performing specific actions increases the complexity.",
  "new_complexity": "HIGH",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": "415167",
  "authnz_metadata": {
    "reason": "The vulnerability involves navigating to 'chrome://brave' via a bookmark, which is a specific browser behavior and not an authentication or authorization issue within a web application. The methodology described focuses on web application authN/authZ bugs by analyzing HTTP requests and responses, and does not cover browser-specific behaviors or RCE vulnerabilities.",
    "is_detectable": false
  }
}