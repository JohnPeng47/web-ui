{
  "reported_to": "DuckDuckGo",
  "reported_by": "monke ",
  "title": "Reflected/Stored XSS on duckduckgo.com",
  "content": "\nHi DuckDuckGo,\nWhile browsing normally (since I use DuckDuckGo on a daily basis), I discovered an interesting stored XSS on the duckduckgo main search engine. A payload that somebody had left on urbandictionary.com had triggered a HTML injection, and a stored XSS as a result.\nSteps to Reproduce\nSearch the following in the searchbar of DuckDuckGo: urban dictionary \"><img src=x<\nA payload left by someone else will render itself and fire in the main DuckDuckGo page.\nIt is also possible to visit the page via the DuckDuckGo URL as such and the XSS will trigger.\nPOC\nThe page itself renders HTML. The payload fires.\n<image_0>\n<image_1>\nImpact\nThere are several impacts here.\nFirstly, the DuckDuckGo URL serves as a payload, because simply visiting the page with the right search parameter triggers the XSS, although the search parameters themselves do not directly trigger it.\nSecondly, the XSS is stored in the search results, so this can be considered to be Stored XSS.\nIt is possible to execute any Javascript via the main DuckDuckGo page.\nIf you have any questions or require clarification, I am happy to help.\nCheers,\nPMOC\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Cross-site Scripting (XSS) - Reflected"
  ],
  "screenshots": {
    "image_0": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/1qczw455eaugs2kje5mq8gukvav2?response-content-disposition=attachment%3B%20filename%3D%22evidence1.png%22%3B%20filename%2A%3DUTF-8%27%27evidence1.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2G4H2MHO%2F20250325%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250325T201857Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjELP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIFFP%2F%2BJsBZQToXr6C9HG45Mews0DJWNjUcisox%2Bgyv5MAiEAwEky6rjp7c317lKaXXB%2F98HYp68x%2FpQ4IOOioGTOVlEqsgUIHBADGgwwMTM2MTkyNzQ4NDkiDMEB%2FBZmm4cqF10CfyqPBSQ2aWFSd85WuWTlJiNxYxSBBy3c%2BBBAJfRo8YnUFi1jlYXSEQK1cXj3gDKCr8h7kh96jSIiXEHC6ezDzilge19e5fxf2XrMadTQwBy%2FRqLRwGGGE6zyZAQyBRKl3feL%2FIB4RHamC4ruIiZZq%2FyadMQPnJzg17VRM1RsbGxwPPakdvJSGhgVdWetLw%2BMuE%2BeJVBVtohCA7%2B53cpbFmw2Kie1cjRND%2FvxxCppsGJq7gLbzKsisx%2F4FCuBiOduact9TvMdnZrdUEk9bPbOfSQ8ib%2BGBx2jbVr4EVzMUC08hhZ6WcgsZMiJ8O9zPOz9jUt5pSQMdj%2FLJYhhPKD5HqGUQQch9YydsO3TB3JKddp9PHYUGc4s75ypukProQ7hmOQ7iYPRt4%2FQUat0%2BvrCSudG1IxA%2B%2B3iVAj8E7CyZBlz6UamcF6JIRUctrcxdXmg%2FRcnJ45JuJOEGUvQiICQKBy5GQLPW9Uvx3st2ay1h1wIjoo0oSK%2BCmAEMs%2BqtglG3kkpnF8D%2FozJ4nz%2BZrEllgd6%2Bj861p%2BPR3DNgN7NM5N6HfFVEwuGT33BMefkFs9FKOLFjA2%2FSnulTWuKz%2BGK7UQEJOJIOBf%2B%2Bu0MiYrAZJC6LJLV02VdAlyE3rHrSIV95LePo759pShgDBdhuJqRi8zMf5ADpBLbEse0iAh8hGuIH%2FRdgq%2FdY5QpB71GIdwv%2Bp%2FICifZX3yihCe7vRFyvZGN2yyI5y9WJRR34QaesSbw%2FTO6uUhzLLiT0RX7TdW0LVtso%2FCDbknsgExR2N22lE9kdDqpHJTqpvycJ8kDpyC306BhpBPcGgWWz9VuW2wvKeIFLCGaOH2frAvJXCWlCClE8OzIUrPuFjXUOttBD7lQlAQw4P%2BLvwY6sQFRQjeQ4zoTJ7t59gQ%2BZMsP7cjY0FZrBwpX5OJ8%2BdsyD0hwsG8Qm7I%2FLKjmf9OELWAhxYnTfofoLBJw0p4AVHxMfO3WroNFjmjK9X%2By6CoOTOAZiaDy6fGoEHRBqI8FRPQTxIkro5ivWeGB9JMJyokXE99meitqaPwgvEvyU9Am1ZYA14lQJJavntnUgBdQR8G5I7hRyu0dJIHSLkHRaH0mEvfuY%2BZ9lvV30ECI6u6X7Jw%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=176bef6efc564efe7420866fddeacbc610d397124c1df72c322b9b7ee31582f3",
    "image_1": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/n68rsholhfbi9mholswrpdy0cri0?response-content-disposition=attachment%3B%20filename%3D%22evidence2.png%22%3B%20filename%2A%3DUTF-8%27%27evidence2.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQ2G4H2MHO%2F20250325%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250325T201857Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjELP%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIFFP%2F%2BJsBZQToXr6C9HG45Mews0DJWNjUcisox%2Bgyv5MAiEAwEky6rjp7c317lKaXXB%2F98HYp68x%2FpQ4IOOioGTOVlEqsgUIHBADGgwwMTM2MTkyNzQ4NDkiDMEB%2FBZmm4cqF10CfyqPBSQ2aWFSd85WuWTlJiNxYxSBBy3c%2BBBAJfRo8YnUFi1jlYXSEQK1cXj3gDKCr8h7kh96jSIiXEHC6ezDzilge19e5fxf2XrMadTQwBy%2FRqLRwGGGE6zyZAQyBRKl3feL%2FIB4RHamC4ruIiZZq%2FyadMQPnJzg17VRM1RsbGxwPPakdvJSGhgVdWetLw%2BMuE%2BeJVBVtohCA7%2B53cpbFmw2Kie1cjRND%2FvxxCppsGJq7gLbzKsisx%2F4FCuBiOduact9TvMdnZrdUEk9bPbOfSQ8ib%2BGBx2jbVr4EVzMUC08hhZ6WcgsZMiJ8O9zPOz9jUt5pSQMdj%2FLJYhhPKD5HqGUQQch9YydsO3TB3JKddp9PHYUGc4s75ypukProQ7hmOQ7iYPRt4%2FQUat0%2BvrCSudG1IxA%2B%2B3iVAj8E7CyZBlz6UamcF6JIRUctrcxdXmg%2FRcnJ45JuJOEGUvQiICQKBy5GQLPW9Uvx3st2ay1h1wIjoo0oSK%2BCmAEMs%2BqtglG3kkpnF8D%2FozJ4nz%2BZrEllgd6%2Bj861p%2BPR3DNgN7NM5N6HfFVEwuGT33BMefkFs9FKOLFjA2%2FSnulTWuKz%2BGK7UQEJOJIOBf%2B%2Bu0MiYrAZJC6LJLV02VdAlyE3rHrSIV95LePo759pShgDBdhuJqRi8zMf5ADpBLbEse0iAh8hGuIH%2FRdgq%2FdY5QpB71GIdwv%2Bp%2FICifZX3yihCe7vRFyvZGN2yyI5y9WJRR34QaesSbw%2FTO6uUhzLLiT0RX7TdW0LVtso%2FCDbknsgExR2N22lE9kdDqpHJTqpvycJ8kDpyC306BhpBPcGgWWz9VuW2wvKeIFLCGaOH2frAvJXCWlCClE8OzIUrPuFjXUOttBD7lQlAQw4P%2BLvwY6sQFRQjeQ4zoTJ7t59gQ%2BZMsP7cjY0FZrBwpX5OJ8%2BdsyD0hwsG8Qm7I%2FLKjmf9OELWAhxYnTfofoLBJw0p4AVHxMfO3WroNFjmjK9X%2By6CoOTOAZiaDy6fGoEHRBqI8FRPQTxIkro5ivWeGB9JMJyokXE99meitqaPwgvEvyU9Am1ZYA14lQJJavntnUgBdQR8G5I7hRyu0dJIHSLkHRaH0mEvfuY%2BZ9lvV30ECI6u6X7Jw%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=f4e374c4536ba6f2a066568fb9e7ad4fe79e40d164a6dd1d2d641c4778d944ac"
  },
  "disclosed_date": 1618092900,
  "report_url": "https://hackerone.com/reports/1110229",
  "is_multi_component": true,
  "complexity": "MEDIUM",
  "novelty": "MEDIUM",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Search the following in the DuckDuckGo search bar: `urban dictionary \"><img src=x<`"
    ],
    [
      2,
      "Observe that the payload renders and executes JavaScript on the DuckDuckGo page"
    ]
  ],
  "vuln_description": "A stored XSS vulnerability exists in DuckDuckGo's search results, where a payload left on urbandictionary.com can trigger HTML injection and JavaScript execution when the search results are rendered on DuckDuckGo's main page. This allows an attacker to execute arbitrary JavaScript in the context of DuckDuckGo's domain.",
  "reason": "The vulnerability involves a straightforward injection of a payload into a third-party site (urbandictionary.com) that is then reflected in DuckDuckGo's search results. The discovery does not require complex interactions or manipulation of application states, and the XSS payload is a common and well-known pattern.",
  "new_complexity": "LOW",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "authnz_metadata": {
    "reason": "The XSS vulnerability involves HTML injection and stored XSS triggered by a search parameter, which is not directly related to authentication or authorization boundaries. The methodology described focuses on testing AuthN/AuthZ bypasses and IDOR by manipulating user sessions and resource IDs, which does not apply to this XSS scenario.",
    "is_detectable": false
  },
  "injection_metadata": {
    "reasoning": "The reported stored XSS vulnerability meets the methodology criteria because:\n1. The injection vector (search parameter) would be logged during regular navigation\n2. The payload \"\\\"><img src=x\" qualifies as a simple context-positioning XSS payload without filter bypass techniques\n3. The execution is detectable through same-channel response inspection (HTML rendering in search results)\n4. Triggering requires only regular navigation to the crafted URL, fitting the 'same channel' requirement\n5. No role-specific permissions or complex navigation patterns are needed for reproduction",
    "is_simple_injection": true
  }
}