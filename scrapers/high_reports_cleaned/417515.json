{
    "reported_to": "Monero",
    "reported_by": "keejef ",
    "title": "Locked_Transfer functional burning",
    "content": "\nSummary: Using the locked_transfer command in the monero-wallet-cli users can send outputs with high lock times like 1,000,000 blocks. A vendor will accept these transactions with no warnings and credit a user balance. The user can now withdrawal or sell this balance and the vendor is left with outputs that will not unlock for 1000s of years.\nDescription:\nThis bug essentially exploits the use of the show_transfers command by vendors that credit balances, functionally the result is the same as the double output bug found a week ago. It is presumed at this point that anything in the Cryptonote/ Monero protocol that can show a valid transfer in show_transfers will be accepted by vendors, even if it creates un-spendable or functionality un-spendable outputs.\nReleases Affected:\n0.12.3.0 Lithium Luna - All Operating Systems\nCurrent Monero master\nThis will also affect all Cryptonote coins with locked_transfer and exchanges that use show_transfers\nSteps To Reproduce:\nTransfer Monero or other Cryptonote coin to wallet-cli\nUse locked_transfer set a high amount lockblocks, send to exchange or other vendor that will credit your balance.\nSell, or withdrawal your currency on the exchange, leaving them with locked coins, the attacker only loses the minimal fee that the exchange charges, while the exchange is left with un-spendable coins.\nThis bug has been tested against two separate exchanges with very small amounts of Monero, that will unlock after 4 months. This method will likely be effective against all exchanges that use show_transfers as a method of auditing incoming transactions (which i think is nearly all of them).\nP.S. Discovery of bugs like these would not be possible without the help of my coworkers at Loki, so i want to thank them for their help brainstorming on this one.\nImpact\nThis bug cannot be used to create new Monero but it can be used to attack Monero vendors with coins they can functionally never spend.\n\n",
    "severity": [
        8.1,
        null
    ],
    "bounty": null,
    "weaknesses": [
        "None"
    ],
    "screenshots": {},
    "disclosed_date": 1562723160,
    "report_url": "https://hackerone.com/reports/417515",
    "is_multi_component": false,
    "complexity": "MEDIUM",
    "novelty": "MEDIUM",
    "vuln_category": "CODE",
    "steps": [
        [
            1,
            "Transfer Monero or other Cryptonote coin to wallet-cli"
        ],
        [
            2,
            "Use locked_transfer to send coins to an exchange with a high lock time (e.g., 1,000,000 blocks)"
        ],
        [
            3,
            "Sell or withdraw the credited balance on the exchange before the lock expires"
        ],
        [
            4,
            "The exchange is left with unspendable locked coins"
        ]
    ],
    "vuln_description": "This vulnerability allows attackers to exploit the locked_transfer feature in Monero (and other Cryptonote-based coins) by sending outputs with extremely long lock times (e.g., 1,000,000 blocks). Exchanges and vendors that rely on show_transfers to credit balances will accept these transactions, allowing the attacker to withdraw or sell the credited funds while leaving the exchange with functionally unspendable coins.",
    "reason": "The vulnerability involves understanding the interaction between locked_transfer functionality and how exchanges process incoming transactions. While the attack itself is straightforward once the interaction is known, discovering it required insight into both the wallet's locked_transfer feature and exchange auditing practices.",
    "new_complexity": "MEDIUM",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}