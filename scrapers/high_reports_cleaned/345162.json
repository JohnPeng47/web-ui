{
  "reported_to": "RATELIMITED",
  "reported_by": "z0mb13 ",
  "title": "Local File Download",
  "content": "\nSummary: This bug affects suuport.ratelimited.me and can be used by attackers to download local file from your servers including your emails, and files uploaded by your admins and other users.\nDescription: While starting a conversation with your support agent, I noticed an option to upload a file. And after it was being uploaded it was included with a \"blob_id\" parameter. it is vulnerable and is leading to download of all the files on your support server.\nSteps To Reproduce:\nFollow the above steps as mentioned in description to get to the request mentioned below.]\nCode 966 Bytes\n1GET /chat/send-attach/583-5PH467W8RA2NCWJ?__sid=583-5PH467W8RA2NCWJ&send_blob_id=485&_=1525115609706 HTTP/1.1\n2Host: support.ratelimited.me\n3User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:59.0) Gecko/20100101 Firefox/59.0\n4Accept: application/json, text/javascript, */*; q=0.01\n5Accept-Language: en-US,en;q=0.5\n6Accept-Encoding: gzip, deflate\n7Referer: https://support.ratelimited.me/widget/chat.html?dpsid=583-5PH467W8RA2NCWJ&parent_url=https%3A%2F%2Fsupport.ratelimited.me%2Fprofile\n8X-Requested-With: XMLHttpRequest\n9Cookie: __cfduid=debed713d869308c24159d6b0ce4df2481525076018; dpsid=583-5PH467W8RA2NCWJ; dpvc=11941-DH6W43CBT3WHJQN; __unam=c0d18f2-16315a5f2ac-ba1665a-242; __utma=138098738.1674211735.1525076589.1525107067.1525114365.3; __utmc=138098738; __utmz=138098738.1525076589.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); dpvut=X635APM2; dpchat_sid=583-5PH467W8RA2NCWJ; __utmb=138098738.29.10.1525114365; __utmt=1; dpchatid=51\n10Connection: close\nAfter this I used a simple Intruder in the Burp suite to automate my requests to find out which blob_id numbers are giving a 200 Response. Attached a screenshot of the same.\nI was able to read your personal emails and all the server logs, also all the files uploaded by others and admins. I was also able to join a ticket due to an email which leaked the joining link.\nThe irony is I was also able to read the email sent by Hackerone support to start this program :D\nNo harm has been done, you can remove the screenshots from here after you fix this bug.\nSupporting Material/References:\nHave attached all the screenshots below which shows how harmful this could have been.\nImpact\nAll the files on the server are being leaked incuding personal emails and logs.\n\n",
  "severity": [
    9.0,
    10.0
  ],
  "bounty": null,
  "weaknesses": [
    "Improper Access Control - Generic"
  ],
  "screenshots": {},
  "disclosed_date": 1546373340,
  "report_url": "https://hackerone.com/reports/345162",
  "is_multi_component": false,
  "complexity": "MEDIUM",
  "novelty": "MEDIUM",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Start a conversation with the support agent and upload a file to obtain a 'blob_id' parameter."
    ],
    [
      2,
      "Use a tool like Burp Suite to automate requests with different 'blob_id' values to identify accessible files."
    ]
  ],
  "vuln_description": "The vulnerability allows an attacker to download local files from the server by manipulating the 'blob_id' parameter in the file upload functionality. This exposes sensitive data such as emails, server logs, and files uploaded by other users and admins.",
  "reason": "The attack involves identifying a vulnerable parameter ('blob_id') and exploiting it through automated requests, which is a straightforward process once the parameter is discovered. The interaction between the file upload and the 'blob_id' parameter is not subtle or complex.",
  "new_complexity": "LOW",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "idor_detectable": true,
  "authnz_byppass_detectable": false,
  "is_simple_payload": false,
  "injection_metadata": {
    "is_simple_payload": false
  },
  "authnz_metadata": {
    "reason": "The vulnerability involves an IDOR (Insecure Direct Object Reference) where the 'blob_id' parameter can be manipulated to access files that should not be accessible. This fits the methodology's test case e) where new resource_ids (blob_ids) are substituted with existing ones to test for authorization boundaries being crossed. The methodology would capture the (user_session, action, resource_id) tuples during normal navigation and then test for unauthorized access by swapping blob_ids.",
    "is_detectable": true
  }
}