{
    "reported_to": "U.S. Dept Of Defense",
    "reported_by": "lubak ",
    "title": "Authorization bypass -> IDOR -> PII Leakage",
    "content": "\nHi team!\nDuring testing \u2588\u2588\u2588\u2588 I found javascript file containing administrative panel functionality.\nIt is accessible at:\nhttps://\u2588\u2588\u2588\u2588/\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nIn this file I found an end point responsible for returning data about applications of the website users to the website administrators.\nThe returned data contains PII data (Full name, phone and email) of military personnel, and or their family members.\nReferences\nSteps to reproduce:\nRun following curl command to retrieve data:\ncurl https://\u2588\u2588\u2588/\u2588\u2588\u2588 -X POST -data=\"url=%2F\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\" -k\nModifying \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 parameter result in different Application being returned.\nI have tested retrieving following ids: \u2588\u2588\u2588\u2588\u2588.\nTrying to retrieve record 60000 returns no information, so maybe ~50000 applications are accessible.\nImpact\nPII leak of military personnel and family members\nSystem Host(s)\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nAffected Product(s) and Version(s)\n/\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nCVE Numbers\nSteps to Reproduce\nRun following command to retrieve data:\ncurl https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588/\u2588\u2588\u2588 -X POST -data=\"url=%2F\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\" -k\nModifying \u2588\u2588\u2588\u2588\u2588\u2588 parameter result in different Application being returned.\nI have tested retrieving following ids: \u2588\u2588\u2588.\nTrying to retrieve record 60000 returns no information, so maybe ~50000 applications are accessible.\nSuggested Mitigation/Remediation Actions\nadmin.js should be available only after Administrator successfully logs in\nall administrative end points must check if authorized administrator is requesting them\n\n",
    "severity": [
        7.0,
        8.9
    ],
    "bounty": null,
    "weaknesses": [
        "Insecure Direct Object Reference (IDOR)"
    ],
    "screenshots": {},
    "disclosed_date": 1649376120,
    "report_url": "https://hackerone.com/reports/1489470",
    "is_multi_component": false,
    "complexity": "MEDIUM",
    "novelty": "LOW",
    "vuln_category": "WEB_APP",
    "steps": [
        [
            1,
            "Run the curl command: curl https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588/\u2588\u2588\u2588 -X POST -data=\"url=%2F\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\" -k"
        ],
        [
            2,
            "Modify the \u2588\u2588\u2588\u2588\u2588\u2588 parameter to retrieve different application records"
        ]
    ],
    "vuln_description": "The vulnerability involves an IDOR (Insecure Direct Object Reference) issue in an administrative endpoint that allows unauthorized access to PII (Personally Identifiable Information) of military personnel and their family members by manipulating the application ID parameter in the request.",
    "reason": "The vulnerability is straightforward to discover as it involves a direct manipulation of a parameter in a request to access unauthorized data. The attack does not require complex interactions or understanding of multiple components, making it relatively simple to identify and exploit.",
    "new_complexity": "LOW",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null,
    "idor_detectable": true,
    "authnz_byppass_detectable": true,
    "is_simple_payload": false,
    "injection_metadata": {
        "is_simple_payload": false
    },
    "authnz_metadata": {
        "idor_detectable": true,
        "authnz_byppass_detectable": true
    }
}