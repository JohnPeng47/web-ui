{
  "reported_to": "Semmle",
  "reported_by": "flamezzz ",
  "title": "DOMXSS in redirect param",
  "content": "\nSummary\nThe redirect param can consist of a javascript: url, which results in XSS. If a victim visits a malicious URL and logs in, the attacker can perform actions on behalf of the victim.\nSteps to reproduce\n1) Logout\n2) Visit https://lgtm-com.pentesting.semmle.net/?redirect=javascript:prompt(document.domain)%2f%2f\n3) Log in through email\nImpact\nIf a victim visits a malicious URL and logs in, the attacker can perform actions on behalf of the victim.\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Cross-site Scripting (XSS) - DOM"
  ],
  "screenshots": {},
  "disclosed_date": 1553099640,
  "report_url": "https://hackerone.com/reports/361287",
  "is_multi_component": false,
  "complexity": "LOW",
  "novelty": "LOW",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Logout from the application"
    ],
    [
      2,
      "Visit the URL: https://lgtm-com.pentesting.semmle.net/?redirect=javascript:prompt(document.domain)%2f%2f"
    ],
    [
      3,
      "Log in through email"
    ]
  ],
  "vuln_description": "The redirect parameter in the URL can be manipulated to include a JavaScript URL, leading to DOM-based XSS. When a victim visits a maliciously crafted URL and logs in, the attacker can execute arbitrary JavaScript in the context of the victim's session, potentially performing actions on their behalf.",
  "reason": "The vulnerability involves a straightforward manipulation of a URL parameter to inject JavaScript, which is a common and well-documented attack vector. The steps to reproduce are simple and do not require complex interactions or understanding of intricate application states.",
  "new_complexity": "LOW",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "injection_metadata": {
    "reasoning": "The DOMXSS vulnerability uses the 'redirect' parameter with a javascript: URL payload. The methodology would log this parameter during regular navigation (e.g., in login flows). The payload 'javascript:prompt(...)' fits simple payload criteria (common XSS vector without custom bypasses). Execution occurs in the same channel after login, which qualifies as regular navigation behavior. The methodology's parameter extraction and simple payload testing would detect this.",
    "is_simple_injection": true
  },
  "authnz_metadata": {
    "reason": "The DOMXSS vulnerability involves a redirect parameter that can execute JavaScript when a user logs in, which is a client-side issue. The proposed methodologies focus on server-side authorization and authentication checks (e.g., IDOR, AuthN/AuthZ bypass) by manipulating user sessions, actions, and resource IDs. Since the DOMXSS issue does not involve these server-side authorization boundaries or resource access controls, it would not be detected by the described methodologies.",
    "is_detectable": false
  }
}