{
  "reported_to": "U.S. Dept Of Defense",
  "reported_by": "5050thepiguy ",
  "title": "Stored XSS at \u2588\u2588\u2588\u2588\u2588\u2588userprofile.aspx",
  "content": "\nSummary:\nStored XSS vulnerability exists at \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588userprofile.aspx under \"say something about yourself...\". XSS can be used for a variety of attacks.\nImpact\nXSS can be used to steal cookies, password or to run arbitrary code in the victim's browser.\nStep-by-step Reproduction Instructions\nCreate an account at \u2588\u2588\u2588\u2588\u2588\u2588\u2588\nGo to your profile at \u2588\u2588\u2588\u2588userprofile.aspx\nGo to \"Say something about yourself...\" and enter the XSS payload xxx<svg/onload=alert(document.cookie);>xxx\nObserve that XSS triggers and reload the page to observe that it is stored XSS.\nProduct, Version, and Configuration (If applicable)\n\u2588\u2588\u2588userprofile.aspx#\nSuggested Mitigation/Remediation Actions\nUse secure coding techniques such as sanitizing input into form fields so attackers cannot inject scripts to perform XSS attacks. XSS vulnerabilities come from a lack of data escaping.\nReferences\nhttps://hackerone.com/reports/858255\nhttps://dzone.com/articles/reflected-xss-explained-how-to-prevent-reflected-x\nhttps://www.imperva.com/learn/application-security/reflected-xss-attacks/\nhttps://www.hacksplaining.com/prevention/xss-reflected\nImpact\nXSS can be used to steal cookies, password or to run arbitrary code in the victim's browser.\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Cross-site Scripting (XSS) - Stored"
  ],
  "screenshots": {},
  "disclosed_date": 1594244280,
  "report_url": "https://hackerone.com/reports/901377",
  "is_multi_component": false,
  "complexity": "LOW",
  "novelty": "LOW",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Create an account at \u2588\u2588\u2588\u2588\u2588\u2588\u2588"
    ],
    [
      2,
      "Go to your profile at \u2588\u2588\u2588\u2588userprofile.aspx"
    ],
    [
      3,
      "Go to 'Say something about yourself...' and enter the XSS payload xxx<svg/onload=alert(document.cookie);>xxx"
    ],
    [
      4,
      "Observe that XSS triggers and reload the page to observe that it is stored XSS."
    ]
  ],
  "vuln_description": "Stored XSS vulnerability exists at \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588userprofile.aspx under 'say something about yourself...'. XSS can be used for a variety of attacks, including stealing cookies, passwords, or running arbitrary code in the victim's browser.",
  "reason": "The attack involves a straightforward injection of a script into a form field, which is a common and well-documented vulnerability. There are no complex interactions or states involved, and the payload is a standard XSS test.",
  "new_complexity": "LOW",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": "858255",
  "authnz_metadata": {
    "reason": "The XSS vulnerability involves injecting malicious scripts into a form field, which is not directly related to authentication or authorization bypass. The methodology described focuses on testing different user sessions and resource IDs for authN/authZ issues, not input validation vulnerabilities like XSS.",
    "is_detectable": false
  },
  "injection_metadata": {
    "reasoning": "The stored XSS vulnerability involves injecting a payload into the 'Say something about yourself...' field, which persists and triggers upon page reload. The methodology's 'simple payload' approach would detect this because:\n1. The parameter would be identified as injectable during request/response logging.\n2. The <svg/onload=alert(...)> payload is a standard XSS test vector that doesn't require filter bypass.\n3. The payload execution is observable through regular navigation (reloading profile page), satisfying 'same channel' detection requirements.\n4. No custom filter evasion techniques are needed for this basic payload.",
    "is_simple_injection": true
  }
}