{
    "reported_to": "Shopify",
    "reported_by": "dostoevskylabs ",
    "title": "Reflective Cross-site Scripting via Newsletter Form",
    "content": "\n*.myshopify.com is vulnerable to a reflective cross-site scripting attack in the newsletter form. This can be crafted to trigger on a page load without any further user interaction.\nThe following example url shows this vulnerability:\nCode 123 Bytes\n1https://testbuguser.myshopify.com/?contact[email]%20onfocus%3djavascript:alert(%27xss%27)%20autofocus%20a=a&form_type[a]aaa\nThis was tested on a newly registered store \"testbuguser.myshopify.com\"\nIf you require any additional details, please do not hesitate to bump.\nImpact\nThis attack could be leveraged to compromise administrative sessions or perform actions on behalf of users with the same level of privilege as the user.\n\n",
    "severity": [
        7.0,
        8.9
    ],
    "bounty": 2000,
    "weaknesses": [
        "Cross-site Scripting (XSS) - Reflected"
    ],
    "screenshots": {},
    "disclosed_date": 1570829880,
    "report_url": "https://hackerone.com/reports/709336",
    "is_multi_component": false,
    "complexity": "LOW",
    "novelty": "LOW",
    "vuln_category": "WEB_APP",
    "steps": [
        [
            1,
            "Navigate to the vulnerable URL: https://testbuguser.myshopify.com/?contact[email]%20onfocus%3djavascript:alert(%27xss%27)%20autofocus%20a=a&form_type[a]aaa"
        ],
        [
            2,
            "Observe the execution of the JavaScript alert when the page loads, indicating the presence of the XSS vulnerability."
        ]
    ],
    "vuln_description": "The vulnerability is a reflective cross-site scripting (XSS) issue in the newsletter form of a Shopify store. It allows an attacker to inject malicious JavaScript code that executes when the page loads, without requiring any user interaction. This can be exploited to compromise administrative sessions or perform actions on behalf of users.",
    "reason": "The vulnerability involves a straightforward injection of JavaScript code into a URL parameter, which is a common and well-documented attack vector. The discovery does not require understanding complex application states or novel logic, making it relatively easy to identify.",
    "new_complexity": "LOW",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null,
    "authnz_metadata": {
        "reason": "The vulnerability involves a reflective XSS in a form parameter that can be triggered without user interaction. This is not directly related to authentication or authorization bypass, but rather a client-side injection vulnerability. The proposed methodologies focus on testing authorization boundaries by swapping user sessions and resource IDs, which doesn't apply to this XSS vulnerability.",
        "is_detectable": false
    }
}