{
  "reported_to": "MTN Group",
  "reported_by": "tinopreter ",
  "title": "Yet Another OTP code Leaked in the API Response",
  "content": "\nSummary:\nThis is much similar to my report here(https://hackerone.com/reports/2633888) , except it affects a different domain. The application requests a phone number for authentication, then sends an OTP code to the user. But the OTP is leaked in the response which defeats the whole purpose of it's implementation.\nSteps To Reproduce:\nSupporting Material/References:\nhttps://hackerone.com/reports/2633888\nRecommendation\nDon't return the OTP code in the API's response\nImpact\nIt's possible to sign up with other users accounts. It's possible to log into other users accounts as well. Another thing I noticed is that, you can sign up with any 10-digit phone number since the OTP is in the response for you to use, makes creating junk accounts easily possible.\n\n",
  "severity": [
    9.1,
    null
  ],
  "bounty": null,
  "weaknesses": [
    "Improper Authentication - Generic"
  ],
  "screenshots": {},
  "disclosed_date": 1736350980,
  "report_url": "https://hackerone.com/reports/2635315",
  "is_multi_component": false,
  "complexity": "LOW",
  "novelty": "LOW",
  "vuln_category": "API",
  "steps": [
    [
      1,
      "Enter a phone number for authentication on the vulnerable domain."
    ],
    [
      2,
      "Observe the API response containing the OTP code that was sent to the phone number."
    ]
  ],
  "vuln_description": "The application leaks the OTP code in the API response after requesting a phone number for authentication, allowing attackers to bypass the OTP verification process and potentially sign up or log in as other users.",
  "reason": "The vulnerability is straightforward to discover as it only involves observing the API response after submitting a phone number. There are no complex interactions or state manipulations required.",
  "new_complexity": "LOW",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": "2633888",
  "idor_detectable": false,
  "authnz_byppass_detectable": true,
  "is_simple_payload": false,
  "injection_metadata": {
    "is_simple_payload": false
  },
  "authnz_metadata": {
    "reasoning": "The OTP leakage in the API response does not involve session/resource_ID substitution or authorization boundary testing as described in the methodologies. The vulnerability stems from sensitive data exposure in server responses, which is not detected by the outlined authN/authZ testing patterns that focus on action/resource access control rather than response content inspection.",
    "is_simple_authnz": false
  }
}