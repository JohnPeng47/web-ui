{
    "reported_to": "Ruby",
    "reported_by": "dataalchemist ",
    "title": "Writable RubyCi Amazon s3 bucket",
    "content": "\nHello, I have discovered that the bucket:\n<image_0>\nis able to be written to by authenticated aws users. This is due to the current permissions configurations\nI have added a file here:\n<image_1>\nfor proof of concept. This can be potentially dangerous to your users and website, as any of the web content in this bucket may be replaced with malicious files.\nMore info about these permissions can be found here: http://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\n\n",
    "severity": [
        7.0,
        8.9
    ],
    "bounty": 500,
    "weaknesses": [
        "Improper Authentication - Generic"
    ],
    "screenshots": {
        "image_0": "http://rubyci.s3.amazonaws.com/",
        "image_1": "http://rubyci.s3.amazonaws.com/test.html"
    },
    "disclosed_date": 1488179100,
    "report_url": "https://hackerone.com/reports/207053",
    "is_multi_component": false,
    "complexity": "LOW",
    "novelty": "LOW",
    "vuln_category": "API",
    "steps": [
        [
            1,
            "Identify the target Amazon S3 bucket (e.g., RubyCi bucket)"
        ],
        [
            2,
            "Attempt to write a file to the bucket using authenticated AWS credentials"
        ]
    ],
    "vuln_description": "The vulnerability involves an Amazon S3 bucket (RubyCi) that is misconfigured to allow write access to authenticated AWS users. This misconfiguration can lead to unauthorized modifications or replacements of web content with malicious files.",
    "reason": "The discovery of this vulnerability is straightforward as it only requires checking the bucket's permissions and attempting to write a file. There are no complex interactions or states involved, and the logic is common in S3 bucket misconfigurations.",
    "new_complexity": "LOW",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null,
    "idor_detectable": false,
    "authnz_byppass_detectable": true,
    "is_simple_payload": true,
    "injection_metadata": {
        "is_simple_payload": true
    },
    "authnz_metadata": {
        "idor_detectable": false,
        "authnz_byppass_detectable": false
    }
}