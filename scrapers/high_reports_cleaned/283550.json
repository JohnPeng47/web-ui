{
    "reported_to": "Infogram",
    "reported_by": "geekninja ",
    "title": "Password Reset Token Not Expired ",
    "content": "\nHello Team,\nHere in this scenario, I've found that the there's a kind of server side invalidation of Password Reset tokens. Like if I've requested for password reset token (token1) and I don't use it, after I will make another request for password reset token (token2). This time I'll use the token2 means the link that I requested for the second time, so the first token (token1) should explicitly expire by the server. But here I can use the token1 also after password change by token2, this is unusual behavior of web application.\nExploit Scenario:\nIf victim's email account is still logged into his/her Office Computers or any public Internet Cafe. Then any external attacker can use the unused token to reset victims token.\nProof of Concept:\n1)Go to https://infogram.com/forgot and ask for password reset link.\n2)Don't use the link keep it in Email inbox.\n3)After some time repeat the step 1.\n4)This time use the password reset link which was asked in step 3. means the 2nd link.\n5)After changing the password, use the password reset link that was captured in step 1.\n6)You'll see the password reset link is not expired even after password change.\n7)I've also explained you the Exploit Scenario, now its all upto you.\nRegards,\nAli Razzaq\n\n",
    "severity": [
        7.0,
        8.9
    ],
    "bounty": null,
    "weaknesses": [
        "Weak Password Recovery Mechanism for Forgotten Password"
    ],
    "screenshots": {},
    "disclosed_date": 1509369600,
    "report_url": "https://hackerone.com/reports/283550",
    "is_multi_component": false,
    "complexity": "LOW",
    "novelty": "LOW",
    "vuln_category": "WEB_APP",
    "steps": [
        [
            1,
            "Go to the password reset page and request a password reset link (token1). Do not use this link."
        ],
        [
            2,
            "Request a second password reset link (token2) and use it to change the password."
        ],
        [
            3,
            "Attempt to use the first password reset link (token1) after the password has been changed using token2."
        ],
        [
            4,
            "Observe that token1 is still valid and can be used to reset the password again."
        ]
    ],
    "vuln_description": "The vulnerability involves the server not invalidating previous password reset tokens when a new token is generated and used. This allows an attacker to use an older, unused token to reset the password even after a new token has been used, potentially compromising the account if the older token was intercepted or accessed.",
    "reason": "The attack involves understanding the token generation and invalidation mechanism, which is a common but not always obvious behavior. The tester needed to observe the interaction between multiple tokens and their validity states, which requires some understanding of session management but does not involve highly complex or novel logic.",
    "new_complexity": "MEDIUM",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}