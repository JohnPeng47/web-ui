{
    "reported_to": "U.S. Dept Of Defense",
    "reported_by": "un4gi ",
    "title": "Arbitrary file upload and stored XSS via \u2588\u2588\u2588 support request",
    "content": "\nSummary:\nA malicious user can upload files of any type when submitting a support request.\nImpact\nThis would allow the attacker to upload malicious executable files as well as .html or .svg files which would allow the attacker to execute malicious code on behalf of the \u2588\u2588\u2588\u2588 customer support representative.\nStep-by-step Reproduction Instructions\nBrowse to\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 and create an account or sign in if you already have an account.\nClick \u2588\u2588\u2588\u2588\u2588 Faculty/Staff IT Support. \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nClick \u2588\u2588\u2588\u2588\u2588\u2588 Support \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nComplete the form and upload a file of your choice. Click Submit. \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nYou will see that your request has been created, and your files are readily available for download. \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nIf the customer support representative downloads the executable, their machine could be compromised. This is unlikely, however what is more likely is for the representative to open a malicious .svg (or .xls/.doc/etc.) file. \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nOpening the .svg file in a browser would fire the XSS. \u2588\u2588\u2588\u2588\u2588\u2588\u2588\nInstead of the alert(XSS) payload, an attacker could use window.location to redirect the user to a malicious website. They could also craft a fake login page that would appear to be the \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 login page. Once the unsuspecting user submits their credentials, the malicious page would redirect the user to the real login page and the users credentials would be stored on the attackers machine.\nSuggested Mitigation/Remediation Actions\nWhitelist allowed file types for upload (.pdf, .jpg, etc) as needed.\nImpact\nThis would allow the attacker to upload malicious executable files as well as .html or .svg files which would allow the attacker to execute malicious code on behalf of the \u2588\u2588\u2588\u2588\u2588 customer support representative.\n\n",
    "severity": [
        7.0,
        8.9
    ],
    "bounty": null,
    "weaknesses": [
        "Violation of Secure Design Principles"
    ],
    "screenshots": {},
    "disclosed_date": 1613693160,
    "report_url": "https://hackerone.com/reports/865354",
    "is_multi_component": true,
    "complexity": "MEDIUM",
    "novelty": "MEDIUM",
    "vuln_category": "WEB_APP",
    "steps": [
        [
            1,
            "Browse to the support request page and create an account or sign in if you already have one."
        ],
        [
            2,
            "Click on the Faculty/Staff IT Support option and complete the form, uploading a file of your choice."
        ],
        [
            3,
            "Submit the form and observe that the request is created with the uploaded file available for download."
        ],
        [
            4,
            "If a support representative downloads and opens the malicious file (e.g., .svg, .xls, .doc), the XSS payload executes."
        ]
    ],
    "vuln_description": "The vulnerability allows arbitrary file uploads in a support request system, enabling attackers to upload malicious files (e.g., executables, .svg, .html) that can execute code or trigger XSS when opened by support representatives.",
    "reason": "The attack is straightforward, involving only file upload and execution, without complex interactions or state manipulation. The vulnerability is common and well-documented in web security contexts.",
    "new_complexity": "LOW",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}