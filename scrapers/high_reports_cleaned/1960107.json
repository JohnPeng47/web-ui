{
  "reported_to": "inDrive",
  "reported_by": "spongebhav ",
  "title": "Rider can forcefully get passenger's order accepted resulting in multiple impacts including PII reveal  and more mentioned in the report.",
  "content": "\nSummary:\nHello Indrive Security Team,\nThis is going to be chain of attacks with major flow being in /api/setTenderStatus request allowing the attacker to get their ride request accepted automatically.\nSteps To Reproduce:\n1st major vulnerability:\n// Forcefully getting the passenger to accept the ride\nSection 1\nWhenever a rider/driver offers the passenger their price there is a request that is sent to /api/driverrequest\n\u2588\u2588\u2588\u2588\u2588\nNow after getting the tenderID and OrderID from that request, the rider sends the request in /api/setTenderStatus in this format\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nHere the orderID and tenderID is from step 1.\nThe ride gets accepted.\nThe impact for this is \"The rider can get details of any passenger, this includes phone number of passengers. Even when the passenger doesn't accept the riders offer.\"\nPlease keep in mind that this can be automated in real time to make this attack more efficien.\n2nd Chain vulnerability:\n// Chose a out of range price\nSection 2\nThis request is sent when the rider bids his price:\n\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\nThe rider can modify the price range to be of a much higher value than that.\nResulting in sending a bid that is significantly more\n// Combining this with above vulnerability we can get passenger to forcefully accept the ride of the customer.\nProvide the request in curl format, if possible\nFor vuln A:\nCode 192 Bytes\n1curl https://terra-akamai.indriverapp.com/api/setTenderStatus?cid=5957&locale=en_US&phone=\u2588\u2588\u2588\u2588&token=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&v=7&stream_id=1682280490209367&tender_id=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&order_id=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&status=accept\nFor vuln B:\nCode 361 Bytes\n1curl https://terra-akamai.indriverapp.com/api/driverrequest?cid=5957&locale=en_US&job_id=338f72ff-f3c1-4da0-af15-5d1aa720146b&phone=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&token=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&v=7&stream_id=1682279074257167&order_id=\u2588\u2588\u2588\u2588\u2588\u2588&client_id=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&shield_session_id=\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588&type=indriver&price=63&period=3&geo_arrival_time=1&distance=5&longitude=85.3249627&latitude=27.7390611&sn=1\nThank you so much.\nLet me know if you need any further help in reproducing this issue.\n@spongebhav\nImpact\nRevealing PII of customers even if customer didn't accept the rider's request.\nMaking customer accept a bid that is significantly higher tricking the customer into giving more money.\n\n",
  "severity": [
    8.1,
    null
  ],
  "bounty": null,
  "weaknesses": [
    "Improper Access Control - Generic"
  ],
  "screenshots": {},
  "disclosed_date": 1687958460,
  "report_url": "https://hackerone.com/reports/1960107",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "HIGH",
  "vuln_category": "API",
  "steps": [
    [
      1,
      "Intercept the tenderID and orderID from the /api/driverrequest endpoint when a rider/driver offers a price to a passenger."
    ],
    [
      2,
      "Use the intercepted tenderID and orderID to send a request to /api/setTenderStatus with status=accept, forcing the passenger to accept the ride without their consent."
    ],
    [
      3,
      "Optionally, manipulate the price parameter in the /api/driverrequest endpoint to submit a bid significantly higher than the allowed range."
    ],
    [
      4,
      "Combine the forced acceptance with the manipulated price to trick the passenger into paying more than intended."
    ]
  ],
  "vuln_description": "This vulnerability allows a rider to forcefully accept a passenger's ride request without their consent, leading to unauthorized access to the passenger's PII (such as phone number) and potential financial fraud by manipulating the bid price.",
  "reason": "The attack involves multiple components (intercepting IDs, manipulating API requests, and combining vulnerabilities) and requires understanding the application's flow and state. However, the steps are relatively straightforward once the API endpoints and parameters are identified.",
  "new_complexity": "MEDIUM",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "idor_detectable": true,
  "authnz_byppass_detectable": true,
  "is_simple_payload": false,
  "injection_metadata": {
    "is_simple_payload": false
  },
  "authnz_metadata": {
    "reasoning": "The vulnerability involves an attacker manipulating tender_id and order_id parameters to force acceptance of a ride request without proper authorization checks. This directly aligns with the IDOR methodology where (user_session, action, resource_id) tuples are tested by swapping resource_ids (tender_id/order_id) across sessions. The automated methodology would detect this by substituting these IDs and validating unauthorized access to PII/ride acceptance, falling under test case 4e (resource_id substitution).",
    "is_simple_authnz": true
  }
}