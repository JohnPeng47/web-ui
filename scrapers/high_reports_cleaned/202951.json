{
  "reported_to": "Informatica",
  "reported_by": "fillawful ",
  "title": "[marketplace.informatica.com]- Stored XSS on Image title and Edit Property",
  "content": "\nBy uploading and image with the title of \"><svg onload=alert(1)>.jpg and allowing anyone to edit the Document under collaboration settings, XSS can be triggered by any user attempting to edit the document.\nPOC\nLog into marketplace and go to profile page. Select New > Document\nChoose to upload document and browse to your image with the javascript payload as the name.\nEnter anything as Description and and tags field\nSelect visibility open to anyone\nExpand collaboration options and allow anyone to edit document. (This drastically increases security issue.)\nChoose to publish\nAfter publishing choose to Edit Document from the right hand menu and observe XSS.\nPlease see accompanying screenshots as POC\nPlease let me know if you need any more information. Cheers!\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "Cross-site Scripting (XSS) - Generic"
  ],
  "screenshots": {},
  "disclosed_date": 1492790760,
  "report_url": "https://hackerone.com/reports/202951",
  "is_multi_component": true,
  "complexity": "HIGH",
  "novelty": "MEDIUM",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Log into marketplace and go to profile page. Select New > Document."
    ],
    [
      2,
      "Upload an image with the title containing a JavaScript payload (e.g., \"><svg onload=alert(1)>.jpg)."
    ],
    [
      3,
      "Enter any description and tags, set visibility to 'open to anyone', and enable 'allow anyone to edit document' under collaboration options."
    ],
    [
      4,
      "Publish the document and then choose to edit it. Observe the XSS execution."
    ]
  ],
  "vuln_description": "A stored XSS vulnerability exists in the image title and edit property functionality of marketplace.informatica.com. By uploading an image with a malicious title and enabling collaborative editing, an attacker can execute arbitrary JavaScript when another user attempts to edit the document.",
  "reason": "The vulnerability involves a straightforward XSS payload in the image title, combined with enabling collaborative editing. The steps are simple and do not require complex interactions or deep understanding of the application's state or logic.",
  "new_complexity": "LOW",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "authnz_metadata": {
    "reason": "The vulnerability involves a stored XSS triggered by manipulating the image title during document editing. The methodology described focuses on authentication and authorization issues (IDOR, AuthN/AuthZ bypass) by swapping user sessions and resource IDs. Since XSS is a client-side vulnerability and not directly related to authentication or authorization boundaries, it would not be detected by the proposed methodology.",
    "is_detectable": false
  },
  "injection_metadata": {
    "reasoning": "The XSS vulnerability involves injecting a payload into the image title parameter during document upload. The methodology captures HTTP requests during regular navigation, identifying the title as an injectable parameter. A simple payload (e.g., '><svg onload=alert(1)>) is used without custom bypass. The stored XSS triggers when editing the document, which is a regular navigation action on the same application. Since the payload execution is detectable through standard user interaction and requires no advanced filter bypass, it aligns with the 'simple payload' criteria.",
    "is_simple_injection": true
  }
}