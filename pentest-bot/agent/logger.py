# logger_core.py
import logging
import os
from datetime import datetime
from pathlib import Path
import textwrap
from typing import Optional
from pathlib import Path

from logger import LOG_DIR, get_console_handler, get_file_handler

LOG_DIR = Path(LOG_DIR)
INDENT_LEN = 100
INDENT_STR = ""

class IndentFormatter(logging.Formatter):
    def __init__(self, fmt: str, datefmt: Optional[str] = None) -> None:
        super().__init__(fmt, datefmt)

    def format(self, record: logging.LogRecord) -> str:
        wrapped = []
        for para in record.getMessage().splitlines() or [""]:
            wrapped.extend(
                textwrap.wrap(
                    para,
                    width=INDENT_LEN,
                    subsequent_indent=INDENT_STR,
                    break_long_words=False,
                    replace_whitespace=False,
                )
            )
        record.wrapped_msg = "\n".join(wrapped)
        return super().format(record)

# --------------------------------------------------------------------------- #
#  public API
# --------------------------------------------------------------------------- #
def setup_agent_logger(eval_name: str,
                       *,
                       name: str = "agentlog",
                       level: int = logging.INFO) -> None:

    logger = logging.getLogger(name)
    if getattr(logger, "_initialised", False):
        return                      # idempotent

    logger.setLevel(level)
    logger.addHandler(get_console_handler())

    # ------------------------------------------------------------------ #
    # directory layout:  <LOG_DIR>/pentest_bot/YYYY-MM-DD/N/<eval>.log
    # ------------------------------------------------------------------ #
    base_dir = LOG_DIR / "pentest_bot"                 # <── new line
    date_dir = base_dir / datetime.now().strftime("%Y-%m-%d")
    date_dir.mkdir(parents=True, exist_ok=True)

    run_id = max(
        (int(p.name) for p in date_dir.iterdir()
                      if p.is_dir() and p.name.isdigit()),
        default=-1,
    ) + 1
    run_dir = date_dir / str(run_id)
    run_dir.mkdir()

    log_file = run_dir / f"{eval_name}.log"
    fh = get_file_handler(log_file)
    fh.setFormatter(
        IndentFormatter(
            "%(asctime)s - %(name)s:%(levelname)s: "
            "%(filename)s:%(lineno)d - %(wrapped_msg)s",
            datefmt="%Y-%m-%d %H:%M:%S",
        )
    )
    logger.addHandler(fh)
    logger._initialised = True            # type: ignore[attr-defined]
