"""initial schema

Revision ID: eb16b292251c
Revises: 
Create Date: 2025-09-05 15:00:59.805848

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'eb16b292251c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('discoveryagent',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('agent_status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('max_steps', sa.Integer(), nullable=False),
    sa.Column('model_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('model_costs', sa.Float(), nullable=False),
    sa.Column('log_filepath', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('opik_prompt_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('opik_prompt_commit', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('agent_steps_data', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exploitagent',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('agent_status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('max_steps', sa.Integer(), nullable=False),
    sa.Column('model_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('model_costs', sa.Float(), nullable=False),
    sa.Column('log_filepath', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('opik_prompt_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('opik_prompt_commit', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('agent_steps_data', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pentestengagement',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('base_url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('domain_ownership_verified', sa.Boolean(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('findings', sa.JSON(), nullable=True),
    sa.Column('user_roles_data', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('authsession',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('session_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('engagement_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['engagement_id'], ['pentestengagement.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pentestengagementdiscoveryagent',
    sa.Column('pentest_engagement_id', sa.Uuid(), nullable=False),
    sa.Column('discovery_agent_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['discovery_agent_id'], ['discoveryagent.id'], ),
    sa.ForeignKeyConstraint(['pentest_engagement_id'], ['pentestengagement.id'], ),
    sa.PrimaryKeyConstraint('pentest_engagement_id', 'discovery_agent_id')
    )
    op.create_table('pentestengagementexploitagent',
    sa.Column('pentest_engagement_id', sa.Uuid(), nullable=False),
    sa.Column('exploit_agent_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['exploit_agent_id'], ['exploitagent.id'], ),
    sa.ForeignKeyConstraint(['pentest_engagement_id'], ['pentestengagement.id'], ),
    sa.PrimaryKeyConstraint('pentest_engagement_id', 'exploit_agent_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pentestengagementexploitagent')
    op.drop_table('pentestengagementdiscoveryagent')
    op.drop_table('authsession')
    op.drop_table('pentestengagement')
    op.drop_table('exploitagent')
    op.drop_table('discoveryagent')
    # ### end Alembic commands ###
