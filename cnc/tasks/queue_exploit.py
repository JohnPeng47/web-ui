from src.llm_models import openai_5
from src.detection.prompts import DetectAndSchedule
from src.agent.pages import PageObservations
from cnc.pools.pool import StartExploitRequest

from cnc.services.queue import BroadcastChannel

async def queue_exploit(
    payload: PageObservations, 
    exploit_agent_queue: BroadcastChannel[StartExploitRequest]
):
    llm_model = openai_5()
    detect = DetectAndSchedule()
    actions = await detect.ainvoke(
        llm_model,
        prompt_args={"pages": payload}
    )
    for action in actions:
        print("[ACTION] ", action.vulnerability_title)
        await exploit_agent_queue.publish(
            StartExploitRequest(
                page_item=action.page_item, 
                vulnerability_description=action.vulnerability_description, 
                vulnerability_title=action.vulnerability_title,
                max_steps=12
            )
        )
