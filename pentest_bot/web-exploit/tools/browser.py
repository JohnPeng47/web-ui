# src/tools/browser.py
from playwright.sync_api import sync_playwright
from typing import Tuple, Callable

def create_browser_check_xss(check_cb: Callable[[], bool]) -> Callable[[str, str, int], str]:
    """
    Creates a browser XSS check function with a predefined check callback.
    
    Args:
        check_cb: Callback function to check for XSS
        
    Returns:
        Function that takes (url, wait_until, timeout) and returns bool
    """
    def browser_check_xss(url: str, wait_until: str = "load", timeout: int = 10000) -> str:
        """
        Headless Chromium request through Playwright.

        Returns:
            (status_code, len(response_body))
        """
        with sync_playwright() as p:
            browser = p.chromium.launch(headless=True, args=["--no-sandbox"])
            context = browser.new_context()
            page = context.new_page()
            resp = page.goto(url, wait_until=wait_until, timeout=timeout)
            # `resp` is None if the navigation was served from cache
            status = resp.status if resp else 200
            body_len = len(page.content())
            browser.close()

            ret = "XSS Payload Executed" if check_cb() else "XSS Payload Not Executed"
            
            # print ret for agent to see
            print(ret)
            
            return ret
    return browser_check_xss

if __name__ == "__main__":
    from ..xss_client import register_xss_payload
    
    # Register XSS payload and get callback function
    check_cb, target_url = register_xss_payload()
    
    # Create the browser check function with the real callback
    browser_check = create_browser_check_xss(check_cb)
    
    # TODO: need to generate new payload to test
    # Test URL with XSS payload - use the target_url from the callback in the payload
    test_url = f"https://0aa4002104b02ebd82794c3900e80062.web-security-academy.net/?search=%22%3E%3Cscript%3Efetch%28%22{target_url}%22%29%3C/script%3E"
    

    browser_check(url="https://0a61001703561e7387c2c47400f300c7.web-security-academy.net/?search=<script>alert(1)</script>")
    
    # print(f"Testing XSS detection on: {test_url}")
    # print(f"Registered target URL: {target_url}")
    
    # result = browser_check(test_url)
    # print(f"XSS check result: {result}")


