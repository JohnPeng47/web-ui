from __future__ import annotations

from argparse import Namespace
from typing import List

from pentest_bot.db import get_session
from pentest_bot.db.tables.agent import get_runs_summary

from pentest_bot.cli_db.helpers import build_table, human_ts


def list_runs_cmd(args: Namespace) -> None:
    """List recent Run rows with aggregate result counts.

    Mirrors the behaviour of the original implementation that used to live
    in ``cli_db.py``.
    """

    limit = None if args.all else args.limit

    with get_session() as session:
        runs = get_runs_summary(session, limit=limit, eval_only=not args.all)

        header_field_mapping: List[tuple[str, str]] = [
            ("ID", "id"),
            ("Created", "created_at"),
            ("Model", "model_name"),
            ("Comment", "comment"),
            ("#Results", "total_results"),
            ("#Success", "successes"),
            ("#Steps", "total_steps"),
            ("Prompt", "opik_prompt_commit"),
        ]

        rows = [
            [
                str(r.id),
                human_ts(r.created_at),
                r.model_name or "",
                r.comment or "",
                str(int(r.total_results)),
                str(int(r.successes)),
                str(int(r.total_steps or 0)),
                (r.opik_prompt_commit or "")[:4],
            ]
            for r in runs
        ]

        headers = [h for h, _ in header_field_mapping]
        print(build_table(rows, headers)) 