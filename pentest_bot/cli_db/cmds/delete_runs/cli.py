from __future__ import annotations

from argparse import Namespace

from pentest_bot.db import get_session
from pentest_bot.db.tables.agent import delete_run


def delete_runs_cmd(args: Namespace) -> None:
    """Delete one or more Run rows by ID (single or inclusive range)."""

    run_ids = args.run_ids

    if len(run_ids) == 1:
        run_id = run_ids[0]
        with get_session() as session:
            if delete_run(session, run_id):
                print(f"[+] Deleted run {run_id}")
            else:
                print(f"[!] Run {run_id} not found")

    elif len(run_ids) == 2:
        start_id, end_id = run_ids
        if start_id > end_id:
            print(f"[!] Invalid range: {start_id} > {end_id}")
            return

        deleted_count = 0
        not_found_count = 0

        with get_session() as session:
            for run_id in range(start_id, end_id + 1):
                if delete_run(session, run_id):
                    deleted_count += 1
                    print(f"[+] Deleted run {run_id}")
                else:
                    not_found_count += 1
                    print(f"[!] Run {run_id} not found")

        print(f"\nSummary: {deleted_count} runs deleted, {not_found_count} not found")

    else:
        print("[!] Please provide either 1 run ID or 2 run IDs (start end)") 