from __future__ import annotations

from argparse import Namespace

from pentest_bot.db import get_session
from pentest_bot.db.tables.agent import get_run, get_agent_ctxt

from pentest_bot.cli_db.helpers import _build_table, _human_ts


def show_run_detailed_cmd(args: Namespace) -> None:
    """Print every step (full table) for each result in the run."""

    run_id = args.run_id

    with get_session() as session:
        run = get_run(session, run_id)
        if run is None:
            print(f"[!] Run ID {run_id} not found")
            return

        print(f"DETAILED STEPS FOR RUN {run_id} ({run.comment or 'no comment'})")

        if not run.results:
            print("<no child PentestResult rows>")
            return

        for result in run.results:
            print("\n" + ("-" * 80))
            status_str = "(Success)" if result.success else "(Failure)"
            print(f"PENTEST RESULT {result.id}: {result.eval_name} {status_str}")
            print(f"Log: {result.log_filepath}")
            print(f"Model: {result.model_name}, Cost: ${result.model_costs:.4f}")
            print("-" * 80)

            ctxt = get_agent_ctxt(session, result.id)
            if not ctxt:
                print("<no steps for this result>")
                continue

            headers = ["#", "Type", "Description"]
            rows = [[str(step.step_num), step.step_type or "",] for step in ctxt.steps()]
            print(_build_table(rows, headers, max_col=80)) 